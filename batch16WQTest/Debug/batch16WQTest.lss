
batch16WQTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002470  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000232  00800060  00002470  00002504  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000107  00800292  00800292  00002736  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002736  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002768  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d0  00000000  00000000  000027a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003100  00000000  00000000  00002974  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dde  00000000  00000000  00005a74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001789  00000000  00000000  00006852  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000644  00000000  00000000  00007fdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000af3  00000000  00000000  00008620  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002265  00000000  00000000  00009113  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  0000b378  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__ctors_end>
       4:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
       8:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
       c:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      10:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      14:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      18:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      1c:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      20:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      24:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      28:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      2c:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      30:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      34:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      38:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      3c:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      40:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      44:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      48:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      4c:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      50:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__bad_interrupt>
      54:	8e 07       	cpc	r24, r30
      56:	95 07       	cpc	r25, r21
      58:	95 07       	cpc	r25, r21
      5a:	95 07       	cpc	r25, r21
      5c:	95 07       	cpc	r25, r21
      5e:	95 07       	cpc	r25, r21
      60:	95 07       	cpc	r25, r21
      62:	95 07       	cpc	r25, r21
      64:	95 07       	cpc	r25, r21
      66:	95 07       	cpc	r25, r21
      68:	95 07       	cpc	r25, r21
      6a:	95 07       	cpc	r25, r21
      6c:	95 07       	cpc	r25, r21
      6e:	95 07       	cpc	r25, r21
      70:	95 07       	cpc	r25, r21
      72:	95 07       	cpc	r25, r21
      74:	95 07       	cpc	r25, r21
      76:	95 07       	cpc	r25, r21
      78:	95 07       	cpc	r25, r21
      7a:	95 07       	cpc	r25, r21
      7c:	95 07       	cpc	r25, r21
      7e:	95 07       	cpc	r25, r21
      80:	95 07       	cpc	r25, r21
      82:	95 07       	cpc	r25, r21
      84:	95 07       	cpc	r25, r21
      86:	95 07       	cpc	r25, r21
      88:	95 07       	cpc	r25, r21
      8a:	95 07       	cpc	r25, r21
      8c:	95 07       	cpc	r25, r21
      8e:	68 07       	cpc	r22, r24
      90:	e0 06       	cpc	r14, r16
      92:	03 07       	cpc	r16, r19
      94:	95 07       	cpc	r25, r21
      96:	78 07       	cpc	r23, r24
      98:	95 07       	cpc	r25, r21
      9a:	95 07       	cpc	r25, r21
      9c:	95 07       	cpc	r25, r21
      9e:	95 07       	cpc	r25, r21
      a0:	95 07       	cpc	r25, r21
      a2:	95 07       	cpc	r25, r21
      a4:	95 07       	cpc	r25, r21
      a6:	95 07       	cpc	r25, r21
      a8:	95 07       	cpc	r25, r21
      aa:	95 07       	cpc	r25, r21
      ac:	95 07       	cpc	r25, r21
      ae:	95 07       	cpc	r25, r21
      b0:	83 07       	cpc	r24, r19
      b2:	95 07       	cpc	r25, r21
      b4:	2e 07       	cpc	r18, r30
      b6:	95 07       	cpc	r25, r21
      b8:	95 07       	cpc	r25, r21
      ba:	4a 07       	cpc	r20, r26
      bc:	95 07       	cpc	r25, r21
      be:	95 07       	cpc	r25, r21
      c0:	95 07       	cpc	r25, r21
      c2:	95 07       	cpc	r25, r21
      c4:	95 07       	cpc	r25, r21
      c6:	95 07       	cpc	r25, r21
      c8:	95 07       	cpc	r25, r21
      ca:	95 07       	cpc	r25, r21
      cc:	95 07       	cpc	r25, r21
      ce:	58 07       	cpc	r21, r24
      d0:	e0 06       	cpc	r14, r16
      d2:	eb 06       	cpc	r14, r27
      d4:	95 07       	cpc	r25, r21
      d6:	78 07       	cpc	r23, r24
      d8:	95 07       	cpc	r25, r21
      da:	95 07       	cpc	r25, r21
      dc:	95 07       	cpc	r25, r21
      de:	95 07       	cpc	r25, r21
      e0:	95 07       	cpc	r25, r21
      e2:	95 07       	cpc	r25, r21
      e4:	95 07       	cpc	r25, r21
      e6:	95 07       	cpc	r25, r21
      e8:	95 07       	cpc	r25, r21
      ea:	95 07       	cpc	r25, r21
      ec:	95 07       	cpc	r25, r21
      ee:	95 07       	cpc	r25, r21
      f0:	83 07       	cpc	r24, r19
      f2:	95 07       	cpc	r25, r21
      f4:	20 07       	cpc	r18, r16
      f6:	95 07       	cpc	r25, r21
      f8:	95 07       	cpc	r25, r21
      fa:	3c 07       	cpc	r19, r28
      fc:	8e 07       	cpc	r24, r30
      fe:	95 07       	cpc	r25, r21
     100:	95 07       	cpc	r25, r21
     102:	95 07       	cpc	r25, r21
     104:	95 07       	cpc	r25, r21
     106:	95 07       	cpc	r25, r21
     108:	95 07       	cpc	r25, r21
     10a:	95 07       	cpc	r25, r21
     10c:	95 07       	cpc	r25, r21
     10e:	95 07       	cpc	r25, r21
     110:	95 07       	cpc	r25, r21
     112:	95 07       	cpc	r25, r21
     114:	95 07       	cpc	r25, r21
     116:	95 07       	cpc	r25, r21
     118:	95 07       	cpc	r25, r21
     11a:	95 07       	cpc	r25, r21
     11c:	95 07       	cpc	r25, r21
     11e:	95 07       	cpc	r25, r21
     120:	95 07       	cpc	r25, r21
     122:	95 07       	cpc	r25, r21
     124:	95 07       	cpc	r25, r21
     126:	95 07       	cpc	r25, r21
     128:	95 07       	cpc	r25, r21
     12a:	95 07       	cpc	r25, r21
     12c:	95 07       	cpc	r25, r21
     12e:	95 07       	cpc	r25, r21
     130:	95 07       	cpc	r25, r21
     132:	95 07       	cpc	r25, r21
     134:	95 07       	cpc	r25, r21
     136:	9f 07       	cpc	r25, r31
     138:	e0 06       	cpc	r14, r16
     13a:	02 07       	cpc	r16, r18
     13c:	95 07       	cpc	r25, r21
     13e:	78 07       	cpc	r23, r24
     140:	95 07       	cpc	r25, r21
     142:	95 07       	cpc	r25, r21
     144:	95 07       	cpc	r25, r21
     146:	95 07       	cpc	r25, r21
     148:	95 07       	cpc	r25, r21
     14a:	95 07       	cpc	r25, r21
     14c:	95 07       	cpc	r25, r21
     14e:	95 07       	cpc	r25, r21
     150:	95 07       	cpc	r25, r21
     152:	95 07       	cpc	r25, r21
     154:	95 07       	cpc	r25, r21
     156:	95 07       	cpc	r25, r21
     158:	83 07       	cpc	r24, r19
     15a:	95 07       	cpc	r25, r21
     15c:	2d 07       	cpc	r18, r29
     15e:	95 07       	cpc	r25, r21
     160:	95 07       	cpc	r25, r21
     162:	49 07       	cpc	r20, r25
     164:	95 07       	cpc	r25, r21
     166:	95 07       	cpc	r25, r21
     168:	95 07       	cpc	r25, r21
     16a:	95 07       	cpc	r25, r21
     16c:	95 07       	cpc	r25, r21
     16e:	95 07       	cpc	r25, r21
     170:	95 07       	cpc	r25, r21
     172:	95 07       	cpc	r25, r21
     174:	95 07       	cpc	r25, r21
     176:	57 07       	cpc	r21, r23
     178:	e0 06       	cpc	r14, r16
     17a:	ea 06       	cpc	r14, r26
     17c:	95 07       	cpc	r25, r21
     17e:	78 07       	cpc	r23, r24
     180:	95 07       	cpc	r25, r21
     182:	95 07       	cpc	r25, r21
     184:	95 07       	cpc	r25, r21
     186:	95 07       	cpc	r25, r21
     188:	95 07       	cpc	r25, r21
     18a:	95 07       	cpc	r25, r21
     18c:	95 07       	cpc	r25, r21
     18e:	95 07       	cpc	r25, r21
     190:	95 07       	cpc	r25, r21
     192:	95 07       	cpc	r25, r21
     194:	95 07       	cpc	r25, r21
     196:	95 07       	cpc	r25, r21
     198:	83 07       	cpc	r24, r19
     19a:	95 07       	cpc	r25, r21
     19c:	1f 07       	cpc	r17, r31
     19e:	95 07       	cpc	r25, r21
     1a0:	95 07       	cpc	r25, r21
     1a2:	3b 07       	cpc	r19, r27

000001a4 <__trampolines_end>:
     1a4:	00 40       	sbci	r16, 0x00	; 0
     1a6:	7a 10       	cpse	r7, r10
     1a8:	f3 5a       	subi	r31, 0xA3	; 163
     1aa:	00 a0       	ldd	r0, Z+32	; 0x20
     1ac:	72 4e       	sbci	r23, 0xE2	; 226
     1ae:	18 09       	sbc	r17, r8
     1b0:	00 10       	cpse	r0, r0
     1b2:	a5 d4       	rcall	.+2378   	; 0xafe <LCD_DisplayChar+0x6>
     1b4:	e8 00       	.word	0x00e8	; ????
     1b6:	00 e8       	ldi	r16, 0x80	; 128
     1b8:	76 48       	sbci	r23, 0x86	; 134
     1ba:	17 00       	.word	0x0017	; ????
     1bc:	00 e4       	ldi	r16, 0x40	; 64
     1be:	0b 54       	subi	r16, 0x4B	; 75
     1c0:	02 00       	.word	0x0002	; ????
     1c2:	00 ca       	rjmp	.-3072   	; 0xfffff5c4 <__eeprom_end+0xff7ef5c4>
     1c4:	9a 3b       	cpi	r25, 0xBA	; 186
     1c6:	00 00       	nop
     1c8:	00 e1       	ldi	r16, 0x10	; 16
     1ca:	f5 05       	cpc	r31, r5
     1cc:	00 00       	nop
     1ce:	80 96       	adiw	r24, 0x20	; 32
     1d0:	98 00       	.word	0x0098	; ????
     1d2:	00 00       	nop
     1d4:	40 42       	sbci	r20, 0x20	; 32
     1d6:	0f 00       	.word	0x000f	; ????
     1d8:	00 00       	nop
     1da:	a0 86       	std	Z+8, r10	; 0x08
     1dc:	01 00       	.word	0x0001	; ????
     1de:	00 00       	nop
     1e0:	10 27       	eor	r17, r16
     1e2:	00 00       	nop
     1e4:	00 00       	nop
     1e6:	e8 03       	fmulsu	r22, r16
     1e8:	00 00       	nop
     1ea:	00 00       	nop
     1ec:	64 00       	.word	0x0064	; ????
     1ee:	00 00       	nop
     1f0:	00 00       	nop
     1f2:	0a 00       	.word	0x000a	; ????
     1f4:	00 00       	nop
     1f6:	00 00       	nop
     1f8:	01 00       	.word	0x0001	; ????
     1fa:	00 00       	nop
     1fc:	00 00       	nop
     1fe:	2c 76       	andi	r18, 0x6C	; 108
     200:	d8 88       	ldd	r13, Y+16	; 0x10
     202:	dc 67       	ori	r29, 0x7C	; 124
     204:	4f 08       	sbc	r4, r15
     206:	23 df       	rcall	.-442    	; 0x4e <__SREG__+0xf>
     208:	c1 df       	rcall	.-126    	; 0x18c <__SREG__+0x14d>
     20a:	ae 59       	subi	r26, 0x9E	; 158
     20c:	e1 b1       	in	r30, 0x01	; 1
     20e:	b7 96       	adiw	r30, 0x27	; 39
     210:	e5 e3       	ldi	r30, 0x35	; 53
     212:	e4 53       	subi	r30, 0x34	; 52
     214:	c6 3a       	cpi	r28, 0xA6	; 166
     216:	e6 51       	subi	r30, 0x16	; 22
     218:	99 76       	andi	r25, 0x69	; 105
     21a:	96 e8       	ldi	r25, 0x86	; 134
     21c:	e6 c2       	rjmp	.+1484   	; 0x7ea <lcd_SendCmdSignals+0x32>
     21e:	84 26       	eor	r8, r20
     220:	eb 89       	ldd	r30, Y+19	; 0x13
     222:	8c 9b       	sbis	0x11, 4	; 17
     224:	62 ed       	ldi	r22, 0xD2	; 210
     226:	40 7c       	andi	r20, 0xC0	; 192
     228:	6f fc       	.word	0xfc6f	; ????
     22a:	ef bc       	out	0x2f, r14	; 47
     22c:	9c 9f       	mul	r25, r28
     22e:	40 f2       	brcs	.-112    	; 0x1c0 <__trampolines_end+0x1c>
     230:	ba a5       	ldd	r27, Y+42	; 0x2a
     232:	6f a5       	ldd	r22, Y+47	; 0x2f
     234:	f4 90       	lpm	r15, Z
     236:	05 5a       	subi	r16, 0xA5	; 165
     238:	2a f7       	brpl	.-54     	; 0x204 <__trampolines_end+0x60>
     23a:	5c 93       	st	X, r21
     23c:	6b 6c       	ori	r22, 0xCB	; 203
     23e:	f9 67       	ori	r31, 0x79	; 121
     240:	6d c1       	rjmp	.+730    	; 0x51c <GPIO_PinRead+0x16>
     242:	1b fc       	.word	0xfc1b	; ????
     244:	e0 e4       	ldi	r30, 0x40	; 64
     246:	0d 47       	sbci	r16, 0x7D	; 125
     248:	fe f5       	brtc	.+126    	; 0x2c8 <.do_clear_bss_loop>
     24a:	20 e6       	ldi	r18, 0x60	; 96
     24c:	b5 00       	.word	0x00b5	; ????
     24e:	d0 ed       	ldi	r29, 0xD0	; 208
     250:	90 2e       	mov	r9, r16
     252:	03 00       	.word	0x0003	; ????
     254:	94 35       	cpi	r25, 0x54	; 84
     256:	77 05       	cpc	r23, r7
     258:	00 80       	ld	r0, Z
     25a:	84 1e       	adc	r8, r20
     25c:	08 00       	.word	0x0008	; ????
     25e:	00 20       	and	r0, r0
     260:	4e 0a       	sbc	r4, r30
     262:	00 00       	nop
     264:	00 c8       	rjmp	.-4096   	; 0xfffff266 <__eeprom_end+0xff7ef266>
     266:	0c 33       	cpi	r16, 0x3C	; 60
     268:	33 33       	cpi	r19, 0x33	; 51
     26a:	33 0f       	add	r19, r19
     26c:	98 6e       	ori	r25, 0xE8	; 232
     26e:	12 83       	std	Z+2, r17	; 0x02
     270:	11 41       	sbci	r17, 0x11	; 17
     272:	ef 8d       	ldd	r30, Y+31	; 0x1f
     274:	21 14       	cp	r2, r1
     276:	89 3b       	cpi	r24, 0xB9	; 185
     278:	e6 55       	subi	r30, 0x56	; 86
     27a:	16 cf       	rjmp	.-468    	; 0xa8 <__SREG__+0x69>
     27c:	fe e6       	ldi	r31, 0x6E	; 110
     27e:	db 18       	sub	r13, r11
     280:	d1 84       	ldd	r13, Z+9	; 0x09
     282:	4b 38       	cpi	r20, 0x8B	; 139
     284:	1b f7       	brvc	.-58     	; 0x24c <__trampolines_end+0xa8>
     286:	7c 1d       	adc	r23, r12
     288:	90 1d       	adc	r25, r0
     28a:	a4 bb       	out	0x14, r26	; 20
     28c:	e4 24       	eor	r14, r4
     28e:	20 32       	cpi	r18, 0x20	; 32
     290:	84 72       	andi	r24, 0x24	; 36
     292:	5e 22       	and	r5, r30
     294:	81 00       	.word	0x0081	; ????
     296:	c9 f1       	breq	.+114    	; 0x30a <GPIO_PinDirection+0xc>
     298:	24 ec       	ldi	r18, 0xC4	; 196
     29a:	a1 e5       	ldi	r26, 0x51	; 81
     29c:	3d 27       	eor	r19, r29

0000029e <__ctors_end>:
     29e:	11 24       	eor	r1, r1
     2a0:	1f be       	out	0x3f, r1	; 63
     2a2:	cf e5       	ldi	r28, 0x5F	; 95
     2a4:	d8 e0       	ldi	r29, 0x08	; 8
     2a6:	de bf       	out	0x3e, r29	; 62
     2a8:	cd bf       	out	0x3d, r28	; 61

000002aa <__do_copy_data>:
     2aa:	12 e0       	ldi	r17, 0x02	; 2
     2ac:	a0 e6       	ldi	r26, 0x60	; 96
     2ae:	b0 e0       	ldi	r27, 0x00	; 0
     2b0:	e0 e7       	ldi	r30, 0x70	; 112
     2b2:	f4 e2       	ldi	r31, 0x24	; 36
     2b4:	02 c0       	rjmp	.+4      	; 0x2ba <__do_copy_data+0x10>
     2b6:	05 90       	lpm	r0, Z+
     2b8:	0d 92       	st	X+, r0
     2ba:	a2 39       	cpi	r26, 0x92	; 146
     2bc:	b1 07       	cpc	r27, r17
     2be:	d9 f7       	brne	.-10     	; 0x2b6 <__do_copy_data+0xc>

000002c0 <__do_clear_bss>:
     2c0:	23 e0       	ldi	r18, 0x03	; 3
     2c2:	a2 e9       	ldi	r26, 0x92	; 146
     2c4:	b2 e0       	ldi	r27, 0x02	; 2
     2c6:	01 c0       	rjmp	.+2      	; 0x2ca <.do_clear_bss_start>

000002c8 <.do_clear_bss_loop>:
     2c8:	1d 92       	st	X+, r1

000002ca <.do_clear_bss_start>:
     2ca:	a9 39       	cpi	r26, 0x99	; 153
     2cc:	b2 07       	cpc	r27, r18
     2ce:	e1 f7       	brne	.-8      	; 0x2c8 <.do_clear_bss_loop>
     2d0:	0e 94 8f 09 	call	0x131e	; 0x131e <main>
     2d4:	0c 94 36 12 	jmp	0x246c	; 0x246c <_exit>

000002d8 <__bad_interrupt>:
     2d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002dc <DELAY_us>:
     2dc:	00 97       	sbiw	r24, 0x00	; 0
     2de:	19 f0       	breq	.+6      	; 0x2e6 <DELAY_us+0xa>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e0:	00 00       	nop
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	e9 f7       	brne	.-6      	; 0x2e0 <DELAY_us+0x4>
     2e6:	08 95       	ret

000002e8 <DELAY_ms>:
     2e8:	00 97       	sbiw	r24, 0x00	; 0
     2ea:	41 f0       	breq	.+16     	; 0x2fc <DELAY_ms+0x14>
     2ec:	e9 ef       	ldi	r30, 0xF9	; 249
     2ee:	f0 e0       	ldi	r31, 0x00	; 0
     2f0:	31 97       	sbiw	r30, 0x01	; 1
     2f2:	f1 f7       	brne	.-4      	; 0x2f0 <DELAY_ms+0x8>
     2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <DELAY_ms+0xe>
     2f6:	00 00       	nop
     2f8:	01 97       	sbiw	r24, 0x01	; 1
     2fa:	c1 f7       	brne	.-16     	; 0x2ec <DELAY_ms+0x4>
     2fc:	08 95       	ret

000002fe <GPIO_PinDirection>:
     2fe:	98 2f       	mov	r25, r24
     300:	97 70       	andi	r25, 0x07	; 7
     302:	86 95       	lsr	r24
     304:	86 95       	lsr	r24
     306:	86 95       	lsr	r24
     308:	81 30       	cpi	r24, 0x01	; 1
     30a:	21 f1       	breq	.+72     	; 0x354 <GPIO_PinDirection+0x56>
     30c:	30 f0       	brcs	.+12     	; 0x31a <GPIO_PinDirection+0x1c>
     30e:	82 30       	cpi	r24, 0x02	; 2
     310:	f1 f1       	breq	.+124    	; 0x38e <GPIO_PinDirection+0x90>
     312:	83 30       	cpi	r24, 0x03	; 3
     314:	09 f4       	brne	.+2      	; 0x318 <GPIO_PinDirection+0x1a>
     316:	58 c0       	rjmp	.+176    	; 0x3c8 <GPIO_PinDirection+0xca>
     318:	08 95       	ret
     31a:	66 23       	and	r22, r22
     31c:	69 f0       	breq	.+26     	; 0x338 <GPIO_PinDirection+0x3a>
     31e:	4a b3       	in	r20, 0x1a	; 26
     320:	21 e0       	ldi	r18, 0x01	; 1
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	b9 01       	movw	r22, r18
     326:	02 c0       	rjmp	.+4      	; 0x32c <GPIO_PinDirection+0x2e>
     328:	66 0f       	add	r22, r22
     32a:	77 1f       	adc	r23, r23
     32c:	9a 95       	dec	r25
     32e:	e2 f7       	brpl	.-8      	; 0x328 <GPIO_PinDirection+0x2a>
     330:	cb 01       	movw	r24, r22
     332:	84 2b       	or	r24, r20
     334:	8a bb       	out	0x1a, r24	; 26
     336:	08 95       	ret
     338:	4a b3       	in	r20, 0x1a	; 26
     33a:	21 e0       	ldi	r18, 0x01	; 1
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	b9 01       	movw	r22, r18
     340:	02 c0       	rjmp	.+4      	; 0x346 <GPIO_PinDirection+0x48>
     342:	66 0f       	add	r22, r22
     344:	77 1f       	adc	r23, r23
     346:	9a 95       	dec	r25
     348:	e2 f7       	brpl	.-8      	; 0x342 <GPIO_PinDirection+0x44>
     34a:	cb 01       	movw	r24, r22
     34c:	80 95       	com	r24
     34e:	84 23       	and	r24, r20
     350:	8a bb       	out	0x1a, r24	; 26
     352:	08 95       	ret
     354:	66 23       	and	r22, r22
     356:	69 f0       	breq	.+26     	; 0x372 <GPIO_PinDirection+0x74>
     358:	47 b3       	in	r20, 0x17	; 23
     35a:	21 e0       	ldi	r18, 0x01	; 1
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	b9 01       	movw	r22, r18
     360:	02 c0       	rjmp	.+4      	; 0x366 <GPIO_PinDirection+0x68>
     362:	66 0f       	add	r22, r22
     364:	77 1f       	adc	r23, r23
     366:	9a 95       	dec	r25
     368:	e2 f7       	brpl	.-8      	; 0x362 <GPIO_PinDirection+0x64>
     36a:	cb 01       	movw	r24, r22
     36c:	84 2b       	or	r24, r20
     36e:	87 bb       	out	0x17, r24	; 23
     370:	08 95       	ret
     372:	47 b3       	in	r20, 0x17	; 23
     374:	21 e0       	ldi	r18, 0x01	; 1
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	b9 01       	movw	r22, r18
     37a:	02 c0       	rjmp	.+4      	; 0x380 <GPIO_PinDirection+0x82>
     37c:	66 0f       	add	r22, r22
     37e:	77 1f       	adc	r23, r23
     380:	9a 95       	dec	r25
     382:	e2 f7       	brpl	.-8      	; 0x37c <GPIO_PinDirection+0x7e>
     384:	cb 01       	movw	r24, r22
     386:	80 95       	com	r24
     388:	84 23       	and	r24, r20
     38a:	87 bb       	out	0x17, r24	; 23
     38c:	08 95       	ret
     38e:	66 23       	and	r22, r22
     390:	69 f0       	breq	.+26     	; 0x3ac <GPIO_PinDirection+0xae>
     392:	44 b3       	in	r20, 0x14	; 20
     394:	21 e0       	ldi	r18, 0x01	; 1
     396:	30 e0       	ldi	r19, 0x00	; 0
     398:	b9 01       	movw	r22, r18
     39a:	02 c0       	rjmp	.+4      	; 0x3a0 <GPIO_PinDirection+0xa2>
     39c:	66 0f       	add	r22, r22
     39e:	77 1f       	adc	r23, r23
     3a0:	9a 95       	dec	r25
     3a2:	e2 f7       	brpl	.-8      	; 0x39c <GPIO_PinDirection+0x9e>
     3a4:	cb 01       	movw	r24, r22
     3a6:	84 2b       	or	r24, r20
     3a8:	84 bb       	out	0x14, r24	; 20
     3aa:	08 95       	ret
     3ac:	44 b3       	in	r20, 0x14	; 20
     3ae:	21 e0       	ldi	r18, 0x01	; 1
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	b9 01       	movw	r22, r18
     3b4:	02 c0       	rjmp	.+4      	; 0x3ba <GPIO_PinDirection+0xbc>
     3b6:	66 0f       	add	r22, r22
     3b8:	77 1f       	adc	r23, r23
     3ba:	9a 95       	dec	r25
     3bc:	e2 f7       	brpl	.-8      	; 0x3b6 <GPIO_PinDirection+0xb8>
     3be:	cb 01       	movw	r24, r22
     3c0:	80 95       	com	r24
     3c2:	84 23       	and	r24, r20
     3c4:	84 bb       	out	0x14, r24	; 20
     3c6:	08 95       	ret
     3c8:	66 23       	and	r22, r22
     3ca:	69 f0       	breq	.+26     	; 0x3e6 <GPIO_PinDirection+0xe8>
     3cc:	41 b3       	in	r20, 0x11	; 17
     3ce:	21 e0       	ldi	r18, 0x01	; 1
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	b9 01       	movw	r22, r18
     3d4:	02 c0       	rjmp	.+4      	; 0x3da <GPIO_PinDirection+0xdc>
     3d6:	66 0f       	add	r22, r22
     3d8:	77 1f       	adc	r23, r23
     3da:	9a 95       	dec	r25
     3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <GPIO_PinDirection+0xd8>
     3de:	cb 01       	movw	r24, r22
     3e0:	84 2b       	or	r24, r20
     3e2:	81 bb       	out	0x11, r24	; 17
     3e4:	08 95       	ret
     3e6:	41 b3       	in	r20, 0x11	; 17
     3e8:	21 e0       	ldi	r18, 0x01	; 1
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	b9 01       	movw	r22, r18
     3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <GPIO_PinDirection+0xf6>
     3f0:	66 0f       	add	r22, r22
     3f2:	77 1f       	adc	r23, r23
     3f4:	9a 95       	dec	r25
     3f6:	e2 f7       	brpl	.-8      	; 0x3f0 <GPIO_PinDirection+0xf2>
     3f8:	cb 01       	movw	r24, r22
     3fa:	80 95       	com	r24
     3fc:	84 23       	and	r24, r20
     3fe:	81 bb       	out	0x11, r24	; 17
     400:	08 95       	ret

00000402 <GPIO_PinWrite>:
     402:	98 2f       	mov	r25, r24
     404:	97 70       	andi	r25, 0x07	; 7
     406:	86 95       	lsr	r24
     408:	86 95       	lsr	r24
     40a:	86 95       	lsr	r24
     40c:	81 30       	cpi	r24, 0x01	; 1
     40e:	21 f1       	breq	.+72     	; 0x458 <GPIO_PinWrite+0x56>
     410:	30 f0       	brcs	.+12     	; 0x41e <GPIO_PinWrite+0x1c>
     412:	82 30       	cpi	r24, 0x02	; 2
     414:	f1 f1       	breq	.+124    	; 0x492 <GPIO_PinWrite+0x90>
     416:	83 30       	cpi	r24, 0x03	; 3
     418:	09 f4       	brne	.+2      	; 0x41c <GPIO_PinWrite+0x1a>
     41a:	58 c0       	rjmp	.+176    	; 0x4cc <GPIO_PinWrite+0xca>
     41c:	08 95       	ret
     41e:	66 23       	and	r22, r22
     420:	69 f0       	breq	.+26     	; 0x43c <GPIO_PinWrite+0x3a>
     422:	4b b3       	in	r20, 0x1b	; 27
     424:	21 e0       	ldi	r18, 0x01	; 1
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	b9 01       	movw	r22, r18
     42a:	02 c0       	rjmp	.+4      	; 0x430 <GPIO_PinWrite+0x2e>
     42c:	66 0f       	add	r22, r22
     42e:	77 1f       	adc	r23, r23
     430:	9a 95       	dec	r25
     432:	e2 f7       	brpl	.-8      	; 0x42c <GPIO_PinWrite+0x2a>
     434:	cb 01       	movw	r24, r22
     436:	84 2b       	or	r24, r20
     438:	8b bb       	out	0x1b, r24	; 27
     43a:	08 95       	ret
     43c:	4b b3       	in	r20, 0x1b	; 27
     43e:	21 e0       	ldi	r18, 0x01	; 1
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	b9 01       	movw	r22, r18
     444:	02 c0       	rjmp	.+4      	; 0x44a <GPIO_PinWrite+0x48>
     446:	66 0f       	add	r22, r22
     448:	77 1f       	adc	r23, r23
     44a:	9a 95       	dec	r25
     44c:	e2 f7       	brpl	.-8      	; 0x446 <GPIO_PinWrite+0x44>
     44e:	cb 01       	movw	r24, r22
     450:	80 95       	com	r24
     452:	84 23       	and	r24, r20
     454:	8b bb       	out	0x1b, r24	; 27
     456:	08 95       	ret
     458:	66 23       	and	r22, r22
     45a:	69 f0       	breq	.+26     	; 0x476 <GPIO_PinWrite+0x74>
     45c:	48 b3       	in	r20, 0x18	; 24
     45e:	21 e0       	ldi	r18, 0x01	; 1
     460:	30 e0       	ldi	r19, 0x00	; 0
     462:	b9 01       	movw	r22, r18
     464:	02 c0       	rjmp	.+4      	; 0x46a <GPIO_PinWrite+0x68>
     466:	66 0f       	add	r22, r22
     468:	77 1f       	adc	r23, r23
     46a:	9a 95       	dec	r25
     46c:	e2 f7       	brpl	.-8      	; 0x466 <GPIO_PinWrite+0x64>
     46e:	cb 01       	movw	r24, r22
     470:	84 2b       	or	r24, r20
     472:	88 bb       	out	0x18, r24	; 24
     474:	08 95       	ret
     476:	48 b3       	in	r20, 0x18	; 24
     478:	21 e0       	ldi	r18, 0x01	; 1
     47a:	30 e0       	ldi	r19, 0x00	; 0
     47c:	b9 01       	movw	r22, r18
     47e:	02 c0       	rjmp	.+4      	; 0x484 <GPIO_PinWrite+0x82>
     480:	66 0f       	add	r22, r22
     482:	77 1f       	adc	r23, r23
     484:	9a 95       	dec	r25
     486:	e2 f7       	brpl	.-8      	; 0x480 <GPIO_PinWrite+0x7e>
     488:	cb 01       	movw	r24, r22
     48a:	80 95       	com	r24
     48c:	84 23       	and	r24, r20
     48e:	88 bb       	out	0x18, r24	; 24
     490:	08 95       	ret
     492:	66 23       	and	r22, r22
     494:	69 f0       	breq	.+26     	; 0x4b0 <GPIO_PinWrite+0xae>
     496:	45 b3       	in	r20, 0x15	; 21
     498:	21 e0       	ldi	r18, 0x01	; 1
     49a:	30 e0       	ldi	r19, 0x00	; 0
     49c:	b9 01       	movw	r22, r18
     49e:	02 c0       	rjmp	.+4      	; 0x4a4 <GPIO_PinWrite+0xa2>
     4a0:	66 0f       	add	r22, r22
     4a2:	77 1f       	adc	r23, r23
     4a4:	9a 95       	dec	r25
     4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <GPIO_PinWrite+0x9e>
     4a8:	cb 01       	movw	r24, r22
     4aa:	84 2b       	or	r24, r20
     4ac:	85 bb       	out	0x15, r24	; 21
     4ae:	08 95       	ret
     4b0:	45 b3       	in	r20, 0x15	; 21
     4b2:	21 e0       	ldi	r18, 0x01	; 1
     4b4:	30 e0       	ldi	r19, 0x00	; 0
     4b6:	b9 01       	movw	r22, r18
     4b8:	02 c0       	rjmp	.+4      	; 0x4be <GPIO_PinWrite+0xbc>
     4ba:	66 0f       	add	r22, r22
     4bc:	77 1f       	adc	r23, r23
     4be:	9a 95       	dec	r25
     4c0:	e2 f7       	brpl	.-8      	; 0x4ba <GPIO_PinWrite+0xb8>
     4c2:	cb 01       	movw	r24, r22
     4c4:	80 95       	com	r24
     4c6:	84 23       	and	r24, r20
     4c8:	85 bb       	out	0x15, r24	; 21
     4ca:	08 95       	ret
     4cc:	66 23       	and	r22, r22
     4ce:	69 f0       	breq	.+26     	; 0x4ea <GPIO_PinWrite+0xe8>
     4d0:	42 b3       	in	r20, 0x12	; 18
     4d2:	21 e0       	ldi	r18, 0x01	; 1
     4d4:	30 e0       	ldi	r19, 0x00	; 0
     4d6:	b9 01       	movw	r22, r18
     4d8:	02 c0       	rjmp	.+4      	; 0x4de <GPIO_PinWrite+0xdc>
     4da:	66 0f       	add	r22, r22
     4dc:	77 1f       	adc	r23, r23
     4de:	9a 95       	dec	r25
     4e0:	e2 f7       	brpl	.-8      	; 0x4da <GPIO_PinWrite+0xd8>
     4e2:	cb 01       	movw	r24, r22
     4e4:	84 2b       	or	r24, r20
     4e6:	82 bb       	out	0x12, r24	; 18
     4e8:	08 95       	ret
     4ea:	42 b3       	in	r20, 0x12	; 18
     4ec:	21 e0       	ldi	r18, 0x01	; 1
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	b9 01       	movw	r22, r18
     4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <GPIO_PinWrite+0xf6>
     4f4:	66 0f       	add	r22, r22
     4f6:	77 1f       	adc	r23, r23
     4f8:	9a 95       	dec	r25
     4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <GPIO_PinWrite+0xf2>
     4fc:	cb 01       	movw	r24, r22
     4fe:	80 95       	com	r24
     500:	84 23       	and	r24, r20
     502:	82 bb       	out	0x12, r24	; 18
     504:	08 95       	ret

00000506 <GPIO_PinRead>:
     506:	28 2f       	mov	r18, r24
     508:	27 70       	andi	r18, 0x07	; 7
     50a:	86 95       	lsr	r24
     50c:	86 95       	lsr	r24
     50e:	86 95       	lsr	r24
     510:	81 30       	cpi	r24, 0x01	; 1
     512:	79 f0       	breq	.+30     	; 0x532 <GPIO_PinRead+0x2c>
     514:	28 f0       	brcs	.+10     	; 0x520 <GPIO_PinRead+0x1a>
     516:	82 30       	cpi	r24, 0x02	; 2
     518:	a9 f0       	breq	.+42     	; 0x544 <GPIO_PinRead+0x3e>
     51a:	83 30       	cpi	r24, 0x03	; 3
     51c:	e1 f0       	breq	.+56     	; 0x556 <GPIO_PinRead+0x50>
     51e:	24 c0       	rjmp	.+72     	; 0x568 <GPIO_PinRead+0x62>
     520:	89 b3       	in	r24, 0x19	; 25
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	02 c0       	rjmp	.+4      	; 0x52a <GPIO_PinRead+0x24>
     526:	95 95       	asr	r25
     528:	87 95       	ror	r24
     52a:	2a 95       	dec	r18
     52c:	e2 f7       	brpl	.-8      	; 0x526 <GPIO_PinRead+0x20>
     52e:	81 70       	andi	r24, 0x01	; 1
     530:	08 95       	ret
     532:	86 b3       	in	r24, 0x16	; 22
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	02 c0       	rjmp	.+4      	; 0x53c <GPIO_PinRead+0x36>
     538:	95 95       	asr	r25
     53a:	87 95       	ror	r24
     53c:	2a 95       	dec	r18
     53e:	e2 f7       	brpl	.-8      	; 0x538 <GPIO_PinRead+0x32>
     540:	81 70       	andi	r24, 0x01	; 1
     542:	08 95       	ret
     544:	83 b3       	in	r24, 0x13	; 19
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	02 c0       	rjmp	.+4      	; 0x54e <GPIO_PinRead+0x48>
     54a:	95 95       	asr	r25
     54c:	87 95       	ror	r24
     54e:	2a 95       	dec	r18
     550:	e2 f7       	brpl	.-8      	; 0x54a <GPIO_PinRead+0x44>
     552:	81 70       	andi	r24, 0x01	; 1
     554:	08 95       	ret
     556:	80 b3       	in	r24, 0x10	; 16
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	02 c0       	rjmp	.+4      	; 0x560 <GPIO_PinRead+0x5a>
     55c:	95 95       	asr	r25
     55e:	87 95       	ror	r24
     560:	2a 95       	dec	r18
     562:	e2 f7       	brpl	.-8      	; 0x55c <GPIO_PinRead+0x56>
     564:	81 70       	andi	r24, 0x01	; 1
     566:	08 95       	ret
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	08 95       	ret

0000056c <KEYPAD_Init>:
     56c:	af 92       	push	r10
     56e:	cf 92       	push	r12
     570:	ef 92       	push	r14
     572:	0f 93       	push	r16
     574:	1f 93       	push	r17
     576:	cf 93       	push	r28
     578:	df 93       	push	r29
     57a:	e6 e9       	ldi	r30, 0x96	; 150
     57c:	f2 e0       	ldi	r31, 0x02	; 2
     57e:	80 83       	st	Z, r24
     580:	61 83       	std	Z+1, r22	; 0x01
     582:	42 83       	std	Z+2, r20	; 0x02
     584:	23 83       	std	Z+3, r18	; 0x03
     586:	e2 e9       	ldi	r30, 0x92	; 146
     588:	f2 e0       	ldi	r31, 0x02	; 2
     58a:	00 83       	st	Z, r16
     58c:	e1 82       	std	Z+1, r14	; 0x01
     58e:	c2 82       	std	Z+2, r12	; 0x02
     590:	a3 82       	std	Z+3, r10	; 0x03
     592:	c6 e9       	ldi	r28, 0x96	; 150
     594:	d2 e0       	ldi	r29, 0x02	; 2
     596:	0a e9       	ldi	r16, 0x9A	; 154
     598:	12 e0       	ldi	r17, 0x02	; 2
     59a:	61 e0       	ldi	r22, 0x01	; 1
     59c:	89 91       	ld	r24, Y+
     59e:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     5a2:	0c 17       	cp	r16, r28
     5a4:	1d 07       	cpc	r17, r29
     5a6:	c9 f7       	brne	.-14     	; 0x59a <KEYPAD_Init+0x2e>
     5a8:	c2 e9       	ldi	r28, 0x92	; 146
     5aa:	d2 e0       	ldi	r29, 0x02	; 2
     5ac:	06 e9       	ldi	r16, 0x96	; 150
     5ae:	12 e0       	ldi	r17, 0x02	; 2
     5b0:	60 e0       	ldi	r22, 0x00	; 0
     5b2:	89 91       	ld	r24, Y+
     5b4:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     5b8:	c0 17       	cp	r28, r16
     5ba:	d1 07       	cpc	r29, r17
     5bc:	c9 f7       	brne	.-14     	; 0x5b0 <KEYPAD_Init+0x44>
     5be:	df 91       	pop	r29
     5c0:	cf 91       	pop	r28
     5c2:	1f 91       	pop	r17
     5c4:	0f 91       	pop	r16
     5c6:	ef 90       	pop	r14
     5c8:	cf 90       	pop	r12
     5ca:	af 90       	pop	r10
     5cc:	08 95       	ret

000005ce <KEYPAD_GetKey>:
     5ce:	3f 92       	push	r3
     5d0:	4f 92       	push	r4
     5d2:	5f 92       	push	r5
     5d4:	6f 92       	push	r6
     5d6:	7f 92       	push	r7
     5d8:	8f 92       	push	r8
     5da:	9f 92       	push	r9
     5dc:	af 92       	push	r10
     5de:	bf 92       	push	r11
     5e0:	cf 92       	push	r12
     5e2:	df 92       	push	r13
     5e4:	ef 92       	push	r14
     5e6:	ff 92       	push	r15
     5e8:	0f 93       	push	r16
     5ea:	1f 93       	push	r17
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
     5f0:	0f 2e       	mov	r0, r31
     5f2:	f6 e9       	ldi	r31, 0x96	; 150
     5f4:	6f 2e       	mov	r6, r31
     5f6:	f2 e0       	ldi	r31, 0x02	; 2
     5f8:	7f 2e       	mov	r7, r31
     5fa:	f0 2d       	mov	r31, r0
     5fc:	0f 2e       	mov	r0, r31
     5fe:	fa e9       	ldi	r31, 0x9A	; 154
     600:	af 2e       	mov	r10, r31
     602:	f2 e0       	ldi	r31, 0x02	; 2
     604:	bf 2e       	mov	r11, r31
     606:	f0 2d       	mov	r31, r0
     608:	e3 01       	movw	r28, r6
     60a:	60 e0       	ldi	r22, 0x00	; 0
     60c:	89 91       	ld	r24, Y+
     60e:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     612:	ac 16       	cp	r10, r28
     614:	bd 06       	cpc	r11, r29
     616:	c9 f7       	brne	.-14     	; 0x60a <KEYPAD_GetKey+0x3c>
     618:	06 e9       	ldi	r16, 0x96	; 150
     61a:	12 e0       	ldi	r17, 0x02	; 2
     61c:	0f 2e       	mov	r0, r31
     61e:	f2 e9       	ldi	r31, 0x92	; 146
     620:	ef 2e       	mov	r14, r31
     622:	f2 e0       	ldi	r31, 0x02	; 2
     624:	ff 2e       	mov	r15, r31
     626:	f0 2d       	mov	r31, r0
     628:	68 01       	movw	r12, r16
     62a:	5e 2c       	mov	r5, r14
     62c:	4f 2c       	mov	r4, r15
     62e:	e6 01       	movw	r28, r12
     630:	0f 2e       	mov	r0, r31
     632:	f2 e9       	ldi	r31, 0x92	; 146
     634:	8f 2e       	mov	r8, r31
     636:	f2 e0       	ldi	r31, 0x02	; 2
     638:	9f 2e       	mov	r9, r31
     63a:	f0 2d       	mov	r31, r0
     63c:	33 24       	eor	r3, r3
     63e:	33 94       	inc	r3
     640:	f4 01       	movw	r30, r8
     642:	81 91       	ld	r24, Z+
     644:	4f 01       	movw	r8, r30
     646:	0e 94 83 02 	call	0x506	; 0x506 <GPIO_PinRead>
     64a:	38 22       	and	r3, r24
     64c:	08 15       	cp	r16, r8
     64e:	19 05       	cpc	r17, r9
     650:	b9 f7       	brne	.-18     	; 0x640 <KEYPAD_GetKey+0x72>
     652:	33 20       	and	r3, r3
     654:	51 f3       	breq	.-44     	; 0x62a <KEYPAD_GetKey+0x5c>
     656:	8a e0       	ldi	r24, 0x0A	; 10
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     65e:	47 01       	movw	r8, r14
     660:	33 24       	eor	r3, r3
     662:	33 94       	inc	r3
     664:	f4 01       	movw	r30, r8
     666:	81 91       	ld	r24, Z+
     668:	4f 01       	movw	r8, r30
     66a:	0e 94 83 02 	call	0x506	; 0x506 <GPIO_PinRead>
     66e:	38 22       	and	r3, r24
     670:	c8 14       	cp	r12, r8
     672:	d9 04       	cpc	r13, r9
     674:	b9 f7       	brne	.-18     	; 0x664 <KEYPAD_GetKey+0x96>
     676:	33 20       	and	r3, r3
     678:	c1 f2       	breq	.-80     	; 0x62a <KEYPAD_GetKey+0x5c>
     67a:	06 e9       	ldi	r16, 0x96	; 150
     67c:	12 e0       	ldi	r17, 0x02	; 2
     67e:	60 e0       	ldi	r22, 0x00	; 0
     680:	f8 01       	movw	r30, r16
     682:	81 91       	ld	r24, Z+
     684:	8f 01       	movw	r16, r30
     686:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     68a:	a0 16       	cp	r10, r16
     68c:	b1 06       	cpc	r11, r17
     68e:	b9 f7       	brne	.-18     	; 0x67e <KEYPAD_GetKey+0xb0>
     690:	05 2d       	mov	r16, r5
     692:	14 2d       	mov	r17, r4
     694:	ff 24       	eor	r15, r15
     696:	f3 94       	inc	r15
     698:	f8 01       	movw	r30, r16
     69a:	81 91       	ld	r24, Z+
     69c:	8f 01       	movw	r16, r30
     69e:	0e 94 83 02 	call	0x506	; 0x506 <GPIO_PinRead>
     6a2:	f8 22       	and	r15, r24
     6a4:	c0 17       	cp	r28, r16
     6a6:	d1 07       	cpc	r29, r17
     6a8:	b9 f7       	brne	.-18     	; 0x698 <KEYPAD_GetKey+0xca>
     6aa:	f1 10       	cpse	r15, r1
     6ac:	f1 cf       	rjmp	.-30     	; 0x690 <KEYPAD_GetKey+0xc2>
     6ae:	8a e0       	ldi	r24, 0x0A	; 10
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     6b6:	05 2d       	mov	r16, r5
     6b8:	14 2d       	mov	r17, r4
     6ba:	ff 24       	eor	r15, r15
     6bc:	f3 94       	inc	r15
     6be:	f8 01       	movw	r30, r16
     6c0:	81 91       	ld	r24, Z+
     6c2:	8f 01       	movw	r16, r30
     6c4:	0e 94 83 02 	call	0x506	; 0x506 <GPIO_PinRead>
     6c8:	f8 22       	and	r15, r24
     6ca:	c0 17       	cp	r28, r16
     6cc:	d1 07       	cpc	r29, r17
     6ce:	b9 f7       	brne	.-18     	; 0x6be <KEYPAD_GetKey+0xf0>
     6d0:	f1 10       	cpse	r15, r1
     6d2:	de cf       	rjmp	.-68     	; 0x690 <KEYPAD_GetKey+0xc2>
     6d4:	c6 e9       	ldi	r28, 0x96	; 150
     6d6:	d2 e0       	ldi	r29, 0x02	; 2
     6d8:	61 e0       	ldi	r22, 0x01	; 1
     6da:	89 91       	ld	r24, Y+
     6dc:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     6e0:	ac 16       	cp	r10, r28
     6e2:	bd 06       	cpc	r11, r29
     6e4:	c9 f7       	brne	.-14     	; 0x6d8 <KEYPAD_GetKey+0x10a>
     6e6:	d0 e0       	ldi	r29, 0x00	; 0
     6e8:	73 01       	movw	r14, r6
     6ea:	60 e0       	ldi	r22, 0x00	; 0
     6ec:	f3 01       	movw	r30, r6
     6ee:	80 81       	ld	r24, Z
     6f0:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     6f4:	05 2d       	mov	r16, r5
     6f6:	14 2d       	mov	r17, r4
     6f8:	c0 e0       	ldi	r28, 0x00	; 0
     6fa:	f8 01       	movw	r30, r16
     6fc:	81 91       	ld	r24, Z+
     6fe:	8f 01       	movw	r16, r30
     700:	0e 94 83 02 	call	0x506	; 0x506 <GPIO_PinRead>
     704:	88 23       	and	r24, r24
     706:	81 f0       	breq	.+32     	; 0x728 <KEYPAD_GetKey+0x15a>
     708:	cf 5f       	subi	r28, 0xFF	; 255
     70a:	c4 30       	cpi	r28, 0x04	; 4
     70c:	b1 f7       	brne	.-20     	; 0x6fa <KEYPAD_GetKey+0x12c>
     70e:	ff ef       	ldi	r31, 0xFF	; 255
     710:	6f 1a       	sub	r6, r31
     712:	7f 0a       	sbc	r7, r31
     714:	61 e0       	ldi	r22, 0x01	; 1
     716:	f7 01       	movw	r30, r14
     718:	80 81       	ld	r24, Z
     71a:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     71e:	df 5f       	subi	r29, 0xFF	; 255
     720:	d4 30       	cpi	r29, 0x04	; 4
     722:	11 f7       	brne	.-60     	; 0x6e8 <KEYPAD_GetKey+0x11a>
     724:	88 e7       	ldi	r24, 0x78	; 120
     726:	0f c0       	rjmp	.+30     	; 0x746 <KEYPAD_GetKey+0x178>
     728:	d4 30       	cpi	r29, 0x04	; 4
     72a:	60 f4       	brcc	.+24     	; 0x744 <KEYPAD_GetKey+0x176>
     72c:	ed 2f       	mov	r30, r29
     72e:	f0 e0       	ldi	r31, 0x00	; 0
     730:	ee 0f       	add	r30, r30
     732:	ff 1f       	adc	r31, r31
     734:	ee 0f       	add	r30, r30
     736:	ff 1f       	adc	r31, r31
     738:	e0 5a       	subi	r30, 0xA0	; 160
     73a:	ff 4f       	sbci	r31, 0xFF	; 255
     73c:	ec 0f       	add	r30, r28
     73e:	f1 1d       	adc	r31, r1
     740:	80 81       	ld	r24, Z
     742:	01 c0       	rjmp	.+2      	; 0x746 <KEYPAD_GetKey+0x178>
     744:	88 e7       	ldi	r24, 0x78	; 120
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	1f 91       	pop	r17
     74c:	0f 91       	pop	r16
     74e:	ff 90       	pop	r15
     750:	ef 90       	pop	r14
     752:	df 90       	pop	r13
     754:	cf 90       	pop	r12
     756:	bf 90       	pop	r11
     758:	af 90       	pop	r10
     75a:	9f 90       	pop	r9
     75c:	8f 90       	pop	r8
     75e:	7f 90       	pop	r7
     760:	6f 90       	pop	r6
     762:	5f 90       	pop	r5
     764:	4f 90       	pop	r4
     766:	3f 90       	pop	r3
     768:	08 95       	ret

0000076a <lcd_SendHigherNibble>:
     76a:	0f 93       	push	r16
     76c:	1f 93       	push	r17
     76e:	cf 93       	push	r28
     770:	c8 2f       	mov	r28, r24
     772:	84 fb       	bst	r24, 4
     774:	66 27       	eor	r22, r22
     776:	60 f9       	bld	r22, 0
     778:	0a e9       	ldi	r16, 0x9A	; 154
     77a:	12 e0       	ldi	r17, 0x02	; 2
     77c:	f8 01       	movw	r30, r16
     77e:	82 85       	ldd	r24, Z+10	; 0x0a
     780:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     784:	c5 fb       	bst	r28, 5
     786:	66 27       	eor	r22, r22
     788:	60 f9       	bld	r22, 0
     78a:	f8 01       	movw	r30, r16
     78c:	83 85       	ldd	r24, Z+11	; 0x0b
     78e:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     792:	c6 fb       	bst	r28, 6
     794:	66 27       	eor	r22, r22
     796:	60 f9       	bld	r22, 0
     798:	f8 01       	movw	r30, r16
     79a:	84 85       	ldd	r24, Z+12	; 0x0c
     79c:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     7a0:	6c 2f       	mov	r22, r28
     7a2:	66 1f       	adc	r22, r22
     7a4:	66 27       	eor	r22, r22
     7a6:	66 1f       	adc	r22, r22
     7a8:	f8 01       	movw	r30, r16
     7aa:	85 85       	ldd	r24, Z+13	; 0x0d
     7ac:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     7b0:	cf 91       	pop	r28
     7b2:	1f 91       	pop	r17
     7b4:	0f 91       	pop	r16
     7b6:	08 95       	ret

000007b8 <lcd_SendCmdSignals>:
     7b8:	cf 93       	push	r28
     7ba:	df 93       	push	r29
     7bc:	ca e9       	ldi	r28, 0x9A	; 154
     7be:	d2 e0       	ldi	r29, 0x02	; 2
     7c0:	60 e0       	ldi	r22, 0x00	; 0
     7c2:	8b 81       	ldd	r24, Y+3	; 0x03
     7c4:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     7c8:	60 e0       	ldi	r22, 0x00	; 0
     7ca:	8c 81       	ldd	r24, Y+4	; 0x04
     7cc:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     7d0:	61 e0       	ldi	r22, 0x01	; 1
     7d2:	8d 81       	ldd	r24, Y+5	; 0x05
     7d4:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     7d8:	8a e0       	ldi	r24, 0x0A	; 10
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     7e0:	60 e0       	ldi	r22, 0x00	; 0
     7e2:	8d 81       	ldd	r24, Y+5	; 0x05
     7e4:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	08 95       	ret

000007ee <lcd_SendLowerNibble>:
     7ee:	0f 93       	push	r16
     7f0:	1f 93       	push	r17
     7f2:	cf 93       	push	r28
     7f4:	c8 2f       	mov	r28, r24
     7f6:	68 2f       	mov	r22, r24
     7f8:	61 70       	andi	r22, 0x01	; 1
     7fa:	0a e9       	ldi	r16, 0x9A	; 154
     7fc:	12 e0       	ldi	r17, 0x02	; 2
     7fe:	f8 01       	movw	r30, r16
     800:	86 81       	ldd	r24, Z+6	; 0x06
     802:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     806:	c1 fb       	bst	r28, 1
     808:	66 27       	eor	r22, r22
     80a:	60 f9       	bld	r22, 0
     80c:	f8 01       	movw	r30, r16
     80e:	87 81       	ldd	r24, Z+7	; 0x07
     810:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     814:	c2 fb       	bst	r28, 2
     816:	66 27       	eor	r22, r22
     818:	60 f9       	bld	r22, 0
     81a:	f8 01       	movw	r30, r16
     81c:	80 85       	ldd	r24, Z+8	; 0x08
     81e:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     822:	c3 fb       	bst	r28, 3
     824:	66 27       	eor	r22, r22
     826:	60 f9       	bld	r22, 0
     828:	f8 01       	movw	r30, r16
     82a:	81 85       	ldd	r24, Z+9	; 0x09
     82c:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     830:	cf 91       	pop	r28
     832:	1f 91       	pop	r17
     834:	0f 91       	pop	r16
     836:	08 95       	ret

00000838 <lcd_SendDataSignals>:
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	ca e9       	ldi	r28, 0x9A	; 154
     83e:	d2 e0       	ldi	r29, 0x02	; 2
     840:	61 e0       	ldi	r22, 0x01	; 1
     842:	8b 81       	ldd	r24, Y+3	; 0x03
     844:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     848:	60 e0       	ldi	r22, 0x00	; 0
     84a:	8c 81       	ldd	r24, Y+4	; 0x04
     84c:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     850:	61 e0       	ldi	r22, 0x01	; 1
     852:	8d 81       	ldd	r24, Y+5	; 0x05
     854:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     858:	8a e0       	ldi	r24, 0x0A	; 10
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     860:	60 e0       	ldi	r22, 0x00	; 0
     862:	8d 81       	ldd	r24, Y+5	; 0x05
     864:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	08 95       	ret

0000086e <lcd_BusyCheck>:
     86e:	1f 93       	push	r17
     870:	cf 93       	push	r28
     872:	df 93       	push	r29
     874:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <LCDConfig+0x4>
     878:	8f 3f       	cpi	r24, 0xFF	; 255
     87a:	e9 f1       	breq	.+122    	; 0x8f6 <lcd_BusyCheck+0x88>
     87c:	ca e9       	ldi	r28, 0x9A	; 154
     87e:	d2 e0       	ldi	r29, 0x02	; 2
     880:	60 e0       	ldi	r22, 0x00	; 0
     882:	8d 85       	ldd	r24, Y+13	; 0x0d
     884:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     888:	60 e0       	ldi	r22, 0x00	; 0
     88a:	8b 81       	ldd	r24, Y+3	; 0x03
     88c:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     890:	61 e0       	ldi	r22, 0x01	; 1
     892:	8c 81       	ldd	r24, Y+4	; 0x04
     894:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     898:	60 e0       	ldi	r22, 0x00	; 0
     89a:	8d 81       	ldd	r24, Y+5	; 0x05
     89c:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     8a0:	8a e0       	ldi	r24, 0x0A	; 10
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     8a8:	61 e0       	ldi	r22, 0x01	; 1
     8aa:	8d 81       	ldd	r24, Y+5	; 0x05
     8ac:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     8b0:	8a e0       	ldi	r24, 0x0A	; 10
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     8b8:	8d 85       	ldd	r24, Y+13	; 0x0d
     8ba:	0e 94 83 02 	call	0x506	; 0x506 <GPIO_PinRead>
     8be:	18 2f       	mov	r17, r24
     8c0:	8a 81       	ldd	r24, Y+2	; 0x02
     8c2:	84 30       	cpi	r24, 0x04	; 4
     8c4:	81 f4       	brne	.+32     	; 0x8e6 <lcd_BusyCheck+0x78>
     8c6:	60 e0       	ldi	r22, 0x00	; 0
     8c8:	8d 81       	ldd	r24, Y+5	; 0x05
     8ca:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     8ce:	8a e0       	ldi	r24, 0x0A	; 10
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     8d6:	61 e0       	ldi	r22, 0x01	; 1
     8d8:	8d 81       	ldd	r24, Y+5	; 0x05
     8da:	0e 94 01 02 	call	0x402	; 0x402 <GPIO_PinWrite>
     8de:	8a e0       	ldi	r24, 0x0A	; 10
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     8e6:	11 11       	cpse	r17, r1
     8e8:	d7 cf       	rjmp	.-82     	; 0x898 <lcd_BusyCheck+0x2a>
     8ea:	61 e0       	ldi	r22, 0x01	; 1
     8ec:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <LCDConfig+0xd>
     8f0:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     8f4:	04 c0       	rjmp	.+8      	; 0x8fe <lcd_BusyCheck+0x90>
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	1f 91       	pop	r17
     904:	08 95       	ret

00000906 <LCD_SetUp>:
     906:	8f 92       	push	r8
     908:	9f 92       	push	r9
     90a:	af 92       	push	r10
     90c:	bf 92       	push	r11
     90e:	cf 92       	push	r12
     910:	df 92       	push	r13
     912:	ef 92       	push	r14
     914:	ff 92       	push	r15
     916:	0f 93       	push	r16
     918:	1f 93       	push	r17
     91a:	cf 93       	push	r28
     91c:	df 93       	push	r29
     91e:	cd b7       	in	r28, 0x3d	; 61
     920:	de b7       	in	r29, 0x3e	; 62
     922:	98 2e       	mov	r9, r24
     924:	b6 2e       	mov	r11, r22
     926:	d4 2e       	mov	r13, r20
     928:	ff 84       	ldd	r15, Y+15	; 0x0f
     92a:	18 89       	ldd	r17, Y+16	; 0x10
     92c:	ea e9       	ldi	r30, 0x9A	; 154
     92e:	f2 e0       	ldi	r31, 0x02	; 2
     930:	83 83       	std	Z+3, r24	; 0x03
     932:	64 83       	std	Z+4, r22	; 0x04
     934:	45 83       	std	Z+5, r20	; 0x05
     936:	26 83       	std	Z+6, r18	; 0x06
     938:	07 83       	std	Z+7, r16	; 0x07
     93a:	e0 86       	std	Z+8, r14	; 0x08
     93c:	c1 86       	std	Z+9, r12	; 0x09
     93e:	a2 86       	std	Z+10, r10	; 0x0a
     940:	83 86       	std	Z+11, r8	; 0x0b
     942:	f4 86       	std	Z+12, r15	; 0x0c
     944:	15 87       	std	Z+13, r17	; 0x0d
     946:	2f 3f       	cpi	r18, 0xFF	; 255
     948:	39 f0       	breq	.+14     	; 0x958 <LCD_SetUp+0x52>
     94a:	0f 3f       	cpi	r16, 0xFF	; 255
     94c:	29 f0       	breq	.+10     	; 0x958 <LCD_SetUp+0x52>
     94e:	8f ef       	ldi	r24, 0xFF	; 255
     950:	e8 16       	cp	r14, r24
     952:	11 f0       	breq	.+4      	; 0x958 <LCD_SetUp+0x52>
     954:	c8 12       	cpse	r12, r24
     956:	04 c0       	rjmp	.+8      	; 0x960 <LCD_SetUp+0x5a>
     958:	84 e0       	ldi	r24, 0x04	; 4
     95a:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <LCDConfig+0x2>
     95e:	13 c0       	rjmp	.+38     	; 0x986 <LCD_SetUp+0x80>
     960:	88 e0       	ldi	r24, 0x08	; 8
     962:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <LCDConfig+0x2>
     966:	61 e0       	ldi	r22, 0x01	; 1
     968:	82 2f       	mov	r24, r18
     96a:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     96e:	61 e0       	ldi	r22, 0x01	; 1
     970:	80 2f       	mov	r24, r16
     972:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     976:	61 e0       	ldi	r22, 0x01	; 1
     978:	8e 2d       	mov	r24, r14
     97a:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     97e:	61 e0       	ldi	r22, 0x01	; 1
     980:	8c 2d       	mov	r24, r12
     982:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     986:	61 e0       	ldi	r22, 0x01	; 1
     988:	89 2d       	mov	r24, r9
     98a:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     98e:	61 e0       	ldi	r22, 0x01	; 1
     990:	8b 2d       	mov	r24, r11
     992:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     996:	61 e0       	ldi	r22, 0x01	; 1
     998:	8d 2d       	mov	r24, r13
     99a:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     99e:	61 e0       	ldi	r22, 0x01	; 1
     9a0:	8a 2d       	mov	r24, r10
     9a2:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     9a6:	61 e0       	ldi	r22, 0x01	; 1
     9a8:	88 2d       	mov	r24, r8
     9aa:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     9ae:	61 e0       	ldi	r22, 0x01	; 1
     9b0:	8f 2d       	mov	r24, r15
     9b2:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     9b6:	61 e0       	ldi	r22, 0x01	; 1
     9b8:	81 2f       	mov	r24, r17
     9ba:	0e 94 7f 01 	call	0x2fe	; 0x2fe <GPIO_PinDirection>
     9be:	df 91       	pop	r29
     9c0:	cf 91       	pop	r28
     9c2:	1f 91       	pop	r17
     9c4:	0f 91       	pop	r16
     9c6:	ff 90       	pop	r15
     9c8:	ef 90       	pop	r14
     9ca:	df 90       	pop	r13
     9cc:	cf 90       	pop	r12
     9ce:	bf 90       	pop	r11
     9d0:	af 90       	pop	r10
     9d2:	9f 90       	pop	r9
     9d4:	8f 90       	pop	r8
     9d6:	08 95       	ret

000009d8 <LCD_CmdWrite>:
     9d8:	cf 93       	push	r28
     9da:	c8 2f       	mov	r28, r24
     9dc:	0e 94 37 04 	call	0x86e	; 0x86e <lcd_BusyCheck>
     9e0:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <LCDConfig+0x2>
     9e4:	88 30       	cpi	r24, 0x08	; 8
     9e6:	21 f4       	brne	.+8      	; 0x9f0 <LCD_CmdWrite+0x18>
     9e8:	8c 2f       	mov	r24, r28
     9ea:	0e 94 f7 03 	call	0x7ee	; 0x7ee <lcd_SendLowerNibble>
     9ee:	07 c0       	rjmp	.+14     	; 0x9fe <LCD_CmdWrite+0x26>
     9f0:	8c 2f       	mov	r24, r28
     9f2:	0e 94 b5 03 	call	0x76a	; 0x76a <lcd_SendHigherNibble>
     9f6:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <lcd_SendCmdSignals>
     9fa:	c2 95       	swap	r28
     9fc:	c0 7f       	andi	r28, 0xF0	; 240
     9fe:	8c 2f       	mov	r24, r28
     a00:	0e 94 b5 03 	call	0x76a	; 0x76a <lcd_SendHigherNibble>
     a04:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <lcd_SendCmdSignals>
     a08:	cf 91       	pop	r28
     a0a:	08 95       	ret

00000a0c <LCD_GoToLine>:
     a0c:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <LCDConfig>
     a10:	89 17       	cp	r24, r25
     a12:	58 f4       	brcc	.+22     	; 0xa2a <LCD_GoToLine+0x1e>
     a14:	10 92 a8 02 	sts	0x02A8, r1	; 0x8002a8 <v_LcdTrackCursorPos_U8>
     a18:	80 93 a9 02 	sts	0x02A9, r24	; 0x8002a9 <v_LcdTrackLineNum_U8>
     a1c:	e8 2f       	mov	r30, r24
     a1e:	f0 e0       	ldi	r31, 0x00	; 0
     a20:	e0 59       	subi	r30, 0x90	; 144
     a22:	ff 4f       	sbci	r31, 0xFF	; 255
     a24:	80 81       	ld	r24, Z
     a26:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <LCD_CmdWrite>
     a2a:	08 95       	ret

00000a2c <LCD_Clear>:
     a2c:	81 e0       	ldi	r24, 0x01	; 1
     a2e:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <LCD_CmdWrite>
     a32:	80 e0       	ldi	r24, 0x00	; 0
     a34:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_GoToLine>
     a38:	08 95       	ret

00000a3a <LCD_Init>:
     a3a:	ea e9       	ldi	r30, 0x9A	; 154
     a3c:	f2 e0       	ldi	r31, 0x02	; 2
     a3e:	61 83       	std	Z+1, r22	; 0x01
     a40:	80 83       	st	Z, r24
     a42:	83 30       	cpi	r24, 0x03	; 3
     a44:	40 f0       	brcs	.+16     	; 0xa56 <LCD_Init+0x1c>
     a46:	6f 70       	andi	r22, 0x0F	; 15
     a48:	e0 e7       	ldi	r30, 0x70	; 112
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	80 e9       	ldi	r24, 0x90	; 144
     a4e:	86 0f       	add	r24, r22
     a50:	82 83       	std	Z+2, r24	; 0x02
     a52:	60 53       	subi	r22, 0x30	; 48
     a54:	63 83       	std	Z+3, r22	; 0x03
     a56:	84 e6       	ldi	r24, 0x64	; 100
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
     a5e:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <LCDConfig+0x2>
     a62:	88 30       	cpi	r24, 0x08	; 8
     a64:	21 f4       	brne	.+8      	; 0xa6e <LCD_Init+0x34>
     a66:	88 e3       	ldi	r24, 0x38	; 56
     a68:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <LCD_CmdWrite>
     a6c:	29 c0       	rjmp	.+82     	; 0xac0 <LCD_Init+0x86>
     a6e:	84 30       	cpi	r24, 0x04	; 4
     a70:	39 f5       	brne	.+78     	; 0xac0 <LCD_Init+0x86>
     a72:	80 e3       	ldi	r24, 0x30	; 48
     a74:	0e 94 b5 03 	call	0x76a	; 0x76a <lcd_SendHigherNibble>
     a78:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <lcd_SendCmdSignals>
     a7c:	84 e6       	ldi	r24, 0x64	; 100
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
     a84:	80 e3       	ldi	r24, 0x30	; 48
     a86:	0e 94 b5 03 	call	0x76a	; 0x76a <lcd_SendHigherNibble>
     a8a:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <lcd_SendCmdSignals>
     a8e:	88 ec       	ldi	r24, 0xC8	; 200
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     a96:	80 e3       	ldi	r24, 0x30	; 48
     a98:	0e 94 b5 03 	call	0x76a	; 0x76a <lcd_SendHigherNibble>
     a9c:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <lcd_SendCmdSignals>
     aa0:	88 ec       	ldi	r24, 0xC8	; 200
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     aa8:	80 e2       	ldi	r24, 0x20	; 32
     aaa:	0e 94 b5 03 	call	0x76a	; 0x76a <lcd_SendHigherNibble>
     aae:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <lcd_SendCmdSignals>
     ab2:	88 ec       	ldi	r24, 0xC8	; 200
     ab4:	90 e0       	ldi	r25, 0x00	; 0
     ab6:	0e 94 6e 01 	call	0x2dc	; 0x2dc <DELAY_us>
     aba:	88 e2       	ldi	r24, 0x28	; 40
     abc:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <LCD_CmdWrite>
     ac0:	8e e0       	ldi	r24, 0x0E	; 14
     ac2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <LCD_CmdWrite>
     ac6:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
     aca:	08 95       	ret

00000acc <LCD_GoToNextLine>:
     acc:	80 91 a9 02 	lds	r24, 0x02A9	; 0x8002a9 <v_LcdTrackLineNum_U8>
     ad0:	8f 5f       	subi	r24, 0xFF	; 255
     ad2:	80 93 a9 02 	sts	0x02A9, r24	; 0x8002a9 <v_LcdTrackLineNum_U8>
     ad6:	10 92 a8 02 	sts	0x02A8, r1	; 0x8002a8 <v_LcdTrackCursorPos_U8>
     ada:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <LCDConfig>
     ade:	89 17       	cp	r24, r25
     ae0:	10 f0       	brcs	.+4      	; 0xae6 <LCD_GoToNextLine+0x1a>
     ae2:	10 92 a9 02 	sts	0x02A9, r1	; 0x8002a9 <v_LcdTrackLineNum_U8>
     ae6:	e0 91 a9 02 	lds	r30, 0x02A9	; 0x8002a9 <v_LcdTrackLineNum_U8>
     aea:	f0 e0       	ldi	r31, 0x00	; 0
     aec:	e0 59       	subi	r30, 0x90	; 144
     aee:	ff 4f       	sbci	r31, 0xFF	; 255
     af0:	80 81       	ld	r24, Z
     af2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <LCD_CmdWrite>
     af6:	08 95       	ret

00000af8 <LCD_DisplayChar>:
     af8:	cf 93       	push	r28
     afa:	c8 2f       	mov	r28, r24
     afc:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <LCDConfig+0x1>
     b00:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <v_LcdTrackCursorPos_U8>
     b04:	89 17       	cp	r24, r25
     b06:	18 f4       	brcc	.+6      	; 0xb0e <LCD_DisplayChar+0x16>
     b08:	ca 30       	cpi	r28, 0x0A	; 10
     b0a:	29 f4       	brne	.+10     	; 0xb16 <LCD_DisplayChar+0x1e>
     b0c:	20 c0       	rjmp	.+64     	; 0xb4e <LCD_DisplayChar+0x56>
     b0e:	0e 94 66 05 	call	0xacc	; 0xacc <LCD_GoToNextLine>
     b12:	ca 30       	cpi	r28, 0x0A	; 10
     b14:	f1 f0       	breq	.+60     	; 0xb52 <LCD_DisplayChar+0x5a>
     b16:	0e 94 37 04 	call	0x86e	; 0x86e <lcd_BusyCheck>
     b1a:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <LCDConfig+0x2>
     b1e:	88 30       	cpi	r24, 0x08	; 8
     b20:	21 f4       	brne	.+8      	; 0xb2a <LCD_DisplayChar+0x32>
     b22:	8c 2f       	mov	r24, r28
     b24:	0e 94 f7 03 	call	0x7ee	; 0x7ee <lcd_SendLowerNibble>
     b28:	07 c0       	rjmp	.+14     	; 0xb38 <LCD_DisplayChar+0x40>
     b2a:	8c 2f       	mov	r24, r28
     b2c:	0e 94 b5 03 	call	0x76a	; 0x76a <lcd_SendHigherNibble>
     b30:	0e 94 1c 04 	call	0x838	; 0x838 <lcd_SendDataSignals>
     b34:	c2 95       	swap	r28
     b36:	c0 7f       	andi	r28, 0xF0	; 240
     b38:	8c 2f       	mov	r24, r28
     b3a:	0e 94 b5 03 	call	0x76a	; 0x76a <lcd_SendHigherNibble>
     b3e:	0e 94 1c 04 	call	0x838	; 0x838 <lcd_SendDataSignals>
     b42:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <v_LcdTrackCursorPos_U8>
     b46:	8f 5f       	subi	r24, 0xFF	; 255
     b48:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <v_LcdTrackCursorPos_U8>
     b4c:	02 c0       	rjmp	.+4      	; 0xb52 <LCD_DisplayChar+0x5a>
     b4e:	0e 94 66 05 	call	0xacc	; 0xacc <LCD_GoToNextLine>
     b52:	cf 91       	pop	r28
     b54:	08 95       	ret

00000b56 <LCD_DisplayString>:
     b56:	cf 93       	push	r28
     b58:	df 93       	push	r29
     b5a:	ec 01       	movw	r28, r24
     b5c:	88 81       	ld	r24, Y
     b5e:	88 23       	and	r24, r24
     b60:	31 f0       	breq	.+12     	; 0xb6e <LCD_DisplayString+0x18>
     b62:	21 96       	adiw	r28, 0x01	; 1
     b64:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <LCD_DisplayChar>
     b68:	89 91       	ld	r24, Y+
     b6a:	81 11       	cpse	r24, r1
     b6c:	fb cf       	rjmp	.-10     	; 0xb64 <LCD_DisplayString+0xe>
     b6e:	df 91       	pop	r29
     b70:	cf 91       	pop	r28
     b72:	08 95       	ret

00000b74 <LCD_DisplayNumber>:
     b74:	4f 92       	push	r4
     b76:	5f 92       	push	r5
     b78:	6f 92       	push	r6
     b7a:	7f 92       	push	r7
     b7c:	8f 92       	push	r8
     b7e:	9f 92       	push	r9
     b80:	af 92       	push	r10
     b82:	bf 92       	push	r11
     b84:	cf 92       	push	r12
     b86:	df 92       	push	r13
     b88:	ef 92       	push	r14
     b8a:	ff 92       	push	r15
     b8c:	0f 93       	push	r16
     b8e:	1f 93       	push	r17
     b90:	cf 93       	push	r28
     b92:	df 93       	push	r29
     b94:	cd b7       	in	r28, 0x3d	; 61
     b96:	de b7       	in	r29, 0x3e	; 62
     b98:	2a 97       	sbiw	r28, 0x0a	; 10
     b9a:	0f b6       	in	r0, 0x3f	; 63
     b9c:	f8 94       	cli
     b9e:	de bf       	out	0x3e, r29	; 62
     ba0:	0f be       	out	0x3f, r0	; 63
     ba2:	cd bf       	out	0x3d, r28	; 61
     ba4:	88 2e       	mov	r8, r24
     ba6:	6a 01       	movw	r12, r20
     ba8:	7b 01       	movw	r14, r22
     baa:	12 2f       	mov	r17, r18
     bac:	82 e0       	ldi	r24, 0x02	; 2
     bae:	88 12       	cpse	r8, r24
     bb0:	24 c0       	rjmp	.+72     	; 0xbfa <LCD_DisplayNumber+0x86>
     bb2:	22 23       	and	r18, r18
     bb4:	09 f4       	brne	.+2      	; 0xbb8 <LCD_DisplayNumber+0x44>
     bb6:	66 c0       	rjmp	.+204    	; 0xc84 <LCD_DisplayNumber+0x110>
     bb8:	aa 24       	eor	r10, r10
     bba:	a3 94       	inc	r10
     bbc:	b1 2c       	mov	r11, r1
     bbe:	01 e0       	ldi	r16, 0x01	; 1
     bc0:	91 2c       	mov	r9, r1
     bc2:	8f ef       	ldi	r24, 0xFF	; 255
     bc4:	81 0f       	add	r24, r17
     bc6:	a5 01       	movw	r20, r10
     bc8:	02 c0       	rjmp	.+4      	; 0xbce <LCD_DisplayNumber+0x5a>
     bca:	44 0f       	add	r20, r20
     bcc:	55 1f       	adc	r21, r21
     bce:	8a 95       	dec	r24
     bd0:	e2 f7       	brpl	.-8      	; 0xbca <LCD_DisplayNumber+0x56>
     bd2:	05 2e       	mov	r0, r21
     bd4:	00 0c       	add	r0, r0
     bd6:	66 0b       	sbc	r22, r22
     bd8:	77 0b       	sbc	r23, r23
     bda:	4c 21       	and	r20, r12
     bdc:	5d 21       	and	r21, r13
     bde:	6e 21       	and	r22, r14
     be0:	7f 21       	and	r23, r15
     be2:	80 2f       	mov	r24, r16
     be4:	45 2b       	or	r20, r21
     be6:	46 2b       	or	r20, r22
     be8:	47 2b       	or	r20, r23
     bea:	09 f4       	brne	.+2      	; 0xbee <LCD_DisplayNumber+0x7a>
     bec:	89 2d       	mov	r24, r9
     bee:	80 5d       	subi	r24, 0xD0	; 208
     bf0:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <LCD_DisplayChar>
     bf4:	11 50       	subi	r17, 0x01	; 1
     bf6:	29 f7       	brne	.-54     	; 0xbc2 <LCD_DisplayNumber+0x4e>
     bf8:	45 c0       	rjmp	.+138    	; 0xc84 <LCD_DisplayNumber+0x110>
     bfa:	45 2b       	or	r20, r21
     bfc:	46 2b       	or	r20, r22
     bfe:	47 2b       	or	r20, r23
     c00:	19 f0       	breq	.+6      	; 0xc08 <LCD_DisplayNumber+0x94>
     c02:	21 11       	cpse	r18, r1
     c04:	05 c0       	rjmp	.+10     	; 0xc10 <LCD_DisplayNumber+0x9c>
     c06:	3e c0       	rjmp	.+124    	; 0xc84 <LCD_DisplayNumber+0x110>
     c08:	80 e3       	ldi	r24, 0x30	; 48
     c0a:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <LCD_DisplayChar>
     c0e:	3a c0       	rjmp	.+116    	; 0xc84 <LCD_DisplayNumber+0x110>
     c10:	fe 01       	movw	r30, r28
     c12:	31 96       	adiw	r30, 0x01	; 1
     c14:	5f 01       	movw	r10, r30
     c16:	00 e0       	ldi	r16, 0x00	; 0
     c18:	48 2c       	mov	r4, r8
     c1a:	51 2c       	mov	r5, r1
     c1c:	61 2c       	mov	r6, r1
     c1e:	71 2c       	mov	r7, r1
     c20:	c1 14       	cp	r12, r1
     c22:	d1 04       	cpc	r13, r1
     c24:	e1 04       	cpc	r14, r1
     c26:	f1 04       	cpc	r15, r1
     c28:	89 f0       	breq	.+34     	; 0xc4c <LCD_DisplayNumber+0xd8>
     c2a:	9c 2c       	mov	r9, r12
     c2c:	c7 01       	movw	r24, r14
     c2e:	b6 01       	movw	r22, r12
     c30:	a3 01       	movw	r20, r6
     c32:	92 01       	movw	r18, r4
     c34:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <__udivmodsi4>
     c38:	c2 2e       	mov	r12, r18
     c3a:	d3 2e       	mov	r13, r19
     c3c:	e4 2e       	mov	r14, r20
     c3e:	f5 2e       	mov	r15, r21
     c40:	82 9e       	mul	r8, r18
     c42:	90 18       	sub	r9, r0
     c44:	11 24       	eor	r1, r1
     c46:	f5 01       	movw	r30, r10
     c48:	90 82       	st	Z, r9
     c4a:	07 c0       	rjmp	.+14     	; 0xc5a <LCD_DisplayNumber+0xe6>
     c4c:	1b 30       	cpi	r17, 0x0B	; 11
     c4e:	18 f0       	brcs	.+6      	; 0xc56 <LCD_DisplayNumber+0xe2>
     c50:	01 11       	cpse	r16, r1
     c52:	0a c0       	rjmp	.+20     	; 0xc68 <LCD_DisplayNumber+0xf4>
     c54:	17 c0       	rjmp	.+46     	; 0xc84 <LCD_DisplayNumber+0x110>
     c56:	f5 01       	movw	r30, r10
     c58:	10 82       	st	Z, r1
     c5a:	0f 5f       	subi	r16, 0xFF	; 255
     c5c:	ff ef       	ldi	r31, 0xFF	; 255
     c5e:	af 1a       	sub	r10, r31
     c60:	bf 0a       	sbc	r11, r31
     c62:	10 13       	cpse	r17, r16
     c64:	dd cf       	rjmp	.-70     	; 0xc20 <LCD_DisplayNumber+0xac>
     c66:	01 c0       	rjmp	.+2      	; 0xc6a <LCD_DisplayNumber+0xf6>
     c68:	10 2f       	mov	r17, r16
     c6a:	fe 01       	movw	r30, r28
     c6c:	e1 0f       	add	r30, r17
     c6e:	f1 1d       	adc	r31, r1
     c70:	80 81       	ld	r24, Z
     c72:	8a 30       	cpi	r24, 0x0A	; 10
     c74:	10 f0       	brcs	.+4      	; 0xc7a <LCD_DisplayNumber+0x106>
     c76:	89 5c       	subi	r24, 0xC9	; 201
     c78:	01 c0       	rjmp	.+2      	; 0xc7c <LCD_DisplayNumber+0x108>
     c7a:	80 5d       	subi	r24, 0xD0	; 208
     c7c:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <LCD_DisplayChar>
     c80:	11 50       	subi	r17, 0x01	; 1
     c82:	99 f7       	brne	.-26     	; 0xc6a <LCD_DisplayNumber+0xf6>
     c84:	2a 96       	adiw	r28, 0x0a	; 10
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	f8 94       	cli
     c8a:	de bf       	out	0x3e, r29	; 62
     c8c:	0f be       	out	0x3f, r0	; 63
     c8e:	cd bf       	out	0x3d, r28	; 61
     c90:	df 91       	pop	r29
     c92:	cf 91       	pop	r28
     c94:	1f 91       	pop	r17
     c96:	0f 91       	pop	r16
     c98:	ff 90       	pop	r15
     c9a:	ef 90       	pop	r14
     c9c:	df 90       	pop	r13
     c9e:	cf 90       	pop	r12
     ca0:	bf 90       	pop	r11
     ca2:	af 90       	pop	r10
     ca4:	9f 90       	pop	r9
     ca6:	8f 90       	pop	r8
     ca8:	7f 90       	pop	r7
     caa:	6f 90       	pop	r6
     cac:	5f 90       	pop	r5
     cae:	4f 90       	pop	r4
     cb0:	08 95       	ret

00000cb2 <LCD_DisplayFloatNumber>:
     cb2:	8f 92       	push	r8
     cb4:	9f 92       	push	r9
     cb6:	af 92       	push	r10
     cb8:	bf 92       	push	r11
     cba:	cf 92       	push	r12
     cbc:	df 92       	push	r13
     cbe:	ef 92       	push	r14
     cc0:	ff 92       	push	r15
     cc2:	6b 01       	movw	r12, r22
     cc4:	7c 01       	movw	r14, r24
     cc6:	0e 94 f2 0d 	call	0x1be4	; 0x1be4 <__fixunssfsi>
     cca:	4b 01       	movw	r8, r22
     ccc:	5c 01       	movw	r10, r24
     cce:	2f ef       	ldi	r18, 0xFF	; 255
     cd0:	ab 01       	movw	r20, r22
     cd2:	bc 01       	movw	r22, r24
     cd4:	8a e0       	ldi	r24, 0x0A	; 10
     cd6:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
     cda:	8e e2       	ldi	r24, 0x2E	; 46
     cdc:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <LCD_DisplayChar>
     ce0:	c5 01       	movw	r24, r10
     ce2:	b4 01       	movw	r22, r8
     ce4:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <__floatunsisf>
     ce8:	9b 01       	movw	r18, r22
     cea:	ac 01       	movw	r20, r24
     cec:	c7 01       	movw	r24, r14
     cee:	b6 01       	movw	r22, r12
     cf0:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <__subsf3>
     cf4:	20 e0       	ldi	r18, 0x00	; 0
     cf6:	34 e2       	ldi	r19, 0x24	; 36
     cf8:	44 e7       	ldi	r20, 0x74	; 116
     cfa:	59 e4       	ldi	r21, 0x49	; 73
     cfc:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <__mulsf3>
     d00:	0e 94 f2 0d 	call	0x1be4	; 0x1be4 <__fixunssfsi>
     d04:	ab 01       	movw	r20, r22
     d06:	bc 01       	movw	r22, r24
     d08:	2f ef       	ldi	r18, 0xFF	; 255
     d0a:	8a e0       	ldi	r24, 0x0A	; 10
     d0c:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
     d10:	ff 90       	pop	r15
     d12:	ef 90       	pop	r14
     d14:	df 90       	pop	r13
     d16:	cf 90       	pop	r12
     d18:	bf 90       	pop	r11
     d1a:	af 90       	pop	r10
     d1c:	9f 90       	pop	r9
     d1e:	8f 90       	pop	r8
     d20:	08 95       	ret

00000d22 <LCD_Printf>:
     d22:	4f 92       	push	r4
     d24:	5f 92       	push	r5
     d26:	6f 92       	push	r6
     d28:	7f 92       	push	r7
     d2a:	8f 92       	push	r8
     d2c:	9f 92       	push	r9
     d2e:	af 92       	push	r10
     d30:	bf 92       	push	r11
     d32:	cf 92       	push	r12
     d34:	df 92       	push	r13
     d36:	ef 92       	push	r14
     d38:	ff 92       	push	r15
     d3a:	0f 93       	push	r16
     d3c:	1f 93       	push	r17
     d3e:	cf 93       	push	r28
     d40:	df 93       	push	r29
     d42:	cd b7       	in	r28, 0x3d	; 61
     d44:	de b7       	in	r29, 0x3e	; 62
     d46:	fe 01       	movw	r30, r28
     d48:	73 96       	adiw	r30, 0x13	; 19
     d4a:	81 90       	ld	r8, Z+
     d4c:	91 90       	ld	r9, Z+
     d4e:	7f 01       	movw	r14, r30
     d50:	d4 01       	movw	r26, r8
     d52:	8c 91       	ld	r24, X
     d54:	88 23       	and	r24, r24
     d56:	09 f4       	brne	.+2      	; 0xd5a <LCD_Printf+0x38>
     d58:	07 c1       	rjmp	.+526    	; 0xf68 <LCD_Printf+0x246>
     d5a:	68 94       	set
     d5c:	aa 24       	eor	r10, r10
     d5e:	a4 f8       	bld	r10, 4
     d60:	bb 24       	eor	r11, r11
     d62:	ba 94       	dec	r11
     d64:	00 e0       	ldi	r16, 0x00	; 0
     d66:	85 32       	cpi	r24, 0x25	; 37
     d68:	09 f0       	breq	.+2      	; 0xd6c <LCD_Printf+0x4a>
     d6a:	dc c0       	rjmp	.+440    	; 0xf24 <LCD_Printf+0x202>
     d6c:	64 01       	movw	r12, r8
     d6e:	bf ef       	ldi	r27, 0xFF	; 255
     d70:	cb 1a       	sub	r12, r27
     d72:	db 0a       	sbc	r13, r27
     d74:	d4 01       	movw	r26, r8
     d76:	11 96       	adiw	r26, 0x01	; 1
     d78:	ec 91       	ld	r30, X
     d7a:	11 97       	sbiw	r26, 0x01	; 1
     d7c:	80 ed       	ldi	r24, 0xD0	; 208
     d7e:	8e 0f       	add	r24, r30
     d80:	8a 30       	cpi	r24, 0x0A	; 10
     d82:	08 f0       	brcs	.+2      	; 0xd86 <LCD_Printf+0x64>
     d84:	e6 c0       	rjmp	.+460    	; 0xf52 <LCD_Printf+0x230>
     d86:	12 96       	adiw	r26, 0x02	; 2
     d88:	10 2f       	mov	r17, r16
     d8a:	21 2f       	mov	r18, r17
     d8c:	22 0f       	add	r18, r18
     d8e:	82 2f       	mov	r24, r18
     d90:	88 0f       	add	r24, r24
     d92:	88 0f       	add	r24, r24
     d94:	28 0f       	add	r18, r24
     d96:	20 53       	subi	r18, 0x30	; 48
     d98:	12 2f       	mov	r17, r18
     d9a:	1e 0f       	add	r17, r30
     d9c:	6d 01       	movw	r12, r26
     d9e:	ed 91       	ld	r30, X+
     da0:	80 ed       	ldi	r24, 0xD0	; 208
     da2:	8e 0f       	add	r24, r30
     da4:	8a 30       	cpi	r24, 0x0A	; 10
     da6:	88 f3       	brcs	.-30     	; 0xd8a <LCD_Printf+0x68>
     da8:	8e 2f       	mov	r24, r30
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	fc 01       	movw	r30, r24
     dae:	b5 97       	sbiw	r30, 0x25	; 37
     db0:	e4 35       	cpi	r30, 0x54	; 84
     db2:	f1 05       	cpc	r31, r1
     db4:	08 f0       	brcs	.+2      	; 0xdb8 <LCD_Printf+0x96>
     db6:	b9 c0       	rjmp	.+370    	; 0xf2a <LCD_Printf+0x208>
     db8:	e6 5d       	subi	r30, 0xD6	; 214
     dba:	ff 4f       	sbci	r31, 0xFF	; 255
     dbc:	0c 94 67 0f 	jmp	0x1ece	; 0x1ece <__tablejump2__>
     dc0:	47 01       	movw	r8, r14
     dc2:	b2 e0       	ldi	r27, 0x02	; 2
     dc4:	8b 0e       	add	r8, r27
     dc6:	91 1c       	adc	r9, r1
     dc8:	f7 01       	movw	r30, r14
     dca:	80 81       	ld	r24, Z
     dcc:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <LCD_DisplayChar>
     dd0:	74 01       	movw	r14, r8
     dd2:	ab c0       	rjmp	.+342    	; 0xf2a <LCD_Printf+0x208>
     dd4:	1b 2d       	mov	r17, r11
     dd6:	f7 01       	movw	r30, r14
     dd8:	80 80       	ld	r8, Z
     dda:	91 80       	ldd	r9, Z+1	; 0x01
     ddc:	f2 e0       	ldi	r31, 0x02	; 2
     dde:	ef 0e       	add	r14, r31
     de0:	f1 1c       	adc	r15, r1
     de2:	99 20       	and	r9, r9
     de4:	34 f4       	brge	.+12     	; 0xdf2 <LCD_Printf+0xd0>
     de6:	91 94       	neg	r9
     de8:	81 94       	neg	r8
     dea:	91 08       	sbc	r9, r1
     dec:	8d e2       	ldi	r24, 0x2D	; 45
     dee:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <LCD_DisplayChar>
     df2:	a4 01       	movw	r20, r8
     df4:	99 0c       	add	r9, r9
     df6:	66 0b       	sbc	r22, r22
     df8:	77 0b       	sbc	r23, r23
     dfa:	21 2f       	mov	r18, r17
     dfc:	8a e0       	ldi	r24, 0x0A	; 10
     dfe:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
     e02:	93 c0       	rjmp	.+294    	; 0xf2a <LCD_Printf+0x208>
     e04:	1b 2d       	mov	r17, r11
     e06:	f7 01       	movw	r30, r14
     e08:	40 80       	ld	r4, Z
     e0a:	51 80       	ldd	r5, Z+1	; 0x01
     e0c:	62 80       	ldd	r6, Z+2	; 0x02
     e0e:	73 80       	ldd	r7, Z+3	; 0x03
     e10:	24 e0       	ldi	r18, 0x04	; 4
     e12:	e2 0e       	add	r14, r18
     e14:	f1 1c       	adc	r15, r1
     e16:	77 20       	and	r7, r7
     e18:	5c f4       	brge	.+22     	; 0xe30 <LCD_Printf+0x10e>
     e1a:	70 94       	com	r7
     e1c:	60 94       	com	r6
     e1e:	50 94       	com	r5
     e20:	40 94       	com	r4
     e22:	41 1c       	adc	r4, r1
     e24:	51 1c       	adc	r5, r1
     e26:	61 1c       	adc	r6, r1
     e28:	71 1c       	adc	r7, r1
     e2a:	8d e2       	ldi	r24, 0x2D	; 45
     e2c:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <LCD_DisplayChar>
     e30:	21 2f       	mov	r18, r17
     e32:	b3 01       	movw	r22, r6
     e34:	a2 01       	movw	r20, r4
     e36:	8a e0       	ldi	r24, 0x0A	; 10
     e38:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
     e3c:	76 c0       	rjmp	.+236    	; 0xf2a <LCD_Printf+0x208>
     e3e:	1b 2d       	mov	r17, r11
     e40:	f7 01       	movw	r30, r14
     e42:	40 81       	ld	r20, Z
     e44:	51 81       	ldd	r21, Z+1	; 0x01
     e46:	82 e0       	ldi	r24, 0x02	; 2
     e48:	e8 0e       	add	r14, r24
     e4a:	f1 1c       	adc	r15, r1
     e4c:	60 e0       	ldi	r22, 0x00	; 0
     e4e:	70 e0       	ldi	r23, 0x00	; 0
     e50:	21 2f       	mov	r18, r17
     e52:	8a e0       	ldi	r24, 0x0A	; 10
     e54:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
     e58:	68 c0       	rjmp	.+208    	; 0xf2a <LCD_Printf+0x208>
     e5a:	1b 2d       	mov	r17, r11
     e5c:	f7 01       	movw	r30, r14
     e5e:	40 81       	ld	r20, Z
     e60:	51 81       	ldd	r21, Z+1	; 0x01
     e62:	62 81       	ldd	r22, Z+2	; 0x02
     e64:	73 81       	ldd	r23, Z+3	; 0x03
     e66:	a4 e0       	ldi	r26, 0x04	; 4
     e68:	ea 0e       	add	r14, r26
     e6a:	f1 1c       	adc	r15, r1
     e6c:	21 2f       	mov	r18, r17
     e6e:	8a e0       	ldi	r24, 0x0A	; 10
     e70:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
     e74:	5a c0       	rjmp	.+180    	; 0xf2a <LCD_Printf+0x208>
     e76:	1b 2d       	mov	r17, r11
     e78:	f7 01       	movw	r30, r14
     e7a:	40 81       	ld	r20, Z
     e7c:	51 81       	ldd	r21, Z+1	; 0x01
     e7e:	b2 e0       	ldi	r27, 0x02	; 2
     e80:	eb 0e       	add	r14, r27
     e82:	f1 1c       	adc	r15, r1
     e84:	60 e0       	ldi	r22, 0x00	; 0
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	21 2f       	mov	r18, r17
     e8a:	8a 2d       	mov	r24, r10
     e8c:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
     e90:	4c c0       	rjmp	.+152    	; 0xf2a <LCD_Printf+0x208>
     e92:	1b 2d       	mov	r17, r11
     e94:	f7 01       	movw	r30, r14
     e96:	40 81       	ld	r20, Z
     e98:	51 81       	ldd	r21, Z+1	; 0x01
     e9a:	62 81       	ldd	r22, Z+2	; 0x02
     e9c:	73 81       	ldd	r23, Z+3	; 0x03
     e9e:	e4 e0       	ldi	r30, 0x04	; 4
     ea0:	ee 0e       	add	r14, r30
     ea2:	f1 1c       	adc	r15, r1
     ea4:	21 2f       	mov	r18, r17
     ea6:	8a 2d       	mov	r24, r10
     ea8:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
     eac:	3e c0       	rjmp	.+124    	; 0xf2a <LCD_Printf+0x208>
     eae:	1b 2d       	mov	r17, r11
     eb0:	f7 01       	movw	r30, r14
     eb2:	40 81       	ld	r20, Z
     eb4:	51 81       	ldd	r21, Z+1	; 0x01
     eb6:	f2 e0       	ldi	r31, 0x02	; 2
     eb8:	ef 0e       	add	r14, r31
     eba:	f1 1c       	adc	r15, r1
     ebc:	1f 3f       	cpi	r17, 0xFF	; 255
     ebe:	09 f4       	brne	.+2      	; 0xec2 <LCD_Printf+0x1a0>
     ec0:	1a 2d       	mov	r17, r10
     ec2:	60 e0       	ldi	r22, 0x00	; 0
     ec4:	70 e0       	ldi	r23, 0x00	; 0
     ec6:	21 2f       	mov	r18, r17
     ec8:	82 e0       	ldi	r24, 0x02	; 2
     eca:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
     ece:	2d c0       	rjmp	.+90     	; 0xf2a <LCD_Printf+0x208>
     ed0:	f7 01       	movw	r30, r14
     ed2:	40 81       	ld	r20, Z
     ed4:	51 81       	ldd	r21, Z+1	; 0x01
     ed6:	62 81       	ldd	r22, Z+2	; 0x02
     ed8:	73 81       	ldd	r23, Z+3	; 0x03
     eda:	24 e0       	ldi	r18, 0x04	; 4
     edc:	e2 0e       	add	r14, r18
     ede:	f1 1c       	adc	r15, r1
     ee0:	1f 3f       	cpi	r17, 0xFF	; 255
     ee2:	09 f4       	brne	.+2      	; 0xee6 <LCD_Printf+0x1c4>
     ee4:	1a 2d       	mov	r17, r10
     ee6:	21 2f       	mov	r18, r17
     ee8:	82 e0       	ldi	r24, 0x02	; 2
     eea:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
     eee:	1d c0       	rjmp	.+58     	; 0xf2a <LCD_Printf+0x208>
     ef0:	f7 01       	movw	r30, r14
     ef2:	60 81       	ld	r22, Z
     ef4:	71 81       	ldd	r23, Z+1	; 0x01
     ef6:	82 81       	ldd	r24, Z+2	; 0x02
     ef8:	93 81       	ldd	r25, Z+3	; 0x03
     efa:	a4 e0       	ldi	r26, 0x04	; 4
     efc:	ea 0e       	add	r14, r26
     efe:	f1 1c       	adc	r15, r1
     f00:	0e 94 59 06 	call	0xcb2	; 0xcb2 <LCD_DisplayFloatNumber>
     f04:	12 c0       	rjmp	.+36     	; 0xf2a <LCD_Printf+0x208>
     f06:	47 01       	movw	r8, r14
     f08:	b2 e0       	ldi	r27, 0x02	; 2
     f0a:	8b 0e       	add	r8, r27
     f0c:	91 1c       	adc	r9, r1
     f0e:	f7 01       	movw	r30, r14
     f10:	80 81       	ld	r24, Z
     f12:	91 81       	ldd	r25, Z+1	; 0x01
     f14:	0e 94 ab 05 	call	0xb56	; 0xb56 <LCD_DisplayString>
     f18:	74 01       	movw	r14, r8
     f1a:	07 c0       	rjmp	.+14     	; 0xf2a <LCD_Printf+0x208>
     f1c:	85 e2       	ldi	r24, 0x25	; 37
     f1e:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <LCD_DisplayChar>
     f22:	03 c0       	rjmp	.+6      	; 0xf2a <LCD_Printf+0x208>
     f24:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <LCD_DisplayChar>
     f28:	64 01       	movw	r12, r8
     f2a:	46 01       	movw	r8, r12
     f2c:	ff ef       	ldi	r31, 0xFF	; 255
     f2e:	8f 1a       	sub	r8, r31
     f30:	9f 0a       	sbc	r9, r31
     f32:	d6 01       	movw	r26, r12
     f34:	11 96       	adiw	r26, 0x01	; 1
     f36:	8c 91       	ld	r24, X
     f38:	81 11       	cpse	r24, r1
     f3a:	15 cf       	rjmp	.-470    	; 0xd66 <LCD_Printf+0x44>
     f3c:	15 c0       	rjmp	.+42     	; 0xf68 <LCD_Printf+0x246>
     f3e:	f7 01       	movw	r30, r14
     f40:	40 81       	ld	r20, Z
     f42:	51 81       	ldd	r21, Z+1	; 0x01
     f44:	62 81       	ldd	r22, Z+2	; 0x02
     f46:	73 81       	ldd	r23, Z+3	; 0x03
     f48:	b4 e0       	ldi	r27, 0x04	; 4
     f4a:	eb 0e       	add	r14, r27
     f4c:	f1 1c       	adc	r15, r1
     f4e:	1a 2d       	mov	r17, r10
     f50:	ca cf       	rjmp	.-108    	; 0xee6 <LCD_Printf+0x1c4>
     f52:	8e 2f       	mov	r24, r30
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	fc 01       	movw	r30, r24
     f58:	b5 97       	sbiw	r30, 0x25	; 37
     f5a:	e4 35       	cpi	r30, 0x54	; 84
     f5c:	f1 05       	cpc	r31, r1
     f5e:	28 f7       	brcc	.-54     	; 0xf2a <LCD_Printf+0x208>
     f60:	e2 58       	subi	r30, 0x82	; 130
     f62:	ff 4f       	sbci	r31, 0xFF	; 255
     f64:	0c 94 67 0f 	jmp	0x1ece	; 0x1ece <__tablejump2__>
     f68:	df 91       	pop	r29
     f6a:	cf 91       	pop	r28
     f6c:	1f 91       	pop	r17
     f6e:	0f 91       	pop	r16
     f70:	ff 90       	pop	r15
     f72:	ef 90       	pop	r14
     f74:	df 90       	pop	r13
     f76:	cf 90       	pop	r12
     f78:	bf 90       	pop	r11
     f7a:	af 90       	pop	r10
     f7c:	9f 90       	pop	r9
     f7e:	8f 90       	pop	r8
     f80:	7f 90       	pop	r7
     f82:	6f 90       	pop	r6
     f84:	5f 90       	pop	r5
     f86:	4f 90       	pop	r4
     f88:	08 95       	ret

00000f8a <InitADC>:
	
}

void InitADC()
{
	ADMUX = (1 << REFS0);
     f8a:	80 e4       	ldi	r24, 0x40	; 64
     f8c:	87 b9       	out	0x07, r24	; 7
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
     f8e:	87 e8       	ldi	r24, 0x87	; 135
     f90:	86 b9       	out	0x06, r24	; 6
     f92:	08 95       	ret

00000f94 <ReadADC>:
}

uint16_t ReadADC(uint8_t ch)
{
	ch = ch & 0b00000111;
	ADMUX |= ch;
     f94:	97 b1       	in	r25, 0x07	; 7
     f96:	87 70       	andi	r24, 0x07	; 7
     f98:	98 2b       	or	r25, r24
     f9a:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= (1 << ADSC);
     f9c:	36 9a       	sbi	0x06, 6	; 6
	while (!(ADCSRA & (1 << ADIF)))
     f9e:	34 9b       	sbis	0x06, 4	; 6
     fa0:	fe cf       	rjmp	.-4      	; 0xf9e <ReadADC+0xa>
		;
	ADCSRA |= (1 << ADIF);
     fa2:	34 9a       	sbi	0x06, 4	; 6
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     fa4:	2f ef       	ldi	r18, 0xFF	; 255
     fa6:	80 e7       	ldi	r24, 0x70	; 112
     fa8:	92 e0       	ldi	r25, 0x02	; 2
     faa:	21 50       	subi	r18, 0x01	; 1
     fac:	80 40       	sbci	r24, 0x00	; 0
     fae:	90 40       	sbci	r25, 0x00	; 0
     fb0:	e1 f7       	brne	.-8      	; 0xfaa <ReadADC+0x16>
     fb2:	00 c0       	rjmp	.+0      	; 0xfb4 <ReadADC+0x20>
     fb4:	00 00       	nop
	_delay_ms(100);
	return (ADC);
     fb6:	84 b1       	in	r24, 0x04	; 4
     fb8:	95 b1       	in	r25, 0x05	; 5
}
     fba:	08 95       	ret

00000fbc <gsm_comm>:

	send_sms();
}

void gsm_comm(char *a)
{
     fbc:	cf 93       	push	r28
     fbe:	df 93       	push	r29
     fc0:	ec 01       	movw	r28, r24

	while (*a > 0)
     fc2:	98 81       	ld	r25, Y
     fc4:	99 23       	and	r25, r25
     fc6:	59 f0       	breq	.+22     	; 0xfde <gsm_comm+0x22>
     fc8:	21 96       	adiw	r28, 0x01	; 1
	{
		while (!(UCSRA & (1 << UDRE)))
     fca:	5d 9b       	sbis	0x0b, 5	; 11
     fcc:	fe cf       	rjmp	.-4      	; 0xfca <gsm_comm+0xe>
			;
		UDR = *a++;
     fce:	9c b9       	out	0x0c, r25	; 12
		DELAY_ms(10);
     fd0:	8a e0       	ldi	r24, 0x0A	; 10
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
}

void gsm_comm(char *a)
{

	while (*a > 0)
     fd8:	99 91       	ld	r25, Y+
     fda:	91 11       	cpse	r25, r1
     fdc:	f6 cf       	rjmp	.-20     	; 0xfca <gsm_comm+0xe>
		while (!(UCSRA & (1 << UDRE)))
			;
		UDR = *a++;
		DELAY_ms(10);
	}
}
     fde:	df 91       	pop	r29
     fe0:	cf 91       	pop	r28
     fe2:	08 95       	ret

00000fe4 <chartonum>:

}

int chartonum(char x)
{
	if (x == '1')
     fe4:	81 33       	cpi	r24, 0x31	; 49
     fe6:	99 f0       	breq	.+38     	; 0x100e <chartonum+0x2a>
		return 1;
	else if (x == '2')
     fe8:	82 33       	cpi	r24, 0x32	; 50
     fea:	a1 f0       	breq	.+40     	; 0x1014 <chartonum+0x30>
		return 2;
	else if (x == '3')
     fec:	83 33       	cpi	r24, 0x33	; 51
     fee:	a9 f0       	breq	.+42     	; 0x101a <chartonum+0x36>
		return 3;
	else if (x == '4')
     ff0:	84 33       	cpi	r24, 0x34	; 52
     ff2:	b1 f0       	breq	.+44     	; 0x1020 <chartonum+0x3c>
		return 4;
	else if (x == '5')
     ff4:	85 33       	cpi	r24, 0x35	; 53
     ff6:	b9 f0       	breq	.+46     	; 0x1026 <chartonum+0x42>
		return 5;
	else if (x == '6')
     ff8:	86 33       	cpi	r24, 0x36	; 54
     ffa:	c1 f0       	breq	.+48     	; 0x102c <chartonum+0x48>
		return 6;
	else if (x == '7')
     ffc:	87 33       	cpi	r24, 0x37	; 55
     ffe:	c9 f0       	breq	.+50     	; 0x1032 <chartonum+0x4e>
		return 7;
	else if (x == '8')
    1000:	88 33       	cpi	r24, 0x38	; 56
    1002:	d1 f0       	breq	.+52     	; 0x1038 <chartonum+0x54>
		return 8;
	else if (x == '9')
    1004:	89 33       	cpi	r24, 0x39	; 57
    1006:	d9 f0       	breq	.+54     	; 0x103e <chartonum+0x5a>
		return 9;

	return (0);
    1008:	80 e0       	ldi	r24, 0x00	; 0
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	08 95       	ret
}

int chartonum(char x)
{
	if (x == '1')
		return 1;
    100e:	81 e0       	ldi	r24, 0x01	; 1
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	08 95       	ret
	else if (x == '2')
		return 2;
    1014:	82 e0       	ldi	r24, 0x02	; 2
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	08 95       	ret
	else if (x == '3')
		return 3;
    101a:	83 e0       	ldi	r24, 0x03	; 3
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	08 95       	ret
	else if (x == '4')
		return 4;
    1020:	84 e0       	ldi	r24, 0x04	; 4
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	08 95       	ret
	else if (x == '5')
		return 5;
    1026:	85 e0       	ldi	r24, 0x05	; 5
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	08 95       	ret
	else if (x == '6')
		return 6;
    102c:	86 e0       	ldi	r24, 0x06	; 6
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	08 95       	ret
	else if (x == '7')
		return 7;
    1032:	87 e0       	ldi	r24, 0x07	; 7
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	08 95       	ret
	else if (x == '8')
		return 8;
    1038:	88 e0       	ldi	r24, 0x08	; 8
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	08 95       	ret
	else if (x == '9')
		return 9;
    103e:	89 e0       	ldi	r24, 0x09	; 9
    1040:	90 e0       	ldi	r25, 0x00	; 0

	return (0);
}
    1042:	08 95       	ret

00001044 <mobileNumberEntering>:
	KEYPAD_Init(PB_0, PB_1, PB_2, PB_3, PB_4, PB_5, PB_6, PB_7);
	
	mobileNumberEntering();
}
void mobileNumberEntering()
{
    1044:	0f 93       	push	r16
    1046:	1f 93       	push	r17
    1048:	cf 93       	push	r28
    104a:	df 93       	push	r29
    104c:	cd b7       	in	r28, 0x3d	; 61
    104e:	de b7       	in	r29, 0x3e	; 62
    1050:	2a 97       	sbiw	r28, 0x0a	; 10
    1052:	0f b6       	in	r0, 0x3f	; 63
    1054:	f8 94       	cli
    1056:	de bf       	out	0x3e, r29	; 62
    1058:	0f be       	out	0x3f, r0	; 63
    105a:	cd bf       	out	0x3d, r28	; 61
	LCD_Clear();
    105c:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_Printf("    WELCOME     ");
    1060:	84 e7       	ldi	r24, 0x74	; 116
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	9f 93       	push	r25
    1066:	8f 93       	push	r24
    1068:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(1000);
    106c:	88 ee       	ldi	r24, 0xE8	; 232
    106e:	93 e0       	ldi	r25, 0x03	; 3
    1070:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Clear();
    1074:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_Printf("  ENTER  MOBILE ");
    1078:	85 e8       	ldi	r24, 0x85	; 133
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	9f 93       	push	r25
    107e:	8f 93       	push	r24
    1080:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	LCD_GoToLine(1);
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_GoToLine>
	LCD_Printf("   NUMBER -->   ");
    108a:	86 e9       	ldi	r24, 0x96	; 150
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	9f 93       	push	r25
    1090:	8f 93       	push	r24
    1092:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>

	
	char n2[10];
	int i = 0;
	strcpy(mobileNumber, "0");
    1096:	80 e3       	ldi	r24, 0x30	; 48
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	90 93 8f 03 	sts	0x038F, r25	; 0x80038f <mobileNumber+0x1>
    109e:	80 93 8e 03 	sts	0x038E, r24	; 0x80038e <mobileNumber>
    10a2:	0f 90       	pop	r0
    10a4:	0f 90       	pop	r0
    10a6:	0f 90       	pop	r0
    10a8:	0f 90       	pop	r0
    10aa:	0f 90       	pop	r0
    10ac:	0f 90       	pop	r0
    10ae:	01 e0       	ldi	r16, 0x01	; 1
    10b0:	10 e0       	ldi	r17, 0x00	; 0
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <mobileNumberEntering+0x74>
    10b4:	0f 5f       	subi	r16, 0xFF	; 255
    10b6:	1f 4f       	sbci	r17, 0xFF	; 255
	for (; i < 9; i++)
	{
		key = KEYPAD_GetKey();
    10b8:	0e 94 e7 02 	call	0x5ce	; 0x5ce <KEYPAD_GetKey>
    10bc:	80 93 8d 03 	sts	0x038D, r24	; 0x80038d <key>
		if (i == 0)	LCD_Clear();
    10c0:	01 30       	cpi	r16, 0x01	; 1
    10c2:	11 05       	cpc	r17, r1
    10c4:	41 f5       	brne	.+80     	; 0x1116 <mobileNumberEntering+0xd2>
    10c6:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
		num = chartonum(key);
    10ca:	80 91 8d 03 	lds	r24, 0x038D	; 0x80038d <key>
    10ce:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <chartonum>
    10d2:	90 93 bc 02 	sts	0x02BC, r25	; 0x8002bc <num+0x1>
    10d6:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <num>
		LCD_DisplayNumber(10, num, C_DisplayDefaultDigits_U8);
    10da:	ac 01       	movw	r20, r24
    10dc:	99 0f       	add	r25, r25
    10de:	66 0b       	sbc	r22, r22
    10e0:	77 0b       	sbc	r23, r23
    10e2:	2f ef       	ldi	r18, 0xFF	; 255
    10e4:	8a e0       	ldi	r24, 0x0A	; 10
    10e6:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    10ea:	4a e0       	ldi	r20, 0x0A	; 10
    10ec:	be 01       	movw	r22, r28
    10ee:	6f 5f       	subi	r22, 0xFF	; 255
    10f0:	7f 4f       	sbci	r23, 0xFF	; 255
    10f2:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <num>
    10f6:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <num+0x1>
    10fa:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__itoa_ncheck>
		itoa(num, n2, 10);
		strcat(mobileNumber, n2);
    10fe:	be 01       	movw	r22, r28
    1100:	6f 5f       	subi	r22, 0xFF	; 255
    1102:	7f 4f       	sbci	r23, 0xFF	; 255
    1104:	8e e8       	ldi	r24, 0x8E	; 142
    1106:	93 e0       	ldi	r25, 0x03	; 3
    1108:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <strcat>
		DELAY_ms(100);
    110c:	84 e6       	ldi	r24, 0x64	; 100
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
    1114:	cf cf       	rjmp	.-98     	; 0x10b4 <mobileNumberEntering+0x70>
	strcpy(mobileNumber, "0");
	for (; i < 9; i++)
	{
		key = KEYPAD_GetKey();
		if (i == 0)	LCD_Clear();
		num = chartonum(key);
    1116:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <chartonum>
    111a:	90 93 bc 02 	sts	0x02BC, r25	; 0x8002bc <num+0x1>
    111e:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <num>
		LCD_DisplayNumber(10, num, C_DisplayDefaultDigits_U8);
    1122:	ac 01       	movw	r20, r24
    1124:	99 0f       	add	r25, r25
    1126:	66 0b       	sbc	r22, r22
    1128:	77 0b       	sbc	r23, r23
    112a:	2f ef       	ldi	r18, 0xFF	; 255
    112c:	8a e0       	ldi	r24, 0x0A	; 10
    112e:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
    1132:	4a e0       	ldi	r20, 0x0A	; 10
    1134:	be 01       	movw	r22, r28
    1136:	6f 5f       	subi	r22, 0xFF	; 255
    1138:	7f 4f       	sbci	r23, 0xFF	; 255
    113a:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <num>
    113e:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <num+0x1>
    1142:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__itoa_ncheck>
		itoa(num, n2, 10);
		strcat(mobileNumber, n2);
    1146:	be 01       	movw	r22, r28
    1148:	6f 5f       	subi	r22, 0xFF	; 255
    114a:	7f 4f       	sbci	r23, 0xFF	; 255
    114c:	8e e8       	ldi	r24, 0x8E	; 142
    114e:	93 e0       	ldi	r25, 0x03	; 3
    1150:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <strcat>
		DELAY_ms(100);
    1154:	84 e6       	ldi	r24, 0x64	; 100
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>

	
	char n2[10];
	int i = 0;
	strcpy(mobileNumber, "0");
	for (; i < 9; i++)
    115c:	09 30       	cpi	r16, 0x09	; 9
    115e:	11 05       	cpc	r17, r1
    1160:	0c f4       	brge	.+2      	; 0x1164 <mobileNumberEntering+0x120>
    1162:	a8 cf       	rjmp	.-176    	; 0x10b4 <mobileNumberEntering+0x70>
		LCD_DisplayNumber(10, num, C_DisplayDefaultDigits_U8);
		itoa(num, n2, 10);
		strcat(mobileNumber, n2);
		DELAY_ms(100);
	}
	LCD_GoToLine(1);
    1164:	81 e0       	ldi	r24, 0x01	; 1
    1166:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_GoToLine>
	LCD_Clear();
    116a:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_Printf(" Mobile number :");
    116e:	87 ea       	ldi	r24, 0xA7	; 167
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	9f 93       	push	r25
    1174:	8f 93       	push	r24
    1176:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	LCD_GoToLine(1);
    117a:	81 e0       	ldi	r24, 0x01	; 1
    117c:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_GoToLine>
	LCD_Printf("   ");
    1180:	81 e8       	ldi	r24, 0x81	; 129
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	9f 93       	push	r25
    1186:	8f 93       	push	r24
    1188:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	LCD_Printf(mobileNumber);
    118c:	0e e8       	ldi	r16, 0x8E	; 142
    118e:	13 e0       	ldi	r17, 0x03	; 3
    1190:	1f 93       	push	r17
    1192:	0f 93       	push	r16
    1194:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(3000);
    1198:	88 eb       	ldi	r24, 0xB8	; 184
    119a:	9b e0       	ldi	r25, 0x0B	; 11
    119c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Clear();
    11a0:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	strcat(mobileNumber, "\"");
    11a4:	f8 01       	movw	r30, r16
    11a6:	01 90       	ld	r0, Z+
    11a8:	00 20       	and	r0, r0
    11aa:	e9 f7       	brne	.-6      	; 0x11a6 <mobileNumberEntering+0x162>
    11ac:	31 97       	sbiw	r30, 0x01	; 1
    11ae:	82 e2       	ldi	r24, 0x22	; 34
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	91 83       	std	Z+1, r25	; 0x01
    11b4:	80 83       	st	Z, r24
	
	LCD_Printf("IF MOBILE NUMBER CORRECT PRESS 1");
    11b6:	88 eb       	ldi	r24, 0xB8	; 184
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	9f 93       	push	r25
    11bc:	8f 93       	push	r24
    11be:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(3000);
    11c2:	88 eb       	ldi	r24, 0xB8	; 184
    11c4:	9b e0       	ldi	r25, 0x0B	; 11
    11c6:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Clear();
    11ca:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_Printf(" IF NOT PRESS 2 ");
    11ce:	89 ed       	ldi	r24, 0xD9	; 217
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	9f 93       	push	r25
    11d4:	8f 93       	push	r24
    11d6:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>

	key = KEYPAD_GetKey();
    11da:	0e 94 e7 02 	call	0x5ce	; 0x5ce <KEYPAD_GetKey>
    11de:	80 93 8d 03 	sts	0x038D, r24	; 0x80038d <key>
	if (key == '2')	mobileNumberEntering();
    11e2:	0f b6       	in	r0, 0x3f	; 63
    11e4:	f8 94       	cli
    11e6:	de bf       	out	0x3e, r29	; 62
    11e8:	0f be       	out	0x3f, r0	; 63
    11ea:	cd bf       	out	0x3d, r28	; 61
    11ec:	82 33       	cpi	r24, 0x32	; 50
    11ee:	19 f4       	brne	.+6      	; 0x11f6 <mobileNumberEntering+0x1b2>
    11f0:	0e 94 22 08 	call	0x1044	; 0x1044 <mobileNumberEntering>
    11f4:	67 c0       	rjmp	.+206    	; 0x12c4 <mobileNumberEntering+0x280>
	else
	{
		LCD_Clear();
    11f6:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
		LCD_Printf("  ENTER SAMPLE       NUMBER     ");
    11fa:	8a ee       	ldi	r24, 0xEA	; 234
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	9f 93       	push	r25
    1200:	8f 93       	push	r24
    1202:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
    1206:	0f 90       	pop	r0
    1208:	0f 90       	pop	r0
    120a:	01 e0       	ldi	r16, 0x01	; 1
    120c:	10 e0       	ldi	r17, 0x00	; 0
    120e:	02 c0       	rjmp	.+4      	; 0x1214 <mobileNumberEntering+0x1d0>
    1210:	0f 5f       	subi	r16, 0xFF	; 255
    1212:	1f 4f       	sbci	r17, 0xFF	; 255

		for (i = 0; i < 2; i++)
		{
			key = KEYPAD_GetKey();
    1214:	0e 94 e7 02 	call	0x5ce	; 0x5ce <KEYPAD_GetKey>
    1218:	80 93 8d 03 	sts	0x038D, r24	; 0x80038d <key>
			if (i == 0) LCD_Clear();			
    121c:	01 30       	cpi	r16, 0x01	; 1
    121e:	11 05       	cpc	r17, r1
    1220:	41 f5       	brne	.+80     	; 0x1272 <mobileNumberEntering+0x22e>
    1222:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
			num = chartonum(key);
    1226:	80 91 8d 03 	lds	r24, 0x038D	; 0x80038d <key>
    122a:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <chartonum>
    122e:	90 93 bc 02 	sts	0x02BC, r25	; 0x8002bc <num+0x1>
    1232:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <num>
			LCD_DisplayNumber(10, num, C_DisplayDefaultDigits_U8);
    1236:	ac 01       	movw	r20, r24
    1238:	99 0f       	add	r25, r25
    123a:	66 0b       	sbc	r22, r22
    123c:	77 0b       	sbc	r23, r23
    123e:	2f ef       	ldi	r18, 0xFF	; 255
    1240:	8a e0       	ldi	r24, 0x0A	; 10
    1242:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
    1246:	4a e0       	ldi	r20, 0x0A	; 10
    1248:	be 01       	movw	r22, r28
    124a:	6f 5f       	subi	r22, 0xFF	; 255
    124c:	7f 4f       	sbci	r23, 0xFF	; 255
    124e:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <num>
    1252:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <num+0x1>
    1256:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__itoa_ncheck>
			itoa(num, n2, 10);
			strcat(sampleNumber, n2);
    125a:	be 01       	movw	r22, r28
    125c:	6f 5f       	subi	r22, 0xFF	; 255
    125e:	7f 4f       	sbci	r23, 0xFF	; 255
    1260:	84 eb       	ldi	r24, 0xB4	; 180
    1262:	92 e0       	ldi	r25, 0x02	; 2
    1264:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <strcat>
			DELAY_ms(100);
    1268:	84 e6       	ldi	r24, 0x64	; 100
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
    1270:	cf cf       	rjmp	.-98     	; 0x1210 <mobileNumberEntering+0x1cc>

		for (i = 0; i < 2; i++)
		{
			key = KEYPAD_GetKey();
			if (i == 0) LCD_Clear();			
			num = chartonum(key);
    1272:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <chartonum>
    1276:	90 93 bc 02 	sts	0x02BC, r25	; 0x8002bc <num+0x1>
    127a:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <num>
			LCD_DisplayNumber(10, num, C_DisplayDefaultDigits_U8);
    127e:	ac 01       	movw	r20, r24
    1280:	99 0f       	add	r25, r25
    1282:	66 0b       	sbc	r22, r22
    1284:	77 0b       	sbc	r23, r23
    1286:	2f ef       	ldi	r18, 0xFF	; 255
    1288:	8a e0       	ldi	r24, 0x0A	; 10
    128a:	0e 94 ba 05 	call	0xb74	; 0xb74 <LCD_DisplayNumber>
    128e:	4a e0       	ldi	r20, 0x0A	; 10
    1290:	be 01       	movw	r22, r28
    1292:	6f 5f       	subi	r22, 0xFF	; 255
    1294:	7f 4f       	sbci	r23, 0xFF	; 255
    1296:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <num>
    129a:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <num+0x1>
    129e:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__itoa_ncheck>
			itoa(num, n2, 10);
			strcat(sampleNumber, n2);
    12a2:	be 01       	movw	r22, r28
    12a4:	6f 5f       	subi	r22, 0xFF	; 255
    12a6:	7f 4f       	sbci	r23, 0xFF	; 255
    12a8:	84 eb       	ldi	r24, 0xB4	; 180
    12aa:	92 e0       	ldi	r25, 0x02	; 2
    12ac:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <strcat>
			DELAY_ms(100);
    12b0:	84 e6       	ldi	r24, 0x64	; 100
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	else
	{
		LCD_Clear();
		LCD_Printf("  ENTER SAMPLE       NUMBER     ");

		for (i = 0; i < 2; i++)
    12b8:	02 30       	cpi	r16, 0x02	; 2
    12ba:	11 05       	cpc	r17, r1
    12bc:	0c f4       	brge	.+2      	; 0x12c0 <mobileNumberEntering+0x27c>
    12be:	a8 cf       	rjmp	.-176    	; 0x1210 <mobileNumberEntering+0x1cc>
			LCD_DisplayNumber(10, num, C_DisplayDefaultDigits_U8);
			itoa(num, n2, 10);
			strcat(sampleNumber, n2);
			DELAY_ms(100);
		}
	startProcess();
    12c0:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <startProcess>
	}

}
    12c4:	2a 96       	adiw	r28, 0x0a	; 10
    12c6:	0f b6       	in	r0, 0x3f	; 63
    12c8:	f8 94       	cli
    12ca:	de bf       	out	0x3e, r29	; 62
    12cc:	0f be       	out	0x3f, r0	; 63
    12ce:	cd bf       	out	0x3d, r28	; 61
    12d0:	df 91       	pop	r29
    12d2:	cf 91       	pop	r28
    12d4:	1f 91       	pop	r17
    12d6:	0f 91       	pop	r16
    12d8:	08 95       	ret

000012da <itemcode>:
	ADMUX = (1 << REFS0);
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
}

void itemcode()
{
    12da:	af 92       	push	r10
    12dc:	cf 92       	push	r12
    12de:	ef 92       	push	r14
    12e0:	0f 93       	push	r16
	
	DDRA &= ~(1 << PORTA6);
    12e2:	d6 98       	cbi	0x1a, 6	; 26
	PORTA &= ~(1 << PORTA6);
    12e4:	de 98       	cbi	0x1b, 6	; 27
	DDRA &= ~(1 << PORTA7);
    12e6:	d7 98       	cbi	0x1a, 7	; 26
	PORTA &= ~(1 << PORTA7);
    12e8:	df 98       	cbi	0x1b, 7	; 27


	KEYPAD_Init(PB_0, PB_1, PB_2, PB_3, PB_4, PB_5, PB_6, PB_7);
    12ea:	0f 2e       	mov	r0, r31
    12ec:	ff e0       	ldi	r31, 0x0F	; 15
    12ee:	af 2e       	mov	r10, r31
    12f0:	f0 2d       	mov	r31, r0
    12f2:	0f 2e       	mov	r0, r31
    12f4:	fe e0       	ldi	r31, 0x0E	; 14
    12f6:	cf 2e       	mov	r12, r31
    12f8:	f0 2d       	mov	r31, r0
    12fa:	0f 2e       	mov	r0, r31
    12fc:	fd e0       	ldi	r31, 0x0D	; 13
    12fe:	ef 2e       	mov	r14, r31
    1300:	f0 2d       	mov	r31, r0
    1302:	0c e0       	ldi	r16, 0x0C	; 12
    1304:	2b e0       	ldi	r18, 0x0B	; 11
    1306:	4a e0       	ldi	r20, 0x0A	; 10
    1308:	69 e0       	ldi	r22, 0x09	; 9
    130a:	88 e0       	ldi	r24, 0x08	; 8
    130c:	0e 94 b6 02 	call	0x56c	; 0x56c <KEYPAD_Init>
	
	mobileNumberEntering();
    1310:	0e 94 22 08 	call	0x1044	; 0x1044 <mobileNumberEntering>
}
    1314:	0f 91       	pop	r16
    1316:	ef 90       	pop	r14
    1318:	cf 90       	pop	r12
    131a:	af 90       	pop	r10
    131c:	08 95       	ret

0000131e <main>:
char qualityStatus[8];
char mobileMessageData[200];


int main()
{
    131e:	8f 92       	push	r8
    1320:	af 92       	push	r10
    1322:	cf 92       	push	r12
    1324:	ef 92       	push	r14
    1326:	0f 93       	push	r16
    1328:	cf 93       	push	r28
    132a:	df 93       	push	r29
	MCUCSR = (1 << JTD);
    132c:	80 e8       	ldi	r24, 0x80	; 128
    132e:	84 bf       	out	0x34, r24	; 52
	MCUCSR = (1 << JTD);
    1330:	84 bf       	out	0x34, r24	; 52

	DDRA |= (1 << PORTA4);
    1332:	d4 9a       	sbi	0x1a, 4	; 26
	PORTA |= (1 << PORTA4);
    1334:	dc 9a       	sbi	0x1b, 4	; 27
	
	
	/*Connect RS->PB0, RW->PB1, EN->PB2 and data bus PORTB.4 to PORTB.7*/
	LCD_SetUp(PC_0, PC_1, PC_2, P_NC, P_NC, P_NC, P_NC, PC_4, PC_5, PC_6, PC_7);
    1336:	87 e1       	ldi	r24, 0x17	; 23
    1338:	8f 93       	push	r24
    133a:	86 e1       	ldi	r24, 0x16	; 22
    133c:	8f 93       	push	r24
    133e:	0f 2e       	mov	r0, r31
    1340:	f5 e1       	ldi	r31, 0x15	; 21
    1342:	8f 2e       	mov	r8, r31
    1344:	f0 2d       	mov	r31, r0
    1346:	0f 2e       	mov	r0, r31
    1348:	f4 e1       	ldi	r31, 0x14	; 20
    134a:	af 2e       	mov	r10, r31
    134c:	f0 2d       	mov	r31, r0
    134e:	cc 24       	eor	r12, r12
    1350:	ca 94       	dec	r12
    1352:	ee 24       	eor	r14, r14
    1354:	ea 94       	dec	r14
    1356:	0f ef       	ldi	r16, 0xFF	; 255
    1358:	2f ef       	ldi	r18, 0xFF	; 255
    135a:	42 e1       	ldi	r20, 0x12	; 18
    135c:	61 e1       	ldi	r22, 0x11	; 17
    135e:	80 e1       	ldi	r24, 0x10	; 16
    1360:	0e 94 83 04 	call	0x906	; 0x906 <LCD_SetUp>
	LCD_Init(2, 16);
    1364:	60 e1       	ldi	r22, 0x10	; 16
    1366:	82 e0       	ldi	r24, 0x02	; 2
    1368:	0e 94 1d 05 	call	0xa3a	; 0xa3a <LCD_Init>

	/*Connect R1->PD0, R2->PD1, R3->PD2 R4->PD3, C1->PD4, C2->PD5 C3->PD6, C4->PD7 */
	KEYPAD_Init(PB_0, PB_1, PB_3, PB_2, PB_4, PB_5, PB_6, PB_7);
    136c:	0f 2e       	mov	r0, r31
    136e:	ff e0       	ldi	r31, 0x0F	; 15
    1370:	af 2e       	mov	r10, r31
    1372:	f0 2d       	mov	r31, r0
    1374:	0f 2e       	mov	r0, r31
    1376:	fe e0       	ldi	r31, 0x0E	; 14
    1378:	cf 2e       	mov	r12, r31
    137a:	f0 2d       	mov	r31, r0
    137c:	0f 2e       	mov	r0, r31
    137e:	fd e0       	ldi	r31, 0x0D	; 13
    1380:	ef 2e       	mov	r14, r31
    1382:	f0 2d       	mov	r31, r0
    1384:	0c e0       	ldi	r16, 0x0C	; 12
    1386:	2a e0       	ldi	r18, 0x0A	; 10
    1388:	4b e0       	ldi	r20, 0x0B	; 11
    138a:	69 e0       	ldi	r22, 0x09	; 9
    138c:	88 e0       	ldi	r24, 0x08	; 8
    138e:	0e 94 b6 02 	call	0x56c	; 0x56c <KEYPAD_Init>

	
	LCD_Clear();
    1392:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_Printf("  Water Quality ");
    1396:	8b e0       	ldi	r24, 0x0B	; 11
    1398:	91 e0       	ldi	r25, 0x01	; 1
    139a:	9f 93       	push	r25
    139c:	8f 93       	push	r24
    139e:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	LCD_GoToLine(1);
    13a2:	81 e0       	ldi	r24, 0x01	; 1
    13a4:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_GoToLine>
	LCD_Printf("     Tester     ");
    13a8:	8c e1       	ldi	r24, 0x1C	; 28
    13aa:	91 e0       	ldi	r25, 0x01	; 1
    13ac:	9f 93       	push	r25
    13ae:	8f 93       	push	r24
    13b0:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(2000);
    13b4:	80 ed       	ldi	r24, 0xD0	; 208
    13b6:	97 e0       	ldi	r25, 0x07	; 7
    13b8:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Clear();
    13bc:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_Printf("Initializing .");
    13c0:	8d e2       	ldi	r24, 0x2D	; 45
    13c2:	91 e0       	ldi	r25, 0x01	; 1
    13c4:	9f 93       	push	r25
    13c6:	8f 93       	push	r24
    13c8:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(800);
    13cc:	80 e2       	ldi	r24, 0x20	; 32
    13ce:	93 e0       	ldi	r25, 0x03	; 3
    13d0:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Printf(".");
    13d4:	ca e3       	ldi	r28, 0x3A	; 58
    13d6:	d1 e0       	ldi	r29, 0x01	; 1
    13d8:	df 93       	push	r29
    13da:	cf 93       	push	r28
    13dc:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(800);
    13e0:	80 e2       	ldi	r24, 0x20	; 32
    13e2:	93 e0       	ldi	r25, 0x03	; 3
    13e4:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Printf(".");
    13e8:	df 93       	push	r29
    13ea:	cf 93       	push	r28
    13ec:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(1500);
    13f0:	8c ed       	ldi	r24, 0xDC	; 220
    13f2:	95 e0       	ldi	r25, 0x05	; 5
    13f4:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Clear();
    13f8:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>

	itemcode();
    13fc:	0e 94 6d 09 	call	0x12da	; 0x12da <itemcode>
    1400:	8d b7       	in	r24, 0x3d	; 61
    1402:	9e b7       	in	r25, 0x3e	; 62
    1404:	0c 96       	adiw	r24, 0x0c	; 12
    1406:	0f b6       	in	r0, 0x3f	; 63
    1408:	f8 94       	cli
    140a:	9e bf       	out	0x3e, r25	; 62
    140c:	0f be       	out	0x3f, r0	; 63
    140e:	8d bf       	out	0x3d, r24	; 61

	return 0;
}
    1410:	80 e0       	ldi	r24, 0x00	; 0
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	df 91       	pop	r29
    1416:	cf 91       	pop	r28
    1418:	0f 91       	pop	r16
    141a:	ef 90       	pop	r14
    141c:	cf 90       	pop	r12
    141e:	af 90       	pop	r10
    1420:	8f 90       	pop	r8
    1422:	08 95       	ret

00001424 <send_sms>:
		DELAY_ms(10);
	}
}

void send_sms()
{
    1424:	ef 92       	push	r14
    1426:	ff 92       	push	r15
    1428:	0f 93       	push	r16
    142a:	1f 93       	push	r17
    142c:	cf 93       	push	r28
    142e:	df 93       	push	r29
    1430:	00 d0       	rcall	.+0      	; 0x1432 <send_sms+0xe>
    1432:	00 d0       	rcall	.+0      	; 0x1434 <send_sms+0x10>
    1434:	1f 92       	push	r1
    1436:	cd b7       	in	r28, 0x3d	; 61
    1438:	de b7       	in	r29, 0x3e	; 62
	LCD_Clear();
    143a:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	char t[5];
	LCD_Printf("SENDING.");
    143e:	8c e3       	ldi	r24, 0x3C	; 60
    1440:	91 e0       	ldi	r25, 0x01	; 1
    1442:	9f 93       	push	r25
    1444:	8f 93       	push	r24
    1446:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>

	gsm_comm("AT");
    144a:	85 e4       	ldi	r24, 0x45	; 69
    144c:	91 e0       	ldi	r25, 0x01	; 1
    144e:	0e 94 de 07 	call	0xfbc	; 0xfbc <gsm_comm>
	UDR = ('\r');
    1452:	0f 2e       	mov	r0, r31
    1454:	fd e0       	ldi	r31, 0x0D	; 13
    1456:	ff 2e       	mov	r15, r31
    1458:	f0 2d       	mov	r31, r0
    145a:	fc b8       	out	0x0c, r15	; 12
	LCD_Printf(" .");
    145c:	09 e3       	ldi	r16, 0x39	; 57
    145e:	11 e0       	ldi	r17, 0x01	; 1
    1460:	1f 93       	push	r17
    1462:	0f 93       	push	r16
    1464:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(100);
    1468:	84 e6       	ldi	r24, 0x64	; 100
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>

	gsm_comm("AT+CMGF=1");
    1470:	88 e4       	ldi	r24, 0x48	; 72
    1472:	91 e0       	ldi	r25, 0x01	; 1
    1474:	0e 94 de 07 	call	0xfbc	; 0xfbc <gsm_comm>
	UDR = ('\r');
    1478:	fc b8       	out	0x0c, r15	; 12
	LCD_Printf(" .");
    147a:	1f 93       	push	r17
    147c:	0f 93       	push	r16
    147e:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(100);
    1482:	84 e6       	ldi	r24, 0x64	; 100
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>

	gsm_comm("AT+CMGS=\"");
    148a:	82 e5       	ldi	r24, 0x52	; 82
    148c:	91 e0       	ldi	r25, 0x01	; 1
    148e:	0e 94 de 07 	call	0xfbc	; 0xfbc <gsm_comm>
	LCD_Printf(" .");
    1492:	1f 93       	push	r17
    1494:	0f 93       	push	r16
    1496:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(100);
    149a:	84 e6       	ldi	r24, 0x64	; 100
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>

	// gsm_comm("0714493567\"");
	gsm_comm(mobileNumber);
    14a2:	8e e8       	ldi	r24, 0x8E	; 142
    14a4:	93 e0       	ldi	r25, 0x03	; 3
    14a6:	0e 94 de 07 	call	0xfbc	; 0xfbc <gsm_comm>
	LCD_Printf(" .");
    14aa:	1f 93       	push	r17
    14ac:	0f 93       	push	r16
    14ae:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	LCD_Printf(mobileNumber);
    14b2:	8e e8       	ldi	r24, 0x8E	; 142
    14b4:	93 e0       	ldi	r25, 0x03	; 3
    14b6:	9f 93       	push	r25
    14b8:	8f 93       	push	r24
    14ba:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(100);
    14be:	84 e6       	ldi	r24, 0x64	; 100
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	UDR = ('\r');
    14c6:	fc b8       	out	0x0c, r15	; 12

	strcpy(mobileMessageData, "Water Quality Tester Report");
    14c8:	0f 2e       	mov	r0, r31
    14ca:	f5 ec       	ldi	r31, 0xC5	; 197
    14cc:	ef 2e       	mov	r14, r31
    14ce:	f2 e0       	ldi	r31, 0x02	; 2
    14d0:	ff 2e       	mov	r15, r31
    14d2:	f0 2d       	mov	r31, r0
    14d4:	8c e1       	ldi	r24, 0x1C	; 28
    14d6:	ec e5       	ldi	r30, 0x5C	; 92
    14d8:	f1 e0       	ldi	r31, 0x01	; 1
    14da:	d7 01       	movw	r26, r14
    14dc:	01 90       	ld	r0, Z+
    14de:	0d 92       	st	X+, r0
    14e0:	8a 95       	dec	r24
    14e2:	e1 f7       	brne	.-8      	; 0x14dc <send_sms+0xb8>
	strcat(mobileMessageData, "\nSample Number :");
    14e4:	d7 01       	movw	r26, r14
    14e6:	0d 90       	ld	r0, X+
    14e8:	00 20       	and	r0, r0
    14ea:	e9 f7       	brne	.-6      	; 0x14e6 <send_sms+0xc2>
    14ec:	11 97       	sbiw	r26, 0x01	; 1
    14ee:	81 e1       	ldi	r24, 0x11	; 17
    14f0:	e8 e7       	ldi	r30, 0x78	; 120
    14f2:	f1 e0       	ldi	r31, 0x01	; 1
    14f4:	01 90       	ld	r0, Z+
    14f6:	0d 92       	st	X+, r0
    14f8:	8a 95       	dec	r24
    14fa:	e1 f7       	brne	.-8      	; 0x14f4 <send_sms+0xd0>
	strcat(mobileMessageData, sampleNumber);
    14fc:	64 eb       	ldi	r22, 0xB4	; 180
    14fe:	72 e0       	ldi	r23, 0x02	; 2
    1500:	c7 01       	movw	r24, r14
    1502:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <strcat>
	strcat(mobileMessageData, "\nQuality Status :");
    1506:	d7 01       	movw	r26, r14
    1508:	0d 90       	ld	r0, X+
    150a:	00 20       	and	r0, r0
    150c:	e9 f7       	brne	.-6      	; 0x1508 <send_sms+0xe4>
    150e:	11 97       	sbiw	r26, 0x01	; 1
    1510:	82 e1       	ldi	r24, 0x12	; 18
    1512:	e9 e8       	ldi	r30, 0x89	; 137
    1514:	f1 e0       	ldi	r31, 0x01	; 1
    1516:	01 90       	ld	r0, Z+
    1518:	0d 92       	st	X+, r0
    151a:	8a 95       	dec	r24
    151c:	e1 f7       	brne	.-8      	; 0x1516 <send_sms+0xf2>
	strcat(mobileMessageData, qualityStatus);
    151e:	6d eb       	ldi	r22, 0xBD	; 189
    1520:	72 e0       	ldi	r23, 0x02	; 2
    1522:	c7 01       	movw	r24, r14
    1524:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <strcat>
	strcat(mobileMessageData, "\n  PH : ");
    1528:	d7 01       	movw	r26, r14
    152a:	0d 90       	ld	r0, X+
    152c:	00 20       	and	r0, r0
    152e:	e9 f7       	brne	.-6      	; 0x152a <send_sms+0x106>
    1530:	11 97       	sbiw	r26, 0x01	; 1
    1532:	89 e0       	ldi	r24, 0x09	; 9
    1534:	eb e9       	ldi	r30, 0x9B	; 155
    1536:	f1 e0       	ldi	r31, 0x01	; 1
    1538:	01 90       	ld	r0, Z+
    153a:	0d 92       	st	X+, r0
    153c:	8a 95       	dec	r24
    153e:	e1 f7       	brne	.-8      	; 0x1538 <send_sms+0x114>
	strcat(mobileMessageData, dtostrf(phValue, 5, 2, t));
    1540:	60 91 ae 02 	lds	r22, 0x02AE	; 0x8002ae <phValue>
    1544:	70 91 af 02 	lds	r23, 0x02AF	; 0x8002af <phValue+0x1>
    1548:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <phValue+0x2>
    154c:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <phValue+0x3>
    1550:	8e 01       	movw	r16, r28
    1552:	0f 5f       	subi	r16, 0xFF	; 255
    1554:	1f 4f       	sbci	r17, 0xFF	; 255
    1556:	22 e0       	ldi	r18, 0x02	; 2
    1558:	45 e0       	ldi	r20, 0x05	; 5
    155a:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <dtostrf>
    155e:	bc 01       	movw	r22, r24
    1560:	c7 01       	movw	r24, r14
    1562:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <strcat>
	strcat(mobileMessageData, "\n  Temperature : ");
    1566:	d7 01       	movw	r26, r14
    1568:	0d 90       	ld	r0, X+
    156a:	00 20       	and	r0, r0
    156c:	e9 f7       	brne	.-6      	; 0x1568 <send_sms+0x144>
    156e:	11 97       	sbiw	r26, 0x01	; 1
    1570:	82 e1       	ldi	r24, 0x12	; 18
    1572:	e4 ea       	ldi	r30, 0xA4	; 164
    1574:	f1 e0       	ldi	r31, 0x01	; 1
    1576:	01 90       	ld	r0, Z+
    1578:	0d 92       	st	X+, r0
    157a:	8a 95       	dec	r24
    157c:	e1 f7       	brne	.-8      	; 0x1576 <send_sms+0x152>
	strcat(mobileMessageData, dtostrf(tempValue, 5, 2, t));
    157e:	60 91 b7 02 	lds	r22, 0x02B7	; 0x8002b7 <tempValue>
    1582:	70 91 b8 02 	lds	r23, 0x02B8	; 0x8002b8 <tempValue+0x1>
    1586:	80 91 b9 02 	lds	r24, 0x02B9	; 0x8002b9 <tempValue+0x2>
    158a:	90 91 ba 02 	lds	r25, 0x02BA	; 0x8002ba <tempValue+0x3>
    158e:	22 e0       	ldi	r18, 0x02	; 2
    1590:	45 e0       	ldi	r20, 0x05	; 5
    1592:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <dtostrf>
    1596:	bc 01       	movw	r22, r24
    1598:	c7 01       	movw	r24, r14
    159a:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <strcat>
	strcat(mobileMessageData, " C");
    159e:	f7 01       	movw	r30, r14
    15a0:	01 90       	ld	r0, Z+
    15a2:	00 20       	and	r0, r0
    15a4:	e9 f7       	brne	.-6      	; 0x15a0 <send_sms+0x17c>
    15a6:	31 97       	sbiw	r30, 0x01	; 1
    15a8:	80 e2       	ldi	r24, 0x20	; 32
    15aa:	93 e4       	ldi	r25, 0x43	; 67
    15ac:	91 83       	std	Z+1, r25	; 0x01
    15ae:	80 83       	st	Z, r24
    15b0:	12 82       	std	Z+2, r1	; 0x02
	strcat(mobileMessageData, "\n  Tubidity level: ");
    15b2:	d7 01       	movw	r26, r14
    15b4:	0d 90       	ld	r0, X+
    15b6:	00 20       	and	r0, r0
    15b8:	e9 f7       	brne	.-6      	; 0x15b4 <send_sms+0x190>
    15ba:	11 97       	sbiw	r26, 0x01	; 1
    15bc:	84 e1       	ldi	r24, 0x14	; 20
    15be:	e6 eb       	ldi	r30, 0xB6	; 182
    15c0:	f1 e0       	ldi	r31, 0x01	; 1
    15c2:	01 90       	ld	r0, Z+
    15c4:	0d 92       	st	X+, r0
    15c6:	8a 95       	dec	r24
    15c8:	e1 f7       	brne	.-8      	; 0x15c2 <send_sms+0x19e>
	strcat(mobileMessageData, dtostrf(turbidityValue, 5, 2, t));
    15ca:	60 91 aa 02 	lds	r22, 0x02AA	; 0x8002aa <turbidityValue>
    15ce:	70 91 ab 02 	lds	r23, 0x02AB	; 0x8002ab <turbidityValue+0x1>
    15d2:	80 91 ac 02 	lds	r24, 0x02AC	; 0x8002ac <turbidityValue+0x2>
    15d6:	90 91 ad 02 	lds	r25, 0x02AD	; 0x8002ad <turbidityValue+0x3>
    15da:	22 e0       	ldi	r18, 0x02	; 2
    15dc:	45 e0       	ldi	r20, 0x05	; 5
    15de:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <dtostrf>
    15e2:	bc 01       	movw	r22, r24
    15e4:	c7 01       	movw	r24, r14
    15e6:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <strcat>
	DELAY_ms(100);
    15ea:	84 e6       	ldi	r24, 0x64	; 100
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>

	gsm_comm(mobileMessageData);
    15f2:	c7 01       	movw	r24, r14
    15f4:	0e 94 de 07 	call	0xfbc	; 0xfbc <gsm_comm>
	UDR = (26);
    15f8:	8a e1       	ldi	r24, 0x1A	; 26
    15fa:	8c b9       	out	0x0c, r24	; 12
	LCD_GoToLine(1);
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_GoToLine>
	LCD_Printf("     sms sent   ");
    1602:	8a ec       	ldi	r24, 0xCA	; 202
    1604:	91 e0       	ldi	r25, 0x01	; 1
    1606:	9f 93       	push	r25
    1608:	8f 93       	push	r24
    160a:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(1000);
    160e:	88 ee       	ldi	r24, 0xE8	; 232
    1610:	93 e0       	ldi	r25, 0x03	; 3
    1612:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_GoToLine(1);
    1616:	81 e0       	ldi	r24, 0x01	; 1
    1618:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_GoToLine>
	LCD_Printf(" Next Testing");
    161c:	8b ed       	ldi	r24, 0xDB	; 219
    161e:	91 e0       	ldi	r25, 0x01	; 1
    1620:	9f 93       	push	r25
    1622:	8f 93       	push	r24
    1624:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(800);
    1628:	80 e2       	ldi	r24, 0x20	; 32
    162a:	93 e0       	ldi	r25, 0x03	; 3
    162c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Printf(".");
    1630:	0a e3       	ldi	r16, 0x3A	; 58
    1632:	11 e0       	ldi	r17, 0x01	; 1
    1634:	1f 93       	push	r17
    1636:	0f 93       	push	r16
    1638:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(800);
    163c:	80 e2       	ldi	r24, 0x20	; 32
    163e:	93 e0       	ldi	r25, 0x03	; 3
    1640:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Printf(".");
    1644:	1f 93       	push	r17
    1646:	0f 93       	push	r16
    1648:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(400);
    164c:	80 e9       	ldi	r24, 0x90	; 144
    164e:	91 e0       	ldi	r25, 0x01	; 1
    1650:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Printf(".");
    1654:	1f 93       	push	r17
    1656:	0f 93       	push	r16
    1658:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(400);
    165c:	80 e9       	ldi	r24, 0x90	; 144
    165e:	91 e0       	ldi	r25, 0x01	; 1
    1660:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	itemcode();
    1664:	0e 94 6d 09 	call	0x12da	; 0x12da <itemcode>

}
    1668:	0f b6       	in	r0, 0x3f	; 63
    166a:	f8 94       	cli
    166c:	de bf       	out	0x3e, r29	; 62
    166e:	0f be       	out	0x3f, r0	; 63
    1670:	cd bf       	out	0x3d, r28	; 61
    1672:	0f 90       	pop	r0
    1674:	0f 90       	pop	r0
    1676:	0f 90       	pop	r0
    1678:	0f 90       	pop	r0
    167a:	0f 90       	pop	r0
    167c:	df 91       	pop	r29
    167e:	cf 91       	pop	r28
    1680:	1f 91       	pop	r17
    1682:	0f 91       	pop	r16
    1684:	ff 90       	pop	r15
    1686:	ef 90       	pop	r14
    1688:	08 95       	ret

0000168a <gsm_init>:
	
}

void gsm_init()
{
	UBRRL = 25;
    168a:	89 e1       	ldi	r24, 0x19	; 25
    168c:	89 b9       	out	0x09, r24	; 9
	UCSRB |= (1 << RXEN) | (1 << TXEN);
    168e:	8a b1       	in	r24, 0x0a	; 10
    1690:	88 61       	ori	r24, 0x18	; 24
    1692:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL) | (1 << UCSZ0) | (1 << UCSZ1);
    1694:	80 b5       	in	r24, 0x20	; 32
    1696:	86 68       	ori	r24, 0x86	; 134
    1698:	80 bd       	out	0x20, r24	; 32

	send_sms();
    169a:	0e 94 12 0a 	call	0x1424	; 0x1424 <send_sms>
    169e:	08 95       	ret

000016a0 <turbControlFunction>:
	InitADC();
	turbControlFunction();
	return 0;
}
void turbControlFunction()
{
    16a0:	cf 92       	push	r12
    16a2:	df 92       	push	r13
    16a4:	ef 92       	push	r14
    16a6:	ff 92       	push	r15
    16a8:	0f 93       	push	r16
    16aa:	1f 93       	push	r17
    16ac:	cf 93       	push	r28
    16ae:	df 93       	push	r29
    16b0:	00 d0       	rcall	.+0      	; 0x16b2 <turbControlFunction+0x12>
    16b2:	00 d0       	rcall	.+0      	; 0x16b4 <turbControlFunction+0x14>
    16b4:	1f 92       	push	r1
    16b6:	cd b7       	in	r28, 0x3d	; 61
    16b8:	de b7       	in	r29, 0x3e	; 62
	char t[5];
	ReadADC(2);
    16ba:	82 e0       	ldi	r24, 0x02	; 2
    16bc:	0e 94 ca 07 	call	0xf94	; 0xf94 <ReadADC>
	adc_result = ADC;
    16c0:	64 b1       	in	r22, 0x04	; 4
    16c2:	75 b1       	in	r23, 0x05	; 5
    16c4:	70 93 b3 02 	sts	0x02B3, r23	; 0x8002b3 <adc_result+0x1>
    16c8:	60 93 b2 02 	sts	0x02B2, r22	; 0x8002b2 <adc_result>
	turbidityValue = 175 - ((adc_result * 200.0) / 1024);
    16cc:	80 e0       	ldi	r24, 0x00	; 0
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <__floatunsisf>
    16d4:	20 e0       	ldi	r18, 0x00	; 0
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	48 e4       	ldi	r20, 0x48	; 72
    16da:	53 e4       	ldi	r21, 0x43	; 67
    16dc:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <__mulsf3>
    16e0:	20 e0       	ldi	r18, 0x00	; 0
    16e2:	30 e0       	ldi	r19, 0x00	; 0
    16e4:	40 e8       	ldi	r20, 0x80	; 128
    16e6:	5a e3       	ldi	r21, 0x3A	; 58
    16e8:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <__mulsf3>
    16ec:	9b 01       	movw	r18, r22
    16ee:	ac 01       	movw	r20, r24
    16f0:	60 e0       	ldi	r22, 0x00	; 0
    16f2:	70 e0       	ldi	r23, 0x00	; 0
    16f4:	8f e2       	ldi	r24, 0x2F	; 47
    16f6:	93 e4       	ldi	r25, 0x43	; 67
    16f8:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <__subsf3>
    16fc:	60 93 aa 02 	sts	0x02AA, r22	; 0x8002aa <turbidityValue>
    1700:	70 93 ab 02 	sts	0x02AB, r23	; 0x8002ab <turbidityValue+0x1>
    1704:	80 93 ac 02 	sts	0x02AC, r24	; 0x8002ac <turbidityValue+0x2>
    1708:	90 93 ad 02 	sts	0x02AD, r25	; 0x8002ad <turbidityValue+0x3>
	dtostrf(turbidityValue, 5, 2, t);
    170c:	9e 01       	movw	r18, r28
    170e:	2f 5f       	subi	r18, 0xFF	; 255
    1710:	3f 4f       	sbci	r19, 0xFF	; 255
    1712:	79 01       	movw	r14, r18
    1714:	89 01       	movw	r16, r18
    1716:	22 e0       	ldi	r18, 0x02	; 2
    1718:	45 e0       	ldi	r20, 0x05	; 5
    171a:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <dtostrf>
	LCD_Clear();
    171e:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_Printf("TURB =");
    1722:	89 ee       	ldi	r24, 0xE9	; 233
    1724:	91 e0       	ldi	r25, 0x01	; 1
    1726:	9f 93       	push	r25
    1728:	8f 93       	push	r24
    172a:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	LCD_Printf(t);
    172e:	ff 92       	push	r15
    1730:	ef 92       	push	r14
    1732:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	LCD_Printf("NTU");
    1736:	80 ef       	ldi	r24, 0xF0	; 240
    1738:	91 e0       	ldi	r25, 0x01	; 1
    173a:	9f 93       	push	r25
    173c:	8f 93       	push	r24
    173e:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(2000);
    1742:	80 ed       	ldi	r24, 0xD0	; 208
    1744:	97 e0       	ldi	r25, 0x07	; 7
    1746:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	

	if ((turbidityValue <= 12.0) && ((phValue > 6.5) && (phValue < 7.5)))
    174a:	0f 90       	pop	r0
    174c:	0f 90       	pop	r0
    174e:	0f 90       	pop	r0
    1750:	0f 90       	pop	r0
    1752:	0f 90       	pop	r0
    1754:	0f 90       	pop	r0
    1756:	20 e0       	ldi	r18, 0x00	; 0
    1758:	30 e0       	ldi	r19, 0x00	; 0
    175a:	40 e4       	ldi	r20, 0x40	; 64
    175c:	51 e4       	ldi	r21, 0x41	; 65
    175e:	60 91 aa 02 	lds	r22, 0x02AA	; 0x8002aa <turbidityValue>
    1762:	70 91 ab 02 	lds	r23, 0x02AB	; 0x8002ab <turbidityValue+0x1>
    1766:	80 91 ac 02 	lds	r24, 0x02AC	; 0x8002ac <turbidityValue+0x2>
    176a:	90 91 ad 02 	lds	r25, 0x02AD	; 0x8002ad <turbidityValue+0x3>
    176e:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <__cmpsf2>
    1772:	18 16       	cp	r1, r24
    1774:	64 f1       	brlt	.+88     	; 0x17ce <turbControlFunction+0x12e>
    1776:	c0 90 ae 02 	lds	r12, 0x02AE	; 0x8002ae <phValue>
    177a:	d0 90 af 02 	lds	r13, 0x02AF	; 0x8002af <phValue+0x1>
    177e:	e0 90 b0 02 	lds	r14, 0x02B0	; 0x8002b0 <phValue+0x2>
    1782:	f0 90 b1 02 	lds	r15, 0x02B1	; 0x8002b1 <phValue+0x3>
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	40 ed       	ldi	r20, 0xD0	; 208
    178c:	50 e4       	ldi	r21, 0x40	; 64
    178e:	c7 01       	movw	r24, r14
    1790:	b6 01       	movw	r22, r12
    1792:	0e 94 d3 0e 	call	0x1da6	; 0x1da6 <__gesf2>
    1796:	18 16       	cp	r1, r24
    1798:	d4 f4       	brge	.+52     	; 0x17ce <turbControlFunction+0x12e>
    179a:	20 e0       	ldi	r18, 0x00	; 0
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	40 ef       	ldi	r20, 0xF0	; 240
    17a0:	50 e4       	ldi	r21, 0x40	; 64
    17a2:	c7 01       	movw	r24, r14
    17a4:	b6 01       	movw	r22, r12
    17a6:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <__cmpsf2>
    17aa:	88 23       	and	r24, r24
    17ac:	84 f4       	brge	.+32     	; 0x17ce <turbControlFunction+0x12e>
	{
		strcpy(qualityStatus, "Good");
    17ae:	85 e0       	ldi	r24, 0x05	; 5
    17b0:	e4 ef       	ldi	r30, 0xF4	; 244
    17b2:	f1 e0       	ldi	r31, 0x01	; 1
    17b4:	ad eb       	ldi	r26, 0xBD	; 189
    17b6:	b2 e0       	ldi	r27, 0x02	; 2
    17b8:	01 90       	ld	r0, Z+
    17ba:	0d 92       	st	X+, r0
    17bc:	8a 95       	dec	r24
    17be:	e1 f7       	brne	.-8      	; 0x17b8 <turbControlFunction+0x118>
		DDRA |= (1 << PORTA6);
    17c0:	d6 9a       	sbi	0x1a, 6	; 26
		PORTA |= (1 << PORTA6);
    17c2:	de 9a       	sbi	0x1b, 6	; 27
		DELAY_ms(2000);
    17c4:	80 ed       	ldi	r24, 0xD0	; 208
    17c6:	97 e0       	ldi	r25, 0x07	; 7
    17c8:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
    17cc:	13 c0       	rjmp	.+38     	; 0x17f4 <turbControlFunction+0x154>
		
	}
	else
	{
		strcpy(qualityStatus, "Weak");
    17ce:	85 e0       	ldi	r24, 0x05	; 5
    17d0:	e9 ef       	ldi	r30, 0xF9	; 249
    17d2:	f1 e0       	ldi	r31, 0x01	; 1
    17d4:	ad eb       	ldi	r26, 0xBD	; 189
    17d6:	b2 e0       	ldi	r27, 0x02	; 2
    17d8:	01 90       	ld	r0, Z+
    17da:	0d 92       	st	X+, r0
    17dc:	8a 95       	dec	r24
    17de:	e1 f7       	brne	.-8      	; 0x17d8 <turbControlFunction+0x138>
		DDRA |= (1 << PORTA7);
    17e0:	d7 9a       	sbi	0x1a, 7	; 26
		PORTA |= (1 << PORTA7);
    17e2:	df 9a       	sbi	0x1b, 7	; 27
		DDRA |= (1 << PORTA5);
    17e4:	d5 9a       	sbi	0x1a, 5	; 26
		PORTA |= (1 << PORTA5);
    17e6:	dd 9a       	sbi	0x1b, 5	; 27
		DELAY_ms(2000);
    17e8:	80 ed       	ldi	r24, 0xD0	; 208
    17ea:	97 e0       	ldi	r25, 0x07	; 7
    17ec:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
		DDRA &= ~(1 << PORTA5);
    17f0:	d5 98       	cbi	0x1a, 5	; 26
		PORTA &= ~(1 << PORTA5);
    17f2:	dd 98       	cbi	0x1b, 5	; 27
	}

	
	LCD_Clear();
    17f4:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	//itemcode();
	LCD_Printf("  WANT TO SEND    REPORT AS SMS ");
    17f8:	8e ef       	ldi	r24, 0xFE	; 254
    17fa:	91 e0       	ldi	r25, 0x01	; 1
    17fc:	9f 93       	push	r25
    17fe:	8f 93       	push	r24
    1800:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(3000);
    1804:	88 eb       	ldi	r24, 0xB8	; 184
    1806:	9b e0       	ldi	r25, 0x0B	; 11
    1808:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Clear();
    180c:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_GoToLine(1);
    1810:	81 e0       	ldi	r24, 0x01	; 1
    1812:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_GoToLine>
	LCD_Printf("  PRESS KEY 1   ");
    1816:	8f e1       	ldi	r24, 0x1F	; 31
    1818:	92 e0       	ldi	r25, 0x02	; 2
    181a:	9f 93       	push	r25
    181c:	8f 93       	push	r24
    181e:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(2000);
    1822:	80 ed       	ldi	r24, 0xD0	; 208
    1824:	97 e0       	ldi	r25, 0x07	; 7
    1826:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	LCD_Clear();
    182a:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_Printf("     IF NOT        PRESS KEY 2  ");
    182e:	80 e3       	ldi	r24, 0x30	; 48
    1830:	92 e0       	ldi	r25, 0x02	; 2
    1832:	9f 93       	push	r25
    1834:	8f 93       	push	r24
    1836:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	key = KEYPAD_GetKey();
    183a:	0e 94 e7 02 	call	0x5ce	; 0x5ce <KEYPAD_GetKey>
    183e:	80 93 8d 03 	sts	0x038D, r24	; 0x80038d <key>
	if(key == '1') gsm_init();
    1842:	0f 90       	pop	r0
    1844:	0f 90       	pop	r0
    1846:	0f 90       	pop	r0
    1848:	0f 90       	pop	r0
    184a:	0f 90       	pop	r0
    184c:	0f 90       	pop	r0
    184e:	81 33       	cpi	r24, 0x31	; 49
    1850:	19 f4       	brne	.+6      	; 0x1858 <turbControlFunction+0x1b8>
    1852:	0e 94 45 0b 	call	0x168a	; 0x168a <gsm_init>
    1856:	09 c0       	rjmp	.+18     	; 0x186a <turbControlFunction+0x1ca>
	else if (key == '3')
    1858:	83 33       	cpi	r24, 0x33	; 51
    185a:	19 f4       	brne	.+6      	; 0x1862 <turbControlFunction+0x1c2>
	{
		turbControlFunction();
    185c:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <turbControlFunction>
    1860:	04 c0       	rjmp	.+8      	; 0x186a <turbControlFunction+0x1ca>
	}
	
	else{
		LCD_Clear();
    1862:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
		itemcode();
    1866:	0e 94 6d 09 	call	0x12da	; 0x12da <itemcode>
	}
	
}
    186a:	0f 90       	pop	r0
    186c:	0f 90       	pop	r0
    186e:	0f 90       	pop	r0
    1870:	0f 90       	pop	r0
    1872:	0f 90       	pop	r0
    1874:	df 91       	pop	r29
    1876:	cf 91       	pop	r28
    1878:	1f 91       	pop	r17
    187a:	0f 91       	pop	r16
    187c:	ff 90       	pop	r15
    187e:	ef 90       	pop	r14
    1880:	df 90       	pop	r13
    1882:	cf 90       	pop	r12
    1884:	08 95       	ret

00001886 <function02>:
	return 0;
}

int function02()
{
	InitADC();
    1886:	0e 94 c5 07 	call	0xf8a	; 0xf8a <InitADC>
	turbControlFunction();
    188a:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <turbControlFunction>
	return 0;
}
    188e:	80 e0       	ldi	r24, 0x00	; 0
    1890:	90 e0       	ldi	r25, 0x00	; 0
    1892:	08 95       	ret

00001894 <function01>:
	function01();
	
}
int function01()
{
	LCD_Clear();
    1894:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_Printf(" Press key A to Continue Process");
    1898:	81 e5       	ldi	r24, 0x51	; 81
    189a:	92 e0       	ldi	r25, 0x02	; 2
    189c:	9f 93       	push	r25
    189e:	8f 93       	push	r24
    18a0:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
    18a4:	0f 90       	pop	r0
    18a6:	0f 90       	pop	r0
	while (1)
	{
		key = KEYPAD_GetKey();
    18a8:	0e 94 e7 02 	call	0x5ce	; 0x5ce <KEYPAD_GetKey>
    18ac:	80 93 8d 03 	sts	0x038D, r24	; 0x80038d <key>
		if (key == 'A')
    18b0:	81 34       	cpi	r24, 0x41	; 65
    18b2:	29 f4       	brne	.+10     	; 0x18be <function01+0x2a>
		{
			LCD_Clear();
    18b4:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
			function02();
    18b8:	0e 94 43 0c 	call	0x1886	; 0x1886 <function02>
    18bc:	f5 cf       	rjmp	.-22     	; 0x18a8 <function01+0x14>
		}
		else if (key == '3')
    18be:	83 33       	cpi	r24, 0x33	; 51
    18c0:	29 f4       	brne	.+10     	; 0x18cc <function01+0x38>
		{
			LCD_Clear();
    18c2:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
			TempControlFunction();
    18c6:	0e 94 75 0c 	call	0x18ea	; 0x18ea <TempControlFunction>
    18ca:	ee cf       	rjmp	.-36     	; 0x18a8 <function01+0x14>
		}
		else if (key == '4')
    18cc:	84 33       	cpi	r24, 0x34	; 52
    18ce:	19 f4       	brne	.+6      	; 0x18d6 <function01+0x42>
		{
			startProcess();
    18d0:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <startProcess>
    18d4:	e9 cf       	rjmp	.-46     	; 0x18a8 <function01+0x14>
		}
		else
		{
			LCD_Clear();
    18d6:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
			LCD_Printf("  Press key A  ");
    18da:	82 e7       	ldi	r24, 0x72	; 114
    18dc:	92 e0       	ldi	r25, 0x02	; 2
    18de:	9f 93       	push	r25
    18e0:	8f 93       	push	r24
    18e2:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
			function01();
    18e6:	0e 94 4a 0c 	call	0x1894	; 0x1894 <function01>

000018ea <TempControlFunction>:
	_delay_ms(100);
	return (ADC);
}

void TempControlFunction()
{
    18ea:	cf 93       	push	r28
    18ec:	df 93       	push	r29
    18ee:	00 d0       	rcall	.+0      	; 0x18f0 <TempControlFunction+0x6>
    18f0:	00 d0       	rcall	.+0      	; 0x18f2 <TempControlFunction+0x8>
    18f2:	1f 92       	push	r1
    18f4:	cd b7       	in	r28, 0x3d	; 61
    18f6:	de b7       	in	r29, 0x3e	; 62
	char t[5];
	
	
	ReadADC(3);
    18f8:	83 e0       	ldi	r24, 0x03	; 3
    18fa:	0e 94 ca 07 	call	0xf94	; 0xf94 <ReadADC>
	adc_result = ADC;
    18fe:	64 b1       	in	r22, 0x04	; 4
    1900:	75 b1       	in	r23, 0x05	; 5
    1902:	70 93 b3 02 	sts	0x02B3, r23	; 0x8002b3 <adc_result+0x1>
    1906:	60 93 b2 02 	sts	0x02B2, r22	; 0x8002b2 <adc_result>
	// tempValue = 58-((adc_result*500/1024));
	//tempValue = (adc_result / 1.4) - 13;
	tempValue = (adc_result - 13.5)/1.45;
    190a:	80 e0       	ldi	r24, 0x00	; 0
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <__floatunsisf>
    1912:	20 e0       	ldi	r18, 0x00	; 0
    1914:	30 e0       	ldi	r19, 0x00	; 0
    1916:	48 e5       	ldi	r20, 0x58	; 88
    1918:	51 e4       	ldi	r21, 0x41	; 65
    191a:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <__subsf3>
    191e:	2a e9       	ldi	r18, 0x9A	; 154
    1920:	39 e9       	ldi	r19, 0x99	; 153
    1922:	49 eb       	ldi	r20, 0xB9	; 185
    1924:	5f e3       	ldi	r21, 0x3F	; 63
    1926:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__divsf3>
    192a:	60 93 b7 02 	sts	0x02B7, r22	; 0x8002b7 <tempValue>
    192e:	70 93 b8 02 	sts	0x02B8, r23	; 0x8002b8 <tempValue+0x1>
    1932:	80 93 b9 02 	sts	0x02B9, r24	; 0x8002b9 <tempValue+0x2>
    1936:	90 93 ba 02 	sts	0x02BA, r25	; 0x8002ba <tempValue+0x3>
	// dtostrf(tempValue,5,2,t);  157-100 64-29  12-0  134-84  130-79 120-73  102-62 97-58  91-53 80-44
	dtostrf(tempValue, 5, 2, t);
    193a:	9e 01       	movw	r18, r28
    193c:	2f 5f       	subi	r18, 0xFF	; 255
    193e:	3f 4f       	sbci	r19, 0xFF	; 255
    1940:	79 01       	movw	r14, r18
    1942:	89 01       	movw	r16, r18
    1944:	22 e0       	ldi	r18, 0x02	; 2
    1946:	45 e0       	ldi	r20, 0x05	; 5
    1948:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <dtostrf>
	LCD_GoToLine(1);
    194c:	81 e0       	ldi	r24, 0x01	; 1
    194e:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_GoToLine>
	LCD_Printf("Temp = ");
    1952:	82 e8       	ldi	r24, 0x82	; 130
    1954:	92 e0       	ldi	r25, 0x02	; 2
    1956:	9f 93       	push	r25
    1958:	8f 93       	push	r24
    195a:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	LCD_Printf(t);
    195e:	ff 92       	push	r15
    1960:	ef 92       	push	r14
    1962:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	LCD_Printf(" C");
    1966:	8a e8       	ldi	r24, 0x8A	; 138
    1968:	92 e0       	ldi	r25, 0x02	; 2
    196a:	9f 93       	push	r25
    196c:	8f 93       	push	r24
    196e:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(2000);
    1972:	80 ed       	ldi	r24, 0xD0	; 208
    1974:	97 e0       	ldi	r25, 0x07	; 7
    1976:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	function01();
    197a:	0e 94 4a 0c 	call	0x1894	; 0x1894 <function01>

0000197e <function00>:
	function00();
}
int function00()
{

	DDRA &= ~(1 << PORTA3);
    197e:	d3 98       	cbi	0x1a, 3	; 26
	InitADC();
    1980:	0e 94 c5 07 	call	0xf8a	; 0xf8a <InitADC>
	TempControlFunction();
    1984:	0e 94 75 0c 	call	0x18ea	; 0x18ea <TempControlFunction>

00001988 <phControlFunction>:
	phControlFunction();
	return 0;
}

void phControlFunction()
{
    1988:	cf 93       	push	r28
    198a:	df 93       	push	r29
    198c:	00 d0       	rcall	.+0      	; 0x198e <phControlFunction+0x6>
    198e:	00 d0       	rcall	.+0      	; 0x1990 <phControlFunction+0x8>
    1990:	1f 92       	push	r1
    1992:	cd b7       	in	r28, 0x3d	; 61
    1994:	de b7       	in	r29, 0x3e	; 62
	char t[5];
	ReadADC(1);
    1996:	81 e0       	ldi	r24, 0x01	; 1
    1998:	0e 94 ca 07 	call	0xf94	; 0xf94 <ReadADC>
	adc_result = ADC;
    199c:	64 b1       	in	r22, 0x04	; 4
    199e:	75 b1       	in	r23, 0x05	; 5
    19a0:	70 93 b3 02 	sts	0x02B3, r23	; 0x8002b3 <adc_result+0x1>
    19a4:	60 93 b2 02 	sts	0x02B2, r22	; 0x8002b2 <adc_result>
	phValue = ( (adc_result + 2)- 1093.59 )/(-62.94);
    19a8:	6e 5f       	subi	r22, 0xFE	; 254
    19aa:	7f 4f       	sbci	r23, 0xFF	; 255
    19ac:	80 e0       	ldi	r24, 0x00	; 0
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <__floatunsisf>
    19b4:	21 ee       	ldi	r18, 0xE1	; 225
    19b6:	32 eb       	ldi	r19, 0xB2	; 178
    19b8:	48 e8       	ldi	r20, 0x88	; 136
    19ba:	54 e4       	ldi	r21, 0x44	; 68
    19bc:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <__subsf3>
    19c0:	2f e8       	ldi	r18, 0x8F	; 143
    19c2:	32 ec       	ldi	r19, 0xC2	; 194
    19c4:	4b e7       	ldi	r20, 0x7B	; 123
    19c6:	52 ec       	ldi	r21, 0xC2	; 194
    19c8:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__divsf3>
    19cc:	60 93 ae 02 	sts	0x02AE, r22	; 0x8002ae <phValue>
    19d0:	70 93 af 02 	sts	0x02AF, r23	; 0x8002af <phValue+0x1>
    19d4:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <phValue+0x2>
    19d8:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <phValue+0x3>
	dtostrf(phValue, 5, 2, t);
    19dc:	9e 01       	movw	r18, r28
    19de:	2f 5f       	subi	r18, 0xFF	; 255
    19e0:	3f 4f       	sbci	r19, 0xFF	; 255
    19e2:	79 01       	movw	r14, r18
    19e4:	89 01       	movw	r16, r18
    19e6:	22 e0       	ldi	r18, 0x02	; 2
    19e8:	45 e0       	ldi	r20, 0x05	; 5
    19ea:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <dtostrf>
	LCD_Clear();
    19ee:	0e 94 16 05 	call	0xa2c	; 0xa2c <LCD_Clear>
	LCD_Printf("pH =");
    19f2:	8d e8       	ldi	r24, 0x8D	; 141
    19f4:	92 e0       	ldi	r25, 0x02	; 2
    19f6:	9f 93       	push	r25
    19f8:	8f 93       	push	r24
    19fa:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	LCD_Printf(t);
    19fe:	ff 92       	push	r15
    1a00:	ef 92       	push	r14
    1a02:	0e 94 91 06 	call	0xd22	; 0xd22 <LCD_Printf>
	DELAY_ms(2000);
    1a06:	80 ed       	ldi	r24, 0xD0	; 208
    1a08:	97 e0       	ldi	r25, 0x07	; 7
    1a0a:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DELAY_ms>
	// 730=5.8    557=8.5  568=~8  900=2.9   940=2.5
	
	function00();
    1a0e:	0e 94 bf 0c 	call	0x197e	; 0x197e <function00>

00001a12 <startProcess>:

}

int startProcess()
{
	DDRA &= ~(1 << PORTA1);
    1a12:	d1 98       	cbi	0x1a, 1	; 26
	InitADC();
    1a14:	0e 94 c5 07 	call	0xf8a	; 0xf8a <InitADC>
	phControlFunction();
    1a18:	0e 94 c4 0c 	call	0x1988	; 0x1988 <phControlFunction>

00001a1c <__subsf3>:
    1a1c:	50 58       	subi	r21, 0x80	; 128

00001a1e <__addsf3>:
    1a1e:	bb 27       	eor	r27, r27
    1a20:	aa 27       	eor	r26, r26
    1a22:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <__addsf3x>
    1a26:	0c 94 99 0e 	jmp	0x1d32	; 0x1d32 <__fp_round>
    1a2a:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__fp_pscA>
    1a2e:	38 f0       	brcs	.+14     	; 0x1a3e <__addsf3+0x20>
    1a30:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__fp_pscB>
    1a34:	20 f0       	brcs	.+8      	; 0x1a3e <__addsf3+0x20>
    1a36:	39 f4       	brne	.+14     	; 0x1a46 <__addsf3+0x28>
    1a38:	9f 3f       	cpi	r25, 0xFF	; 255
    1a3a:	19 f4       	brne	.+6      	; 0x1a42 <__addsf3+0x24>
    1a3c:	26 f4       	brtc	.+8      	; 0x1a46 <__addsf3+0x28>
    1a3e:	0c 94 88 0e 	jmp	0x1d10	; 0x1d10 <__fp_nan>
    1a42:	0e f4       	brtc	.+2      	; 0x1a46 <__addsf3+0x28>
    1a44:	e0 95       	com	r30
    1a46:	e7 fb       	bst	r30, 7
    1a48:	0c 94 82 0e 	jmp	0x1d04	; 0x1d04 <__fp_inf>

00001a4c <__addsf3x>:
    1a4c:	e9 2f       	mov	r30, r25
    1a4e:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__fp_split3>
    1a52:	58 f3       	brcs	.-42     	; 0x1a2a <__addsf3+0xc>
    1a54:	ba 17       	cp	r27, r26
    1a56:	62 07       	cpc	r22, r18
    1a58:	73 07       	cpc	r23, r19
    1a5a:	84 07       	cpc	r24, r20
    1a5c:	95 07       	cpc	r25, r21
    1a5e:	20 f0       	brcs	.+8      	; 0x1a68 <__addsf3x+0x1c>
    1a60:	79 f4       	brne	.+30     	; 0x1a80 <__addsf3x+0x34>
    1a62:	a6 f5       	brtc	.+104    	; 0x1acc <__addsf3x+0x80>
    1a64:	0c 94 cc 0e 	jmp	0x1d98	; 0x1d98 <__fp_zero>
    1a68:	0e f4       	brtc	.+2      	; 0x1a6c <__addsf3x+0x20>
    1a6a:	e0 95       	com	r30
    1a6c:	0b 2e       	mov	r0, r27
    1a6e:	ba 2f       	mov	r27, r26
    1a70:	a0 2d       	mov	r26, r0
    1a72:	0b 01       	movw	r0, r22
    1a74:	b9 01       	movw	r22, r18
    1a76:	90 01       	movw	r18, r0
    1a78:	0c 01       	movw	r0, r24
    1a7a:	ca 01       	movw	r24, r20
    1a7c:	a0 01       	movw	r20, r0
    1a7e:	11 24       	eor	r1, r1
    1a80:	ff 27       	eor	r31, r31
    1a82:	59 1b       	sub	r21, r25
    1a84:	99 f0       	breq	.+38     	; 0x1aac <__addsf3x+0x60>
    1a86:	59 3f       	cpi	r21, 0xF9	; 249
    1a88:	50 f4       	brcc	.+20     	; 0x1a9e <__addsf3x+0x52>
    1a8a:	50 3e       	cpi	r21, 0xE0	; 224
    1a8c:	68 f1       	brcs	.+90     	; 0x1ae8 <__addsf3x+0x9c>
    1a8e:	1a 16       	cp	r1, r26
    1a90:	f0 40       	sbci	r31, 0x00	; 0
    1a92:	a2 2f       	mov	r26, r18
    1a94:	23 2f       	mov	r18, r19
    1a96:	34 2f       	mov	r19, r20
    1a98:	44 27       	eor	r20, r20
    1a9a:	58 5f       	subi	r21, 0xF8	; 248
    1a9c:	f3 cf       	rjmp	.-26     	; 0x1a84 <__addsf3x+0x38>
    1a9e:	46 95       	lsr	r20
    1aa0:	37 95       	ror	r19
    1aa2:	27 95       	ror	r18
    1aa4:	a7 95       	ror	r26
    1aa6:	f0 40       	sbci	r31, 0x00	; 0
    1aa8:	53 95       	inc	r21
    1aaa:	c9 f7       	brne	.-14     	; 0x1a9e <__addsf3x+0x52>
    1aac:	7e f4       	brtc	.+30     	; 0x1acc <__addsf3x+0x80>
    1aae:	1f 16       	cp	r1, r31
    1ab0:	ba 0b       	sbc	r27, r26
    1ab2:	62 0b       	sbc	r22, r18
    1ab4:	73 0b       	sbc	r23, r19
    1ab6:	84 0b       	sbc	r24, r20
    1ab8:	ba f0       	brmi	.+46     	; 0x1ae8 <__addsf3x+0x9c>
    1aba:	91 50       	subi	r25, 0x01	; 1
    1abc:	a1 f0       	breq	.+40     	; 0x1ae6 <__addsf3x+0x9a>
    1abe:	ff 0f       	add	r31, r31
    1ac0:	bb 1f       	adc	r27, r27
    1ac2:	66 1f       	adc	r22, r22
    1ac4:	77 1f       	adc	r23, r23
    1ac6:	88 1f       	adc	r24, r24
    1ac8:	c2 f7       	brpl	.-16     	; 0x1aba <__addsf3x+0x6e>
    1aca:	0e c0       	rjmp	.+28     	; 0x1ae8 <__addsf3x+0x9c>
    1acc:	ba 0f       	add	r27, r26
    1ace:	62 1f       	adc	r22, r18
    1ad0:	73 1f       	adc	r23, r19
    1ad2:	84 1f       	adc	r24, r20
    1ad4:	48 f4       	brcc	.+18     	; 0x1ae8 <__addsf3x+0x9c>
    1ad6:	87 95       	ror	r24
    1ad8:	77 95       	ror	r23
    1ada:	67 95       	ror	r22
    1adc:	b7 95       	ror	r27
    1ade:	f7 95       	ror	r31
    1ae0:	9e 3f       	cpi	r25, 0xFE	; 254
    1ae2:	08 f0       	brcs	.+2      	; 0x1ae6 <__addsf3x+0x9a>
    1ae4:	b0 cf       	rjmp	.-160    	; 0x1a46 <__addsf3+0x28>
    1ae6:	93 95       	inc	r25
    1ae8:	88 0f       	add	r24, r24
    1aea:	08 f0       	brcs	.+2      	; 0x1aee <__addsf3x+0xa2>
    1aec:	99 27       	eor	r25, r25
    1aee:	ee 0f       	add	r30, r30
    1af0:	97 95       	ror	r25
    1af2:	87 95       	ror	r24
    1af4:	08 95       	ret

00001af6 <__cmpsf2>:
    1af6:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__fp_cmp>
    1afa:	08 f4       	brcc	.+2      	; 0x1afe <__cmpsf2+0x8>
    1afc:	81 e0       	ldi	r24, 0x01	; 1
    1afe:	08 95       	ret

00001b00 <__divsf3>:
    1b00:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <__divsf3x>
    1b04:	0c 94 99 0e 	jmp	0x1d32	; 0x1d32 <__fp_round>
    1b08:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__fp_pscB>
    1b0c:	58 f0       	brcs	.+22     	; 0x1b24 <__divsf3+0x24>
    1b0e:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__fp_pscA>
    1b12:	40 f0       	brcs	.+16     	; 0x1b24 <__divsf3+0x24>
    1b14:	29 f4       	brne	.+10     	; 0x1b20 <__divsf3+0x20>
    1b16:	5f 3f       	cpi	r21, 0xFF	; 255
    1b18:	29 f0       	breq	.+10     	; 0x1b24 <__divsf3+0x24>
    1b1a:	0c 94 82 0e 	jmp	0x1d04	; 0x1d04 <__fp_inf>
    1b1e:	51 11       	cpse	r21, r1
    1b20:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__fp_szero>
    1b24:	0c 94 88 0e 	jmp	0x1d10	; 0x1d10 <__fp_nan>

00001b28 <__divsf3x>:
    1b28:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__fp_split3>
    1b2c:	68 f3       	brcs	.-38     	; 0x1b08 <__divsf3+0x8>

00001b2e <__divsf3_pse>:
    1b2e:	99 23       	and	r25, r25
    1b30:	b1 f3       	breq	.-20     	; 0x1b1e <__divsf3+0x1e>
    1b32:	55 23       	and	r21, r21
    1b34:	91 f3       	breq	.-28     	; 0x1b1a <__divsf3+0x1a>
    1b36:	95 1b       	sub	r25, r21
    1b38:	55 0b       	sbc	r21, r21
    1b3a:	bb 27       	eor	r27, r27
    1b3c:	aa 27       	eor	r26, r26
    1b3e:	62 17       	cp	r22, r18
    1b40:	73 07       	cpc	r23, r19
    1b42:	84 07       	cpc	r24, r20
    1b44:	38 f0       	brcs	.+14     	; 0x1b54 <__divsf3_pse+0x26>
    1b46:	9f 5f       	subi	r25, 0xFF	; 255
    1b48:	5f 4f       	sbci	r21, 0xFF	; 255
    1b4a:	22 0f       	add	r18, r18
    1b4c:	33 1f       	adc	r19, r19
    1b4e:	44 1f       	adc	r20, r20
    1b50:	aa 1f       	adc	r26, r26
    1b52:	a9 f3       	breq	.-22     	; 0x1b3e <__divsf3_pse+0x10>
    1b54:	35 d0       	rcall	.+106    	; 0x1bc0 <__divsf3_pse+0x92>
    1b56:	0e 2e       	mov	r0, r30
    1b58:	3a f0       	brmi	.+14     	; 0x1b68 <__divsf3_pse+0x3a>
    1b5a:	e0 e8       	ldi	r30, 0x80	; 128
    1b5c:	32 d0       	rcall	.+100    	; 0x1bc2 <__divsf3_pse+0x94>
    1b5e:	91 50       	subi	r25, 0x01	; 1
    1b60:	50 40       	sbci	r21, 0x00	; 0
    1b62:	e6 95       	lsr	r30
    1b64:	00 1c       	adc	r0, r0
    1b66:	ca f7       	brpl	.-14     	; 0x1b5a <__divsf3_pse+0x2c>
    1b68:	2b d0       	rcall	.+86     	; 0x1bc0 <__divsf3_pse+0x92>
    1b6a:	fe 2f       	mov	r31, r30
    1b6c:	29 d0       	rcall	.+82     	; 0x1bc0 <__divsf3_pse+0x92>
    1b6e:	66 0f       	add	r22, r22
    1b70:	77 1f       	adc	r23, r23
    1b72:	88 1f       	adc	r24, r24
    1b74:	bb 1f       	adc	r27, r27
    1b76:	26 17       	cp	r18, r22
    1b78:	37 07       	cpc	r19, r23
    1b7a:	48 07       	cpc	r20, r24
    1b7c:	ab 07       	cpc	r26, r27
    1b7e:	b0 e8       	ldi	r27, 0x80	; 128
    1b80:	09 f0       	breq	.+2      	; 0x1b84 <__divsf3_pse+0x56>
    1b82:	bb 0b       	sbc	r27, r27
    1b84:	80 2d       	mov	r24, r0
    1b86:	bf 01       	movw	r22, r30
    1b88:	ff 27       	eor	r31, r31
    1b8a:	93 58       	subi	r25, 0x83	; 131
    1b8c:	5f 4f       	sbci	r21, 0xFF	; 255
    1b8e:	3a f0       	brmi	.+14     	; 0x1b9e <__divsf3_pse+0x70>
    1b90:	9e 3f       	cpi	r25, 0xFE	; 254
    1b92:	51 05       	cpc	r21, r1
    1b94:	78 f0       	brcs	.+30     	; 0x1bb4 <__divsf3_pse+0x86>
    1b96:	0c 94 82 0e 	jmp	0x1d04	; 0x1d04 <__fp_inf>
    1b9a:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__fp_szero>
    1b9e:	5f 3f       	cpi	r21, 0xFF	; 255
    1ba0:	e4 f3       	brlt	.-8      	; 0x1b9a <__divsf3_pse+0x6c>
    1ba2:	98 3e       	cpi	r25, 0xE8	; 232
    1ba4:	d4 f3       	brlt	.-12     	; 0x1b9a <__divsf3_pse+0x6c>
    1ba6:	86 95       	lsr	r24
    1ba8:	77 95       	ror	r23
    1baa:	67 95       	ror	r22
    1bac:	b7 95       	ror	r27
    1bae:	f7 95       	ror	r31
    1bb0:	9f 5f       	subi	r25, 0xFF	; 255
    1bb2:	c9 f7       	brne	.-14     	; 0x1ba6 <__divsf3_pse+0x78>
    1bb4:	88 0f       	add	r24, r24
    1bb6:	91 1d       	adc	r25, r1
    1bb8:	96 95       	lsr	r25
    1bba:	87 95       	ror	r24
    1bbc:	97 f9       	bld	r25, 7
    1bbe:	08 95       	ret
    1bc0:	e1 e0       	ldi	r30, 0x01	; 1
    1bc2:	66 0f       	add	r22, r22
    1bc4:	77 1f       	adc	r23, r23
    1bc6:	88 1f       	adc	r24, r24
    1bc8:	bb 1f       	adc	r27, r27
    1bca:	62 17       	cp	r22, r18
    1bcc:	73 07       	cpc	r23, r19
    1bce:	84 07       	cpc	r24, r20
    1bd0:	ba 07       	cpc	r27, r26
    1bd2:	20 f0       	brcs	.+8      	; 0x1bdc <__divsf3_pse+0xae>
    1bd4:	62 1b       	sub	r22, r18
    1bd6:	73 0b       	sbc	r23, r19
    1bd8:	84 0b       	sbc	r24, r20
    1bda:	ba 0b       	sbc	r27, r26
    1bdc:	ee 1f       	adc	r30, r30
    1bde:	88 f7       	brcc	.-30     	; 0x1bc2 <__divsf3_pse+0x94>
    1be0:	e0 95       	com	r30
    1be2:	08 95       	ret

00001be4 <__fixunssfsi>:
    1be4:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__fp_splitA>
    1be8:	88 f0       	brcs	.+34     	; 0x1c0c <__fixunssfsi+0x28>
    1bea:	9f 57       	subi	r25, 0x7F	; 127
    1bec:	98 f0       	brcs	.+38     	; 0x1c14 <__fixunssfsi+0x30>
    1bee:	b9 2f       	mov	r27, r25
    1bf0:	99 27       	eor	r25, r25
    1bf2:	b7 51       	subi	r27, 0x17	; 23
    1bf4:	b0 f0       	brcs	.+44     	; 0x1c22 <__fixunssfsi+0x3e>
    1bf6:	e1 f0       	breq	.+56     	; 0x1c30 <__fixunssfsi+0x4c>
    1bf8:	66 0f       	add	r22, r22
    1bfa:	77 1f       	adc	r23, r23
    1bfc:	88 1f       	adc	r24, r24
    1bfe:	99 1f       	adc	r25, r25
    1c00:	1a f0       	brmi	.+6      	; 0x1c08 <__fixunssfsi+0x24>
    1c02:	ba 95       	dec	r27
    1c04:	c9 f7       	brne	.-14     	; 0x1bf8 <__fixunssfsi+0x14>
    1c06:	14 c0       	rjmp	.+40     	; 0x1c30 <__fixunssfsi+0x4c>
    1c08:	b1 30       	cpi	r27, 0x01	; 1
    1c0a:	91 f0       	breq	.+36     	; 0x1c30 <__fixunssfsi+0x4c>
    1c0c:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__fp_zero>
    1c10:	b1 e0       	ldi	r27, 0x01	; 1
    1c12:	08 95       	ret
    1c14:	0c 94 cc 0e 	jmp	0x1d98	; 0x1d98 <__fp_zero>
    1c18:	67 2f       	mov	r22, r23
    1c1a:	78 2f       	mov	r23, r24
    1c1c:	88 27       	eor	r24, r24
    1c1e:	b8 5f       	subi	r27, 0xF8	; 248
    1c20:	39 f0       	breq	.+14     	; 0x1c30 <__fixunssfsi+0x4c>
    1c22:	b9 3f       	cpi	r27, 0xF9	; 249
    1c24:	cc f3       	brlt	.-14     	; 0x1c18 <__fixunssfsi+0x34>
    1c26:	86 95       	lsr	r24
    1c28:	77 95       	ror	r23
    1c2a:	67 95       	ror	r22
    1c2c:	b3 95       	inc	r27
    1c2e:	d9 f7       	brne	.-10     	; 0x1c26 <__fixunssfsi+0x42>
    1c30:	3e f4       	brtc	.+14     	; 0x1c40 <__fixunssfsi+0x5c>
    1c32:	90 95       	com	r25
    1c34:	80 95       	com	r24
    1c36:	70 95       	com	r23
    1c38:	61 95       	neg	r22
    1c3a:	7f 4f       	sbci	r23, 0xFF	; 255
    1c3c:	8f 4f       	sbci	r24, 0xFF	; 255
    1c3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c40:	08 95       	ret

00001c42 <__floatunsisf>:
    1c42:	e8 94       	clt
    1c44:	09 c0       	rjmp	.+18     	; 0x1c58 <__floatsisf+0x12>

00001c46 <__floatsisf>:
    1c46:	97 fb       	bst	r25, 7
    1c48:	3e f4       	brtc	.+14     	; 0x1c58 <__floatsisf+0x12>
    1c4a:	90 95       	com	r25
    1c4c:	80 95       	com	r24
    1c4e:	70 95       	com	r23
    1c50:	61 95       	neg	r22
    1c52:	7f 4f       	sbci	r23, 0xFF	; 255
    1c54:	8f 4f       	sbci	r24, 0xFF	; 255
    1c56:	9f 4f       	sbci	r25, 0xFF	; 255
    1c58:	99 23       	and	r25, r25
    1c5a:	a9 f0       	breq	.+42     	; 0x1c86 <__floatsisf+0x40>
    1c5c:	f9 2f       	mov	r31, r25
    1c5e:	96 e9       	ldi	r25, 0x96	; 150
    1c60:	bb 27       	eor	r27, r27
    1c62:	93 95       	inc	r25
    1c64:	f6 95       	lsr	r31
    1c66:	87 95       	ror	r24
    1c68:	77 95       	ror	r23
    1c6a:	67 95       	ror	r22
    1c6c:	b7 95       	ror	r27
    1c6e:	f1 11       	cpse	r31, r1
    1c70:	f8 cf       	rjmp	.-16     	; 0x1c62 <__floatsisf+0x1c>
    1c72:	fa f4       	brpl	.+62     	; 0x1cb2 <__floatsisf+0x6c>
    1c74:	bb 0f       	add	r27, r27
    1c76:	11 f4       	brne	.+4      	; 0x1c7c <__floatsisf+0x36>
    1c78:	60 ff       	sbrs	r22, 0
    1c7a:	1b c0       	rjmp	.+54     	; 0x1cb2 <__floatsisf+0x6c>
    1c7c:	6f 5f       	subi	r22, 0xFF	; 255
    1c7e:	7f 4f       	sbci	r23, 0xFF	; 255
    1c80:	8f 4f       	sbci	r24, 0xFF	; 255
    1c82:	9f 4f       	sbci	r25, 0xFF	; 255
    1c84:	16 c0       	rjmp	.+44     	; 0x1cb2 <__floatsisf+0x6c>
    1c86:	88 23       	and	r24, r24
    1c88:	11 f0       	breq	.+4      	; 0x1c8e <__floatsisf+0x48>
    1c8a:	96 e9       	ldi	r25, 0x96	; 150
    1c8c:	11 c0       	rjmp	.+34     	; 0x1cb0 <__floatsisf+0x6a>
    1c8e:	77 23       	and	r23, r23
    1c90:	21 f0       	breq	.+8      	; 0x1c9a <__floatsisf+0x54>
    1c92:	9e e8       	ldi	r25, 0x8E	; 142
    1c94:	87 2f       	mov	r24, r23
    1c96:	76 2f       	mov	r23, r22
    1c98:	05 c0       	rjmp	.+10     	; 0x1ca4 <__floatsisf+0x5e>
    1c9a:	66 23       	and	r22, r22
    1c9c:	71 f0       	breq	.+28     	; 0x1cba <__floatsisf+0x74>
    1c9e:	96 e8       	ldi	r25, 0x86	; 134
    1ca0:	86 2f       	mov	r24, r22
    1ca2:	70 e0       	ldi	r23, 0x00	; 0
    1ca4:	60 e0       	ldi	r22, 0x00	; 0
    1ca6:	2a f0       	brmi	.+10     	; 0x1cb2 <__floatsisf+0x6c>
    1ca8:	9a 95       	dec	r25
    1caa:	66 0f       	add	r22, r22
    1cac:	77 1f       	adc	r23, r23
    1cae:	88 1f       	adc	r24, r24
    1cb0:	da f7       	brpl	.-10     	; 0x1ca8 <__floatsisf+0x62>
    1cb2:	88 0f       	add	r24, r24
    1cb4:	96 95       	lsr	r25
    1cb6:	87 95       	ror	r24
    1cb8:	97 f9       	bld	r25, 7
    1cba:	08 95       	ret

00001cbc <__fp_cmp>:
    1cbc:	99 0f       	add	r25, r25
    1cbe:	00 08       	sbc	r0, r0
    1cc0:	55 0f       	add	r21, r21
    1cc2:	aa 0b       	sbc	r26, r26
    1cc4:	e0 e8       	ldi	r30, 0x80	; 128
    1cc6:	fe ef       	ldi	r31, 0xFE	; 254
    1cc8:	16 16       	cp	r1, r22
    1cca:	17 06       	cpc	r1, r23
    1ccc:	e8 07       	cpc	r30, r24
    1cce:	f9 07       	cpc	r31, r25
    1cd0:	c0 f0       	brcs	.+48     	; 0x1d02 <__fp_cmp+0x46>
    1cd2:	12 16       	cp	r1, r18
    1cd4:	13 06       	cpc	r1, r19
    1cd6:	e4 07       	cpc	r30, r20
    1cd8:	f5 07       	cpc	r31, r21
    1cda:	98 f0       	brcs	.+38     	; 0x1d02 <__fp_cmp+0x46>
    1cdc:	62 1b       	sub	r22, r18
    1cde:	73 0b       	sbc	r23, r19
    1ce0:	84 0b       	sbc	r24, r20
    1ce2:	95 0b       	sbc	r25, r21
    1ce4:	39 f4       	brne	.+14     	; 0x1cf4 <__fp_cmp+0x38>
    1ce6:	0a 26       	eor	r0, r26
    1ce8:	61 f0       	breq	.+24     	; 0x1d02 <__fp_cmp+0x46>
    1cea:	23 2b       	or	r18, r19
    1cec:	24 2b       	or	r18, r20
    1cee:	25 2b       	or	r18, r21
    1cf0:	21 f4       	brne	.+8      	; 0x1cfa <__fp_cmp+0x3e>
    1cf2:	08 95       	ret
    1cf4:	0a 26       	eor	r0, r26
    1cf6:	09 f4       	brne	.+2      	; 0x1cfa <__fp_cmp+0x3e>
    1cf8:	a1 40       	sbci	r26, 0x01	; 1
    1cfa:	a6 95       	lsr	r26
    1cfc:	8f ef       	ldi	r24, 0xFF	; 255
    1cfe:	81 1d       	adc	r24, r1
    1d00:	81 1d       	adc	r24, r1
    1d02:	08 95       	ret

00001d04 <__fp_inf>:
    1d04:	97 f9       	bld	r25, 7
    1d06:	9f 67       	ori	r25, 0x7F	; 127
    1d08:	80 e8       	ldi	r24, 0x80	; 128
    1d0a:	70 e0       	ldi	r23, 0x00	; 0
    1d0c:	60 e0       	ldi	r22, 0x00	; 0
    1d0e:	08 95       	ret

00001d10 <__fp_nan>:
    1d10:	9f ef       	ldi	r25, 0xFF	; 255
    1d12:	80 ec       	ldi	r24, 0xC0	; 192
    1d14:	08 95       	ret

00001d16 <__fp_pscA>:
    1d16:	00 24       	eor	r0, r0
    1d18:	0a 94       	dec	r0
    1d1a:	16 16       	cp	r1, r22
    1d1c:	17 06       	cpc	r1, r23
    1d1e:	18 06       	cpc	r1, r24
    1d20:	09 06       	cpc	r0, r25
    1d22:	08 95       	ret

00001d24 <__fp_pscB>:
    1d24:	00 24       	eor	r0, r0
    1d26:	0a 94       	dec	r0
    1d28:	12 16       	cp	r1, r18
    1d2a:	13 06       	cpc	r1, r19
    1d2c:	14 06       	cpc	r1, r20
    1d2e:	05 06       	cpc	r0, r21
    1d30:	08 95       	ret

00001d32 <__fp_round>:
    1d32:	09 2e       	mov	r0, r25
    1d34:	03 94       	inc	r0
    1d36:	00 0c       	add	r0, r0
    1d38:	11 f4       	brne	.+4      	; 0x1d3e <__fp_round+0xc>
    1d3a:	88 23       	and	r24, r24
    1d3c:	52 f0       	brmi	.+20     	; 0x1d52 <__fp_round+0x20>
    1d3e:	bb 0f       	add	r27, r27
    1d40:	40 f4       	brcc	.+16     	; 0x1d52 <__fp_round+0x20>
    1d42:	bf 2b       	or	r27, r31
    1d44:	11 f4       	brne	.+4      	; 0x1d4a <__fp_round+0x18>
    1d46:	60 ff       	sbrs	r22, 0
    1d48:	04 c0       	rjmp	.+8      	; 0x1d52 <__fp_round+0x20>
    1d4a:	6f 5f       	subi	r22, 0xFF	; 255
    1d4c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d4e:	8f 4f       	sbci	r24, 0xFF	; 255
    1d50:	9f 4f       	sbci	r25, 0xFF	; 255
    1d52:	08 95       	ret

00001d54 <__fp_split3>:
    1d54:	57 fd       	sbrc	r21, 7
    1d56:	90 58       	subi	r25, 0x80	; 128
    1d58:	44 0f       	add	r20, r20
    1d5a:	55 1f       	adc	r21, r21
    1d5c:	59 f0       	breq	.+22     	; 0x1d74 <__fp_splitA+0x10>
    1d5e:	5f 3f       	cpi	r21, 0xFF	; 255
    1d60:	71 f0       	breq	.+28     	; 0x1d7e <__fp_splitA+0x1a>
    1d62:	47 95       	ror	r20

00001d64 <__fp_splitA>:
    1d64:	88 0f       	add	r24, r24
    1d66:	97 fb       	bst	r25, 7
    1d68:	99 1f       	adc	r25, r25
    1d6a:	61 f0       	breq	.+24     	; 0x1d84 <__fp_splitA+0x20>
    1d6c:	9f 3f       	cpi	r25, 0xFF	; 255
    1d6e:	79 f0       	breq	.+30     	; 0x1d8e <__fp_splitA+0x2a>
    1d70:	87 95       	ror	r24
    1d72:	08 95       	ret
    1d74:	12 16       	cp	r1, r18
    1d76:	13 06       	cpc	r1, r19
    1d78:	14 06       	cpc	r1, r20
    1d7a:	55 1f       	adc	r21, r21
    1d7c:	f2 cf       	rjmp	.-28     	; 0x1d62 <__fp_split3+0xe>
    1d7e:	46 95       	lsr	r20
    1d80:	f1 df       	rcall	.-30     	; 0x1d64 <__fp_splitA>
    1d82:	08 c0       	rjmp	.+16     	; 0x1d94 <__fp_splitA+0x30>
    1d84:	16 16       	cp	r1, r22
    1d86:	17 06       	cpc	r1, r23
    1d88:	18 06       	cpc	r1, r24
    1d8a:	99 1f       	adc	r25, r25
    1d8c:	f1 cf       	rjmp	.-30     	; 0x1d70 <__fp_splitA+0xc>
    1d8e:	86 95       	lsr	r24
    1d90:	71 05       	cpc	r23, r1
    1d92:	61 05       	cpc	r22, r1
    1d94:	08 94       	sec
    1d96:	08 95       	ret

00001d98 <__fp_zero>:
    1d98:	e8 94       	clt

00001d9a <__fp_szero>:
    1d9a:	bb 27       	eor	r27, r27
    1d9c:	66 27       	eor	r22, r22
    1d9e:	77 27       	eor	r23, r23
    1da0:	cb 01       	movw	r24, r22
    1da2:	97 f9       	bld	r25, 7
    1da4:	08 95       	ret

00001da6 <__gesf2>:
    1da6:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__fp_cmp>
    1daa:	08 f4       	brcc	.+2      	; 0x1dae <__gesf2+0x8>
    1dac:	8f ef       	ldi	r24, 0xFF	; 255
    1dae:	08 95       	ret

00001db0 <__mulsf3>:
    1db0:	0e 94 eb 0e 	call	0x1dd6	; 0x1dd6 <__mulsf3x>
    1db4:	0c 94 99 0e 	jmp	0x1d32	; 0x1d32 <__fp_round>
    1db8:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__fp_pscA>
    1dbc:	38 f0       	brcs	.+14     	; 0x1dcc <__mulsf3+0x1c>
    1dbe:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__fp_pscB>
    1dc2:	20 f0       	brcs	.+8      	; 0x1dcc <__mulsf3+0x1c>
    1dc4:	95 23       	and	r25, r21
    1dc6:	11 f0       	breq	.+4      	; 0x1dcc <__mulsf3+0x1c>
    1dc8:	0c 94 82 0e 	jmp	0x1d04	; 0x1d04 <__fp_inf>
    1dcc:	0c 94 88 0e 	jmp	0x1d10	; 0x1d10 <__fp_nan>
    1dd0:	11 24       	eor	r1, r1
    1dd2:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__fp_szero>

00001dd6 <__mulsf3x>:
    1dd6:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__fp_split3>
    1dda:	70 f3       	brcs	.-36     	; 0x1db8 <__mulsf3+0x8>

00001ddc <__mulsf3_pse>:
    1ddc:	95 9f       	mul	r25, r21
    1dde:	c1 f3       	breq	.-16     	; 0x1dd0 <__mulsf3+0x20>
    1de0:	95 0f       	add	r25, r21
    1de2:	50 e0       	ldi	r21, 0x00	; 0
    1de4:	55 1f       	adc	r21, r21
    1de6:	62 9f       	mul	r22, r18
    1de8:	f0 01       	movw	r30, r0
    1dea:	72 9f       	mul	r23, r18
    1dec:	bb 27       	eor	r27, r27
    1dee:	f0 0d       	add	r31, r0
    1df0:	b1 1d       	adc	r27, r1
    1df2:	63 9f       	mul	r22, r19
    1df4:	aa 27       	eor	r26, r26
    1df6:	f0 0d       	add	r31, r0
    1df8:	b1 1d       	adc	r27, r1
    1dfa:	aa 1f       	adc	r26, r26
    1dfc:	64 9f       	mul	r22, r20
    1dfe:	66 27       	eor	r22, r22
    1e00:	b0 0d       	add	r27, r0
    1e02:	a1 1d       	adc	r26, r1
    1e04:	66 1f       	adc	r22, r22
    1e06:	82 9f       	mul	r24, r18
    1e08:	22 27       	eor	r18, r18
    1e0a:	b0 0d       	add	r27, r0
    1e0c:	a1 1d       	adc	r26, r1
    1e0e:	62 1f       	adc	r22, r18
    1e10:	73 9f       	mul	r23, r19
    1e12:	b0 0d       	add	r27, r0
    1e14:	a1 1d       	adc	r26, r1
    1e16:	62 1f       	adc	r22, r18
    1e18:	83 9f       	mul	r24, r19
    1e1a:	a0 0d       	add	r26, r0
    1e1c:	61 1d       	adc	r22, r1
    1e1e:	22 1f       	adc	r18, r18
    1e20:	74 9f       	mul	r23, r20
    1e22:	33 27       	eor	r19, r19
    1e24:	a0 0d       	add	r26, r0
    1e26:	61 1d       	adc	r22, r1
    1e28:	23 1f       	adc	r18, r19
    1e2a:	84 9f       	mul	r24, r20
    1e2c:	60 0d       	add	r22, r0
    1e2e:	21 1d       	adc	r18, r1
    1e30:	82 2f       	mov	r24, r18
    1e32:	76 2f       	mov	r23, r22
    1e34:	6a 2f       	mov	r22, r26
    1e36:	11 24       	eor	r1, r1
    1e38:	9f 57       	subi	r25, 0x7F	; 127
    1e3a:	50 40       	sbci	r21, 0x00	; 0
    1e3c:	9a f0       	brmi	.+38     	; 0x1e64 <__mulsf3_pse+0x88>
    1e3e:	f1 f0       	breq	.+60     	; 0x1e7c <__mulsf3_pse+0xa0>
    1e40:	88 23       	and	r24, r24
    1e42:	4a f0       	brmi	.+18     	; 0x1e56 <__mulsf3_pse+0x7a>
    1e44:	ee 0f       	add	r30, r30
    1e46:	ff 1f       	adc	r31, r31
    1e48:	bb 1f       	adc	r27, r27
    1e4a:	66 1f       	adc	r22, r22
    1e4c:	77 1f       	adc	r23, r23
    1e4e:	88 1f       	adc	r24, r24
    1e50:	91 50       	subi	r25, 0x01	; 1
    1e52:	50 40       	sbci	r21, 0x00	; 0
    1e54:	a9 f7       	brne	.-22     	; 0x1e40 <__mulsf3_pse+0x64>
    1e56:	9e 3f       	cpi	r25, 0xFE	; 254
    1e58:	51 05       	cpc	r21, r1
    1e5a:	80 f0       	brcs	.+32     	; 0x1e7c <__mulsf3_pse+0xa0>
    1e5c:	0c 94 82 0e 	jmp	0x1d04	; 0x1d04 <__fp_inf>
    1e60:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__fp_szero>
    1e64:	5f 3f       	cpi	r21, 0xFF	; 255
    1e66:	e4 f3       	brlt	.-8      	; 0x1e60 <__mulsf3_pse+0x84>
    1e68:	98 3e       	cpi	r25, 0xE8	; 232
    1e6a:	d4 f3       	brlt	.-12     	; 0x1e60 <__mulsf3_pse+0x84>
    1e6c:	86 95       	lsr	r24
    1e6e:	77 95       	ror	r23
    1e70:	67 95       	ror	r22
    1e72:	b7 95       	ror	r27
    1e74:	f7 95       	ror	r31
    1e76:	e7 95       	ror	r30
    1e78:	9f 5f       	subi	r25, 0xFF	; 255
    1e7a:	c1 f7       	brne	.-16     	; 0x1e6c <__mulsf3_pse+0x90>
    1e7c:	fe 2b       	or	r31, r30
    1e7e:	88 0f       	add	r24, r24
    1e80:	91 1d       	adc	r25, r1
    1e82:	96 95       	lsr	r25
    1e84:	87 95       	ror	r24
    1e86:	97 f9       	bld	r25, 7
    1e88:	08 95       	ret

00001e8a <__udivmodsi4>:
    1e8a:	a1 e2       	ldi	r26, 0x21	; 33
    1e8c:	1a 2e       	mov	r1, r26
    1e8e:	aa 1b       	sub	r26, r26
    1e90:	bb 1b       	sub	r27, r27
    1e92:	fd 01       	movw	r30, r26
    1e94:	0d c0       	rjmp	.+26     	; 0x1eb0 <__udivmodsi4_ep>

00001e96 <__udivmodsi4_loop>:
    1e96:	aa 1f       	adc	r26, r26
    1e98:	bb 1f       	adc	r27, r27
    1e9a:	ee 1f       	adc	r30, r30
    1e9c:	ff 1f       	adc	r31, r31
    1e9e:	a2 17       	cp	r26, r18
    1ea0:	b3 07       	cpc	r27, r19
    1ea2:	e4 07       	cpc	r30, r20
    1ea4:	f5 07       	cpc	r31, r21
    1ea6:	20 f0       	brcs	.+8      	; 0x1eb0 <__udivmodsi4_ep>
    1ea8:	a2 1b       	sub	r26, r18
    1eaa:	b3 0b       	sbc	r27, r19
    1eac:	e4 0b       	sbc	r30, r20
    1eae:	f5 0b       	sbc	r31, r21

00001eb0 <__udivmodsi4_ep>:
    1eb0:	66 1f       	adc	r22, r22
    1eb2:	77 1f       	adc	r23, r23
    1eb4:	88 1f       	adc	r24, r24
    1eb6:	99 1f       	adc	r25, r25
    1eb8:	1a 94       	dec	r1
    1eba:	69 f7       	brne	.-38     	; 0x1e96 <__udivmodsi4_loop>
    1ebc:	60 95       	com	r22
    1ebe:	70 95       	com	r23
    1ec0:	80 95       	com	r24
    1ec2:	90 95       	com	r25
    1ec4:	9b 01       	movw	r18, r22
    1ec6:	ac 01       	movw	r20, r24
    1ec8:	bd 01       	movw	r22, r26
    1eca:	cf 01       	movw	r24, r30
    1ecc:	08 95       	ret

00001ece <__tablejump2__>:
    1ece:	ee 0f       	add	r30, r30
    1ed0:	ff 1f       	adc	r31, r31
    1ed2:	05 90       	lpm	r0, Z+
    1ed4:	f4 91       	lpm	r31, Z
    1ed6:	e0 2d       	mov	r30, r0
    1ed8:	09 94       	ijmp

00001eda <dtostrf>:
    1eda:	ef 92       	push	r14
    1edc:	0f 93       	push	r16
    1ede:	1f 93       	push	r17
    1ee0:	cf 93       	push	r28
    1ee2:	df 93       	push	r29
    1ee4:	e8 01       	movw	r28, r16
    1ee6:	47 fd       	sbrc	r20, 7
    1ee8:	02 c0       	rjmp	.+4      	; 0x1eee <dtostrf+0x14>
    1eea:	34 e0       	ldi	r19, 0x04	; 4
    1eec:	01 c0       	rjmp	.+2      	; 0x1ef0 <dtostrf+0x16>
    1eee:	34 e1       	ldi	r19, 0x14	; 20
    1ef0:	04 2e       	mov	r0, r20
    1ef2:	00 0c       	add	r0, r0
    1ef4:	55 0b       	sbc	r21, r21
    1ef6:	57 ff       	sbrs	r21, 7
    1ef8:	03 c0       	rjmp	.+6      	; 0x1f00 <dtostrf+0x26>
    1efa:	51 95       	neg	r21
    1efc:	41 95       	neg	r20
    1efe:	51 09       	sbc	r21, r1
    1f00:	e3 2e       	mov	r14, r19
    1f02:	02 2f       	mov	r16, r18
    1f04:	24 2f       	mov	r18, r20
    1f06:	ae 01       	movw	r20, r28
    1f08:	0e 94 bd 0f 	call	0x1f7a	; 0x1f7a <dtoa_prf>
    1f0c:	ce 01       	movw	r24, r28
    1f0e:	df 91       	pop	r29
    1f10:	cf 91       	pop	r28
    1f12:	1f 91       	pop	r17
    1f14:	0f 91       	pop	r16
    1f16:	ef 90       	pop	r14
    1f18:	08 95       	ret

00001f1a <strcat>:
    1f1a:	fb 01       	movw	r30, r22
    1f1c:	dc 01       	movw	r26, r24
    1f1e:	0d 90       	ld	r0, X+
    1f20:	00 20       	and	r0, r0
    1f22:	e9 f7       	brne	.-6      	; 0x1f1e <strcat+0x4>
    1f24:	11 97       	sbiw	r26, 0x01	; 1
    1f26:	01 90       	ld	r0, Z+
    1f28:	0d 92       	st	X+, r0
    1f2a:	00 20       	and	r0, r0
    1f2c:	e1 f7       	brne	.-8      	; 0x1f26 <strcat+0xc>
    1f2e:	08 95       	ret

00001f30 <__itoa_ncheck>:
    1f30:	bb 27       	eor	r27, r27
    1f32:	4a 30       	cpi	r20, 0x0A	; 10
    1f34:	31 f4       	brne	.+12     	; 0x1f42 <__itoa_ncheck+0x12>
    1f36:	99 23       	and	r25, r25
    1f38:	22 f4       	brpl	.+8      	; 0x1f42 <__itoa_ncheck+0x12>
    1f3a:	bd e2       	ldi	r27, 0x2D	; 45
    1f3c:	90 95       	com	r25
    1f3e:	81 95       	neg	r24
    1f40:	9f 4f       	sbci	r25, 0xFF	; 255
    1f42:	0c 94 a4 0f 	jmp	0x1f48	; 0x1f48 <__utoa_common>

00001f46 <__utoa_ncheck>:
    1f46:	bb 27       	eor	r27, r27

00001f48 <__utoa_common>:
    1f48:	fb 01       	movw	r30, r22
    1f4a:	55 27       	eor	r21, r21
    1f4c:	aa 27       	eor	r26, r26
    1f4e:	88 0f       	add	r24, r24
    1f50:	99 1f       	adc	r25, r25
    1f52:	aa 1f       	adc	r26, r26
    1f54:	a4 17       	cp	r26, r20
    1f56:	10 f0       	brcs	.+4      	; 0x1f5c <__utoa_common+0x14>
    1f58:	a4 1b       	sub	r26, r20
    1f5a:	83 95       	inc	r24
    1f5c:	50 51       	subi	r21, 0x10	; 16
    1f5e:	b9 f7       	brne	.-18     	; 0x1f4e <__utoa_common+0x6>
    1f60:	a0 5d       	subi	r26, 0xD0	; 208
    1f62:	aa 33       	cpi	r26, 0x3A	; 58
    1f64:	08 f0       	brcs	.+2      	; 0x1f68 <__utoa_common+0x20>
    1f66:	a9 5d       	subi	r26, 0xD9	; 217
    1f68:	a1 93       	st	Z+, r26
    1f6a:	00 97       	sbiw	r24, 0x00	; 0
    1f6c:	79 f7       	brne	.-34     	; 0x1f4c <__utoa_common+0x4>
    1f6e:	b1 11       	cpse	r27, r1
    1f70:	b1 93       	st	Z+, r27
    1f72:	11 92       	st	Z+, r1
    1f74:	cb 01       	movw	r24, r22
    1f76:	0c 94 ef 11 	jmp	0x23de	; 0x23de <strrev>

00001f7a <dtoa_prf>:
    1f7a:	a9 e0       	ldi	r26, 0x09	; 9
    1f7c:	b0 e0       	ldi	r27, 0x00	; 0
    1f7e:	e3 ec       	ldi	r30, 0xC3	; 195
    1f80:	ff e0       	ldi	r31, 0x0F	; 15
    1f82:	0c 94 05 12 	jmp	0x240a	; 0x240a <__prologue_saves__+0xc>
    1f86:	6a 01       	movw	r12, r20
    1f88:	12 2f       	mov	r17, r18
    1f8a:	b0 2e       	mov	r11, r16
    1f8c:	2b e3       	ldi	r18, 0x3B	; 59
    1f8e:	20 17       	cp	r18, r16
    1f90:	20 f0       	brcs	.+8      	; 0x1f9a <dtoa_prf+0x20>
    1f92:	ff 24       	eor	r15, r15
    1f94:	f3 94       	inc	r15
    1f96:	f0 0e       	add	r15, r16
    1f98:	02 c0       	rjmp	.+4      	; 0x1f9e <dtoa_prf+0x24>
    1f9a:	2c e3       	ldi	r18, 0x3C	; 60
    1f9c:	f2 2e       	mov	r15, r18
    1f9e:	0f 2d       	mov	r16, r15
    1fa0:	27 e0       	ldi	r18, 0x07	; 7
    1fa2:	ae 01       	movw	r20, r28
    1fa4:	4f 5f       	subi	r20, 0xFF	; 255
    1fa6:	5f 4f       	sbci	r21, 0xFF	; 255
    1fa8:	0e 94 17 11 	call	0x222e	; 0x222e <__ftoa_engine>
    1fac:	bc 01       	movw	r22, r24
    1fae:	49 81       	ldd	r20, Y+1	; 0x01
    1fb0:	84 2f       	mov	r24, r20
    1fb2:	89 70       	andi	r24, 0x09	; 9
    1fb4:	81 30       	cpi	r24, 0x01	; 1
    1fb6:	31 f0       	breq	.+12     	; 0x1fc4 <dtoa_prf+0x4a>
    1fb8:	e1 fc       	sbrc	r14, 1
    1fba:	06 c0       	rjmp	.+12     	; 0x1fc8 <dtoa_prf+0x4e>
    1fbc:	e0 fe       	sbrs	r14, 0
    1fbe:	06 c0       	rjmp	.+12     	; 0x1fcc <dtoa_prf+0x52>
    1fc0:	90 e2       	ldi	r25, 0x20	; 32
    1fc2:	05 c0       	rjmp	.+10     	; 0x1fce <dtoa_prf+0x54>
    1fc4:	9d e2       	ldi	r25, 0x2D	; 45
    1fc6:	03 c0       	rjmp	.+6      	; 0x1fce <dtoa_prf+0x54>
    1fc8:	9b e2       	ldi	r25, 0x2B	; 43
    1fca:	01 c0       	rjmp	.+2      	; 0x1fce <dtoa_prf+0x54>
    1fcc:	90 e0       	ldi	r25, 0x00	; 0
    1fce:	5e 2d       	mov	r21, r14
    1fd0:	50 71       	andi	r21, 0x10	; 16
    1fd2:	43 ff       	sbrs	r20, 3
    1fd4:	3c c0       	rjmp	.+120    	; 0x204e <dtoa_prf+0xd4>
    1fd6:	91 11       	cpse	r25, r1
    1fd8:	02 c0       	rjmp	.+4      	; 0x1fde <dtoa_prf+0x64>
    1fda:	83 e0       	ldi	r24, 0x03	; 3
    1fdc:	01 c0       	rjmp	.+2      	; 0x1fe0 <dtoa_prf+0x66>
    1fde:	84 e0       	ldi	r24, 0x04	; 4
    1fe0:	81 17       	cp	r24, r17
    1fe2:	18 f4       	brcc	.+6      	; 0x1fea <dtoa_prf+0x70>
    1fe4:	21 2f       	mov	r18, r17
    1fe6:	28 1b       	sub	r18, r24
    1fe8:	01 c0       	rjmp	.+2      	; 0x1fec <dtoa_prf+0x72>
    1fea:	20 e0       	ldi	r18, 0x00	; 0
    1fec:	51 11       	cpse	r21, r1
    1fee:	0b c0       	rjmp	.+22     	; 0x2006 <dtoa_prf+0x8c>
    1ff0:	f6 01       	movw	r30, r12
    1ff2:	82 2f       	mov	r24, r18
    1ff4:	30 e2       	ldi	r19, 0x20	; 32
    1ff6:	88 23       	and	r24, r24
    1ff8:	19 f0       	breq	.+6      	; 0x2000 <dtoa_prf+0x86>
    1ffa:	31 93       	st	Z+, r19
    1ffc:	81 50       	subi	r24, 0x01	; 1
    1ffe:	fb cf       	rjmp	.-10     	; 0x1ff6 <dtoa_prf+0x7c>
    2000:	c2 0e       	add	r12, r18
    2002:	d1 1c       	adc	r13, r1
    2004:	20 e0       	ldi	r18, 0x00	; 0
    2006:	99 23       	and	r25, r25
    2008:	29 f0       	breq	.+10     	; 0x2014 <dtoa_prf+0x9a>
    200a:	d6 01       	movw	r26, r12
    200c:	9c 93       	st	X, r25
    200e:	f6 01       	movw	r30, r12
    2010:	31 96       	adiw	r30, 0x01	; 1
    2012:	6f 01       	movw	r12, r30
    2014:	c6 01       	movw	r24, r12
    2016:	03 96       	adiw	r24, 0x03	; 3
    2018:	e2 fe       	sbrs	r14, 2
    201a:	0a c0       	rjmp	.+20     	; 0x2030 <dtoa_prf+0xb6>
    201c:	3e e4       	ldi	r19, 0x4E	; 78
    201e:	d6 01       	movw	r26, r12
    2020:	3c 93       	st	X, r19
    2022:	41 e4       	ldi	r20, 0x41	; 65
    2024:	11 96       	adiw	r26, 0x01	; 1
    2026:	4c 93       	st	X, r20
    2028:	11 97       	sbiw	r26, 0x01	; 1
    202a:	12 96       	adiw	r26, 0x02	; 2
    202c:	3c 93       	st	X, r19
    202e:	06 c0       	rjmp	.+12     	; 0x203c <dtoa_prf+0xc2>
    2030:	3e e6       	ldi	r19, 0x6E	; 110
    2032:	f6 01       	movw	r30, r12
    2034:	30 83       	st	Z, r19
    2036:	41 e6       	ldi	r20, 0x61	; 97
    2038:	41 83       	std	Z+1, r20	; 0x01
    203a:	32 83       	std	Z+2, r19	; 0x02
    203c:	fc 01       	movw	r30, r24
    203e:	32 2f       	mov	r19, r18
    2040:	40 e2       	ldi	r20, 0x20	; 32
    2042:	33 23       	and	r19, r19
    2044:	09 f4       	brne	.+2      	; 0x2048 <dtoa_prf+0xce>
    2046:	42 c0       	rjmp	.+132    	; 0x20cc <dtoa_prf+0x152>
    2048:	41 93       	st	Z+, r20
    204a:	31 50       	subi	r19, 0x01	; 1
    204c:	fa cf       	rjmp	.-12     	; 0x2042 <dtoa_prf+0xc8>
    204e:	42 ff       	sbrs	r20, 2
    2050:	44 c0       	rjmp	.+136    	; 0x20da <dtoa_prf+0x160>
    2052:	91 11       	cpse	r25, r1
    2054:	02 c0       	rjmp	.+4      	; 0x205a <dtoa_prf+0xe0>
    2056:	83 e0       	ldi	r24, 0x03	; 3
    2058:	01 c0       	rjmp	.+2      	; 0x205c <dtoa_prf+0xe2>
    205a:	84 e0       	ldi	r24, 0x04	; 4
    205c:	81 17       	cp	r24, r17
    205e:	18 f4       	brcc	.+6      	; 0x2066 <dtoa_prf+0xec>
    2060:	21 2f       	mov	r18, r17
    2062:	28 1b       	sub	r18, r24
    2064:	01 c0       	rjmp	.+2      	; 0x2068 <dtoa_prf+0xee>
    2066:	20 e0       	ldi	r18, 0x00	; 0
    2068:	51 11       	cpse	r21, r1
    206a:	0b c0       	rjmp	.+22     	; 0x2082 <dtoa_prf+0x108>
    206c:	f6 01       	movw	r30, r12
    206e:	82 2f       	mov	r24, r18
    2070:	30 e2       	ldi	r19, 0x20	; 32
    2072:	88 23       	and	r24, r24
    2074:	19 f0       	breq	.+6      	; 0x207c <dtoa_prf+0x102>
    2076:	31 93       	st	Z+, r19
    2078:	81 50       	subi	r24, 0x01	; 1
    207a:	fb cf       	rjmp	.-10     	; 0x2072 <dtoa_prf+0xf8>
    207c:	c2 0e       	add	r12, r18
    207e:	d1 1c       	adc	r13, r1
    2080:	20 e0       	ldi	r18, 0x00	; 0
    2082:	99 23       	and	r25, r25
    2084:	29 f0       	breq	.+10     	; 0x2090 <dtoa_prf+0x116>
    2086:	d6 01       	movw	r26, r12
    2088:	9c 93       	st	X, r25
    208a:	f6 01       	movw	r30, r12
    208c:	31 96       	adiw	r30, 0x01	; 1
    208e:	6f 01       	movw	r12, r30
    2090:	c6 01       	movw	r24, r12
    2092:	03 96       	adiw	r24, 0x03	; 3
    2094:	e2 fe       	sbrs	r14, 2
    2096:	0b c0       	rjmp	.+22     	; 0x20ae <dtoa_prf+0x134>
    2098:	39 e4       	ldi	r19, 0x49	; 73
    209a:	d6 01       	movw	r26, r12
    209c:	3c 93       	st	X, r19
    209e:	3e e4       	ldi	r19, 0x4E	; 78
    20a0:	11 96       	adiw	r26, 0x01	; 1
    20a2:	3c 93       	st	X, r19
    20a4:	11 97       	sbiw	r26, 0x01	; 1
    20a6:	36 e4       	ldi	r19, 0x46	; 70
    20a8:	12 96       	adiw	r26, 0x02	; 2
    20aa:	3c 93       	st	X, r19
    20ac:	07 c0       	rjmp	.+14     	; 0x20bc <dtoa_prf+0x142>
    20ae:	39 e6       	ldi	r19, 0x69	; 105
    20b0:	f6 01       	movw	r30, r12
    20b2:	30 83       	st	Z, r19
    20b4:	3e e6       	ldi	r19, 0x6E	; 110
    20b6:	31 83       	std	Z+1, r19	; 0x01
    20b8:	36 e6       	ldi	r19, 0x66	; 102
    20ba:	32 83       	std	Z+2, r19	; 0x02
    20bc:	fc 01       	movw	r30, r24
    20be:	32 2f       	mov	r19, r18
    20c0:	40 e2       	ldi	r20, 0x20	; 32
    20c2:	33 23       	and	r19, r19
    20c4:	19 f0       	breq	.+6      	; 0x20cc <dtoa_prf+0x152>
    20c6:	41 93       	st	Z+, r20
    20c8:	31 50       	subi	r19, 0x01	; 1
    20ca:	fb cf       	rjmp	.-10     	; 0x20c2 <dtoa_prf+0x148>
    20cc:	fc 01       	movw	r30, r24
    20ce:	e2 0f       	add	r30, r18
    20d0:	f1 1d       	adc	r31, r1
    20d2:	10 82       	st	Z, r1
    20d4:	8e ef       	ldi	r24, 0xFE	; 254
    20d6:	9f ef       	ldi	r25, 0xFF	; 255
    20d8:	a6 c0       	rjmp	.+332    	; 0x2226 <dtoa_prf+0x2ac>
    20da:	21 e0       	ldi	r18, 0x01	; 1
    20dc:	30 e0       	ldi	r19, 0x00	; 0
    20de:	91 11       	cpse	r25, r1
    20e0:	02 c0       	rjmp	.+4      	; 0x20e6 <dtoa_prf+0x16c>
    20e2:	20 e0       	ldi	r18, 0x00	; 0
    20e4:	30 e0       	ldi	r19, 0x00	; 0
    20e6:	16 16       	cp	r1, r22
    20e8:	17 06       	cpc	r1, r23
    20ea:	1c f4       	brge	.+6      	; 0x20f2 <dtoa_prf+0x178>
    20ec:	fb 01       	movw	r30, r22
    20ee:	31 96       	adiw	r30, 0x01	; 1
    20f0:	02 c0       	rjmp	.+4      	; 0x20f6 <dtoa_prf+0x17c>
    20f2:	e1 e0       	ldi	r30, 0x01	; 1
    20f4:	f0 e0       	ldi	r31, 0x00	; 0
    20f6:	2e 0f       	add	r18, r30
    20f8:	3f 1f       	adc	r19, r31
    20fa:	bb 20       	and	r11, r11
    20fc:	21 f0       	breq	.+8      	; 0x2106 <dtoa_prf+0x18c>
    20fe:	eb 2d       	mov	r30, r11
    2100:	f0 e0       	ldi	r31, 0x00	; 0
    2102:	31 96       	adiw	r30, 0x01	; 1
    2104:	02 c0       	rjmp	.+4      	; 0x210a <dtoa_prf+0x190>
    2106:	e0 e0       	ldi	r30, 0x00	; 0
    2108:	f0 e0       	ldi	r31, 0x00	; 0
    210a:	2e 0f       	add	r18, r30
    210c:	3f 1f       	adc	r19, r31
    210e:	e1 2f       	mov	r30, r17
    2110:	f0 e0       	ldi	r31, 0x00	; 0
    2112:	2e 17       	cp	r18, r30
    2114:	3f 07       	cpc	r19, r31
    2116:	1c f4       	brge	.+6      	; 0x211e <dtoa_prf+0x1a4>
    2118:	12 1b       	sub	r17, r18
    211a:	21 2f       	mov	r18, r17
    211c:	01 c0       	rjmp	.+2      	; 0x2120 <dtoa_prf+0x1a6>
    211e:	20 e0       	ldi	r18, 0x00	; 0
    2120:	8e 2d       	mov	r24, r14
    2122:	88 71       	andi	r24, 0x18	; 24
    2124:	59 f4       	brne	.+22     	; 0x213c <dtoa_prf+0x1c2>
    2126:	f6 01       	movw	r30, r12
    2128:	82 2f       	mov	r24, r18
    212a:	30 e2       	ldi	r19, 0x20	; 32
    212c:	88 23       	and	r24, r24
    212e:	19 f0       	breq	.+6      	; 0x2136 <dtoa_prf+0x1bc>
    2130:	31 93       	st	Z+, r19
    2132:	81 50       	subi	r24, 0x01	; 1
    2134:	fb cf       	rjmp	.-10     	; 0x212c <dtoa_prf+0x1b2>
    2136:	c2 0e       	add	r12, r18
    2138:	d1 1c       	adc	r13, r1
    213a:	20 e0       	ldi	r18, 0x00	; 0
    213c:	99 23       	and	r25, r25
    213e:	29 f0       	breq	.+10     	; 0x214a <dtoa_prf+0x1d0>
    2140:	d6 01       	movw	r26, r12
    2142:	9c 93       	st	X, r25
    2144:	f6 01       	movw	r30, r12
    2146:	31 96       	adiw	r30, 0x01	; 1
    2148:	6f 01       	movw	r12, r30
    214a:	51 11       	cpse	r21, r1
    214c:	0b c0       	rjmp	.+22     	; 0x2164 <dtoa_prf+0x1ea>
    214e:	f6 01       	movw	r30, r12
    2150:	82 2f       	mov	r24, r18
    2152:	90 e3       	ldi	r25, 0x30	; 48
    2154:	88 23       	and	r24, r24
    2156:	19 f0       	breq	.+6      	; 0x215e <dtoa_prf+0x1e4>
    2158:	91 93       	st	Z+, r25
    215a:	81 50       	subi	r24, 0x01	; 1
    215c:	fb cf       	rjmp	.-10     	; 0x2154 <dtoa_prf+0x1da>
    215e:	c2 0e       	add	r12, r18
    2160:	d1 1c       	adc	r13, r1
    2162:	20 e0       	ldi	r18, 0x00	; 0
    2164:	0f 2d       	mov	r16, r15
    2166:	06 0f       	add	r16, r22
    2168:	9a 81       	ldd	r25, Y+2	; 0x02
    216a:	34 2f       	mov	r19, r20
    216c:	30 71       	andi	r19, 0x10	; 16
    216e:	44 ff       	sbrs	r20, 4
    2170:	03 c0       	rjmp	.+6      	; 0x2178 <dtoa_prf+0x1fe>
    2172:	91 33       	cpi	r25, 0x31	; 49
    2174:	09 f4       	brne	.+2      	; 0x2178 <dtoa_prf+0x1fe>
    2176:	01 50       	subi	r16, 0x01	; 1
    2178:	10 16       	cp	r1, r16
    217a:	24 f4       	brge	.+8      	; 0x2184 <dtoa_prf+0x20a>
    217c:	09 30       	cpi	r16, 0x09	; 9
    217e:	18 f0       	brcs	.+6      	; 0x2186 <dtoa_prf+0x20c>
    2180:	08 e0       	ldi	r16, 0x08	; 8
    2182:	01 c0       	rjmp	.+2      	; 0x2186 <dtoa_prf+0x20c>
    2184:	01 e0       	ldi	r16, 0x01	; 1
    2186:	ab 01       	movw	r20, r22
    2188:	77 ff       	sbrs	r23, 7
    218a:	02 c0       	rjmp	.+4      	; 0x2190 <dtoa_prf+0x216>
    218c:	40 e0       	ldi	r20, 0x00	; 0
    218e:	50 e0       	ldi	r21, 0x00	; 0
    2190:	fb 01       	movw	r30, r22
    2192:	e4 1b       	sub	r30, r20
    2194:	f5 0b       	sbc	r31, r21
    2196:	a1 e0       	ldi	r26, 0x01	; 1
    2198:	b0 e0       	ldi	r27, 0x00	; 0
    219a:	ac 0f       	add	r26, r28
    219c:	bd 1f       	adc	r27, r29
    219e:	ea 0f       	add	r30, r26
    21a0:	fb 1f       	adc	r31, r27
    21a2:	8e e2       	ldi	r24, 0x2E	; 46
    21a4:	a8 2e       	mov	r10, r24
    21a6:	4b 01       	movw	r8, r22
    21a8:	80 1a       	sub	r8, r16
    21aa:	91 08       	sbc	r9, r1
    21ac:	0b 2d       	mov	r16, r11
    21ae:	10 e0       	ldi	r17, 0x00	; 0
    21b0:	11 95       	neg	r17
    21b2:	01 95       	neg	r16
    21b4:	11 09       	sbc	r17, r1
    21b6:	4f 3f       	cpi	r20, 0xFF	; 255
    21b8:	bf ef       	ldi	r27, 0xFF	; 255
    21ba:	5b 07       	cpc	r21, r27
    21bc:	21 f4       	brne	.+8      	; 0x21c6 <dtoa_prf+0x24c>
    21be:	d6 01       	movw	r26, r12
    21c0:	ac 92       	st	X, r10
    21c2:	11 96       	adiw	r26, 0x01	; 1
    21c4:	6d 01       	movw	r12, r26
    21c6:	64 17       	cp	r22, r20
    21c8:	75 07       	cpc	r23, r21
    21ca:	2c f0       	brlt	.+10     	; 0x21d6 <dtoa_prf+0x25c>
    21cc:	84 16       	cp	r8, r20
    21ce:	95 06       	cpc	r9, r21
    21d0:	14 f4       	brge	.+4      	; 0x21d6 <dtoa_prf+0x25c>
    21d2:	81 81       	ldd	r24, Z+1	; 0x01
    21d4:	01 c0       	rjmp	.+2      	; 0x21d8 <dtoa_prf+0x25e>
    21d6:	80 e3       	ldi	r24, 0x30	; 48
    21d8:	41 50       	subi	r20, 0x01	; 1
    21da:	51 09       	sbc	r21, r1
    21dc:	31 96       	adiw	r30, 0x01	; 1
    21de:	d6 01       	movw	r26, r12
    21e0:	11 96       	adiw	r26, 0x01	; 1
    21e2:	7d 01       	movw	r14, r26
    21e4:	40 17       	cp	r20, r16
    21e6:	51 07       	cpc	r21, r17
    21e8:	24 f0       	brlt	.+8      	; 0x21f2 <dtoa_prf+0x278>
    21ea:	d6 01       	movw	r26, r12
    21ec:	8c 93       	st	X, r24
    21ee:	67 01       	movw	r12, r14
    21f0:	e2 cf       	rjmp	.-60     	; 0x21b6 <dtoa_prf+0x23c>
    21f2:	64 17       	cp	r22, r20
    21f4:	75 07       	cpc	r23, r21
    21f6:	39 f4       	brne	.+14     	; 0x2206 <dtoa_prf+0x28c>
    21f8:	96 33       	cpi	r25, 0x36	; 54
    21fa:	20 f4       	brcc	.+8      	; 0x2204 <dtoa_prf+0x28a>
    21fc:	95 33       	cpi	r25, 0x35	; 53
    21fe:	19 f4       	brne	.+6      	; 0x2206 <dtoa_prf+0x28c>
    2200:	31 11       	cpse	r19, r1
    2202:	01 c0       	rjmp	.+2      	; 0x2206 <dtoa_prf+0x28c>
    2204:	81 e3       	ldi	r24, 0x31	; 49
    2206:	f6 01       	movw	r30, r12
    2208:	80 83       	st	Z, r24
    220a:	f7 01       	movw	r30, r14
    220c:	82 2f       	mov	r24, r18
    220e:	90 e2       	ldi	r25, 0x20	; 32
    2210:	88 23       	and	r24, r24
    2212:	19 f0       	breq	.+6      	; 0x221a <dtoa_prf+0x2a0>
    2214:	91 93       	st	Z+, r25
    2216:	81 50       	subi	r24, 0x01	; 1
    2218:	fb cf       	rjmp	.-10     	; 0x2210 <dtoa_prf+0x296>
    221a:	f7 01       	movw	r30, r14
    221c:	e2 0f       	add	r30, r18
    221e:	f1 1d       	adc	r31, r1
    2220:	10 82       	st	Z, r1
    2222:	80 e0       	ldi	r24, 0x00	; 0
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	29 96       	adiw	r28, 0x09	; 9
    2228:	ec e0       	ldi	r30, 0x0C	; 12
    222a:	0c 94 21 12 	jmp	0x2442	; 0x2442 <__epilogue_restores__+0xc>

0000222e <__ftoa_engine>:
    222e:	28 30       	cpi	r18, 0x08	; 8
    2230:	08 f0       	brcs	.+2      	; 0x2234 <__ftoa_engine+0x6>
    2232:	27 e0       	ldi	r18, 0x07	; 7
    2234:	33 27       	eor	r19, r19
    2236:	da 01       	movw	r26, r20
    2238:	99 0f       	add	r25, r25
    223a:	31 1d       	adc	r19, r1
    223c:	87 fd       	sbrc	r24, 7
    223e:	91 60       	ori	r25, 0x01	; 1
    2240:	00 96       	adiw	r24, 0x00	; 0
    2242:	61 05       	cpc	r22, r1
    2244:	71 05       	cpc	r23, r1
    2246:	39 f4       	brne	.+14     	; 0x2256 <__ftoa_engine+0x28>
    2248:	32 60       	ori	r19, 0x02	; 2
    224a:	2e 5f       	subi	r18, 0xFE	; 254
    224c:	3d 93       	st	X+, r19
    224e:	30 e3       	ldi	r19, 0x30	; 48
    2250:	2a 95       	dec	r18
    2252:	e1 f7       	brne	.-8      	; 0x224c <__ftoa_engine+0x1e>
    2254:	08 95       	ret
    2256:	9f 3f       	cpi	r25, 0xFF	; 255
    2258:	30 f0       	brcs	.+12     	; 0x2266 <__ftoa_engine+0x38>
    225a:	80 38       	cpi	r24, 0x80	; 128
    225c:	71 05       	cpc	r23, r1
    225e:	61 05       	cpc	r22, r1
    2260:	09 f0       	breq	.+2      	; 0x2264 <__ftoa_engine+0x36>
    2262:	3c 5f       	subi	r19, 0xFC	; 252
    2264:	3c 5f       	subi	r19, 0xFC	; 252
    2266:	3d 93       	st	X+, r19
    2268:	91 30       	cpi	r25, 0x01	; 1
    226a:	08 f0       	brcs	.+2      	; 0x226e <__ftoa_engine+0x40>
    226c:	80 68       	ori	r24, 0x80	; 128
    226e:	91 1d       	adc	r25, r1
    2270:	df 93       	push	r29
    2272:	cf 93       	push	r28
    2274:	1f 93       	push	r17
    2276:	0f 93       	push	r16
    2278:	ff 92       	push	r15
    227a:	ef 92       	push	r14
    227c:	19 2f       	mov	r17, r25
    227e:	98 7f       	andi	r25, 0xF8	; 248
    2280:	96 95       	lsr	r25
    2282:	e9 2f       	mov	r30, r25
    2284:	96 95       	lsr	r25
    2286:	96 95       	lsr	r25
    2288:	e9 0f       	add	r30, r25
    228a:	ff 27       	eor	r31, r31
    228c:	e2 50       	subi	r30, 0x02	; 2
    228e:	fe 4f       	sbci	r31, 0xFE	; 254
    2290:	99 27       	eor	r25, r25
    2292:	33 27       	eor	r19, r19
    2294:	ee 24       	eor	r14, r14
    2296:	ff 24       	eor	r15, r15
    2298:	a7 01       	movw	r20, r14
    229a:	e7 01       	movw	r28, r14
    229c:	05 90       	lpm	r0, Z+
    229e:	08 94       	sec
    22a0:	07 94       	ror	r0
    22a2:	28 f4       	brcc	.+10     	; 0x22ae <__ftoa_engine+0x80>
    22a4:	36 0f       	add	r19, r22
    22a6:	e7 1e       	adc	r14, r23
    22a8:	f8 1e       	adc	r15, r24
    22aa:	49 1f       	adc	r20, r25
    22ac:	51 1d       	adc	r21, r1
    22ae:	66 0f       	add	r22, r22
    22b0:	77 1f       	adc	r23, r23
    22b2:	88 1f       	adc	r24, r24
    22b4:	99 1f       	adc	r25, r25
    22b6:	06 94       	lsr	r0
    22b8:	a1 f7       	brne	.-24     	; 0x22a2 <__ftoa_engine+0x74>
    22ba:	05 90       	lpm	r0, Z+
    22bc:	07 94       	ror	r0
    22be:	28 f4       	brcc	.+10     	; 0x22ca <__ftoa_engine+0x9c>
    22c0:	e7 0e       	add	r14, r23
    22c2:	f8 1e       	adc	r15, r24
    22c4:	49 1f       	adc	r20, r25
    22c6:	56 1f       	adc	r21, r22
    22c8:	c1 1d       	adc	r28, r1
    22ca:	77 0f       	add	r23, r23
    22cc:	88 1f       	adc	r24, r24
    22ce:	99 1f       	adc	r25, r25
    22d0:	66 1f       	adc	r22, r22
    22d2:	06 94       	lsr	r0
    22d4:	a1 f7       	brne	.-24     	; 0x22be <__ftoa_engine+0x90>
    22d6:	05 90       	lpm	r0, Z+
    22d8:	07 94       	ror	r0
    22da:	28 f4       	brcc	.+10     	; 0x22e6 <__ftoa_engine+0xb8>
    22dc:	f8 0e       	add	r15, r24
    22de:	49 1f       	adc	r20, r25
    22e0:	56 1f       	adc	r21, r22
    22e2:	c7 1f       	adc	r28, r23
    22e4:	d1 1d       	adc	r29, r1
    22e6:	88 0f       	add	r24, r24
    22e8:	99 1f       	adc	r25, r25
    22ea:	66 1f       	adc	r22, r22
    22ec:	77 1f       	adc	r23, r23
    22ee:	06 94       	lsr	r0
    22f0:	a1 f7       	brne	.-24     	; 0x22da <__ftoa_engine+0xac>
    22f2:	05 90       	lpm	r0, Z+
    22f4:	07 94       	ror	r0
    22f6:	20 f4       	brcc	.+8      	; 0x2300 <__ftoa_engine+0xd2>
    22f8:	49 0f       	add	r20, r25
    22fa:	56 1f       	adc	r21, r22
    22fc:	c7 1f       	adc	r28, r23
    22fe:	d8 1f       	adc	r29, r24
    2300:	99 0f       	add	r25, r25
    2302:	66 1f       	adc	r22, r22
    2304:	77 1f       	adc	r23, r23
    2306:	88 1f       	adc	r24, r24
    2308:	06 94       	lsr	r0
    230a:	a9 f7       	brne	.-22     	; 0x22f6 <__ftoa_engine+0xc8>
    230c:	84 91       	lpm	r24, Z
    230e:	10 95       	com	r17
    2310:	17 70       	andi	r17, 0x07	; 7
    2312:	41 f0       	breq	.+16     	; 0x2324 <__ftoa_engine+0xf6>
    2314:	d6 95       	lsr	r29
    2316:	c7 95       	ror	r28
    2318:	57 95       	ror	r21
    231a:	47 95       	ror	r20
    231c:	f7 94       	ror	r15
    231e:	e7 94       	ror	r14
    2320:	1a 95       	dec	r17
    2322:	c1 f7       	brne	.-16     	; 0x2314 <__ftoa_engine+0xe6>
    2324:	e4 ea       	ldi	r30, 0xA4	; 164
    2326:	f1 e0       	ldi	r31, 0x01	; 1
    2328:	68 94       	set
    232a:	15 90       	lpm	r1, Z+
    232c:	15 91       	lpm	r17, Z+
    232e:	35 91       	lpm	r19, Z+
    2330:	65 91       	lpm	r22, Z+
    2332:	95 91       	lpm	r25, Z+
    2334:	05 90       	lpm	r0, Z+
    2336:	7f e2       	ldi	r23, 0x2F	; 47
    2338:	73 95       	inc	r23
    233a:	e1 18       	sub	r14, r1
    233c:	f1 0a       	sbc	r15, r17
    233e:	43 0b       	sbc	r20, r19
    2340:	56 0b       	sbc	r21, r22
    2342:	c9 0b       	sbc	r28, r25
    2344:	d0 09       	sbc	r29, r0
    2346:	c0 f7       	brcc	.-16     	; 0x2338 <__ftoa_engine+0x10a>
    2348:	e1 0c       	add	r14, r1
    234a:	f1 1e       	adc	r15, r17
    234c:	43 1f       	adc	r20, r19
    234e:	56 1f       	adc	r21, r22
    2350:	c9 1f       	adc	r28, r25
    2352:	d0 1d       	adc	r29, r0
    2354:	7e f4       	brtc	.+30     	; 0x2374 <__ftoa_engine+0x146>
    2356:	70 33       	cpi	r23, 0x30	; 48
    2358:	11 f4       	brne	.+4      	; 0x235e <__ftoa_engine+0x130>
    235a:	8a 95       	dec	r24
    235c:	e6 cf       	rjmp	.-52     	; 0x232a <__ftoa_engine+0xfc>
    235e:	e8 94       	clt
    2360:	01 50       	subi	r16, 0x01	; 1
    2362:	30 f0       	brcs	.+12     	; 0x2370 <__ftoa_engine+0x142>
    2364:	08 0f       	add	r16, r24
    2366:	0a f4       	brpl	.+2      	; 0x236a <__ftoa_engine+0x13c>
    2368:	00 27       	eor	r16, r16
    236a:	02 17       	cp	r16, r18
    236c:	08 f4       	brcc	.+2      	; 0x2370 <__ftoa_engine+0x142>
    236e:	20 2f       	mov	r18, r16
    2370:	23 95       	inc	r18
    2372:	02 2f       	mov	r16, r18
    2374:	7a 33       	cpi	r23, 0x3A	; 58
    2376:	28 f0       	brcs	.+10     	; 0x2382 <__ftoa_engine+0x154>
    2378:	79 e3       	ldi	r23, 0x39	; 57
    237a:	7d 93       	st	X+, r23
    237c:	2a 95       	dec	r18
    237e:	e9 f7       	brne	.-6      	; 0x237a <__ftoa_engine+0x14c>
    2380:	10 c0       	rjmp	.+32     	; 0x23a2 <__ftoa_engine+0x174>
    2382:	7d 93       	st	X+, r23
    2384:	2a 95       	dec	r18
    2386:	89 f6       	brne	.-94     	; 0x232a <__ftoa_engine+0xfc>
    2388:	06 94       	lsr	r0
    238a:	97 95       	ror	r25
    238c:	67 95       	ror	r22
    238e:	37 95       	ror	r19
    2390:	17 95       	ror	r17
    2392:	17 94       	ror	r1
    2394:	e1 18       	sub	r14, r1
    2396:	f1 0a       	sbc	r15, r17
    2398:	43 0b       	sbc	r20, r19
    239a:	56 0b       	sbc	r21, r22
    239c:	c9 0b       	sbc	r28, r25
    239e:	d0 09       	sbc	r29, r0
    23a0:	98 f0       	brcs	.+38     	; 0x23c8 <__ftoa_engine+0x19a>
    23a2:	23 95       	inc	r18
    23a4:	7e 91       	ld	r23, -X
    23a6:	73 95       	inc	r23
    23a8:	7a 33       	cpi	r23, 0x3A	; 58
    23aa:	08 f0       	brcs	.+2      	; 0x23ae <__ftoa_engine+0x180>
    23ac:	70 e3       	ldi	r23, 0x30	; 48
    23ae:	7c 93       	st	X, r23
    23b0:	20 13       	cpse	r18, r16
    23b2:	b8 f7       	brcc	.-18     	; 0x23a2 <__ftoa_engine+0x174>
    23b4:	7e 91       	ld	r23, -X
    23b6:	70 61       	ori	r23, 0x10	; 16
    23b8:	7d 93       	st	X+, r23
    23ba:	30 f0       	brcs	.+12     	; 0x23c8 <__ftoa_engine+0x19a>
    23bc:	83 95       	inc	r24
    23be:	71 e3       	ldi	r23, 0x31	; 49
    23c0:	7d 93       	st	X+, r23
    23c2:	70 e3       	ldi	r23, 0x30	; 48
    23c4:	2a 95       	dec	r18
    23c6:	e1 f7       	brne	.-8      	; 0x23c0 <__ftoa_engine+0x192>
    23c8:	11 24       	eor	r1, r1
    23ca:	ef 90       	pop	r14
    23cc:	ff 90       	pop	r15
    23ce:	0f 91       	pop	r16
    23d0:	1f 91       	pop	r17
    23d2:	cf 91       	pop	r28
    23d4:	df 91       	pop	r29
    23d6:	99 27       	eor	r25, r25
    23d8:	87 fd       	sbrc	r24, 7
    23da:	90 95       	com	r25
    23dc:	08 95       	ret

000023de <strrev>:
    23de:	dc 01       	movw	r26, r24
    23e0:	fc 01       	movw	r30, r24
    23e2:	67 2f       	mov	r22, r23
    23e4:	71 91       	ld	r23, Z+
    23e6:	77 23       	and	r23, r23
    23e8:	e1 f7       	brne	.-8      	; 0x23e2 <strrev+0x4>
    23ea:	32 97       	sbiw	r30, 0x02	; 2
    23ec:	04 c0       	rjmp	.+8      	; 0x23f6 <strrev+0x18>
    23ee:	7c 91       	ld	r23, X
    23f0:	6d 93       	st	X+, r22
    23f2:	70 83       	st	Z, r23
    23f4:	62 91       	ld	r22, -Z
    23f6:	ae 17       	cp	r26, r30
    23f8:	bf 07       	cpc	r27, r31
    23fa:	c8 f3       	brcs	.-14     	; 0x23ee <strrev+0x10>
    23fc:	08 95       	ret

000023fe <__prologue_saves__>:
    23fe:	2f 92       	push	r2
    2400:	3f 92       	push	r3
    2402:	4f 92       	push	r4
    2404:	5f 92       	push	r5
    2406:	6f 92       	push	r6
    2408:	7f 92       	push	r7
    240a:	8f 92       	push	r8
    240c:	9f 92       	push	r9
    240e:	af 92       	push	r10
    2410:	bf 92       	push	r11
    2412:	cf 92       	push	r12
    2414:	df 92       	push	r13
    2416:	ef 92       	push	r14
    2418:	ff 92       	push	r15
    241a:	0f 93       	push	r16
    241c:	1f 93       	push	r17
    241e:	cf 93       	push	r28
    2420:	df 93       	push	r29
    2422:	cd b7       	in	r28, 0x3d	; 61
    2424:	de b7       	in	r29, 0x3e	; 62
    2426:	ca 1b       	sub	r28, r26
    2428:	db 0b       	sbc	r29, r27
    242a:	0f b6       	in	r0, 0x3f	; 63
    242c:	f8 94       	cli
    242e:	de bf       	out	0x3e, r29	; 62
    2430:	0f be       	out	0x3f, r0	; 63
    2432:	cd bf       	out	0x3d, r28	; 61
    2434:	09 94       	ijmp

00002436 <__epilogue_restores__>:
    2436:	2a 88       	ldd	r2, Y+18	; 0x12
    2438:	39 88       	ldd	r3, Y+17	; 0x11
    243a:	48 88       	ldd	r4, Y+16	; 0x10
    243c:	5f 84       	ldd	r5, Y+15	; 0x0f
    243e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2440:	7d 84       	ldd	r7, Y+13	; 0x0d
    2442:	8c 84       	ldd	r8, Y+12	; 0x0c
    2444:	9b 84       	ldd	r9, Y+11	; 0x0b
    2446:	aa 84       	ldd	r10, Y+10	; 0x0a
    2448:	b9 84       	ldd	r11, Y+9	; 0x09
    244a:	c8 84       	ldd	r12, Y+8	; 0x08
    244c:	df 80       	ldd	r13, Y+7	; 0x07
    244e:	ee 80       	ldd	r14, Y+6	; 0x06
    2450:	fd 80       	ldd	r15, Y+5	; 0x05
    2452:	0c 81       	ldd	r16, Y+4	; 0x04
    2454:	1b 81       	ldd	r17, Y+3	; 0x03
    2456:	aa 81       	ldd	r26, Y+2	; 0x02
    2458:	b9 81       	ldd	r27, Y+1	; 0x01
    245a:	ce 0f       	add	r28, r30
    245c:	d1 1d       	adc	r29, r1
    245e:	0f b6       	in	r0, 0x3f	; 63
    2460:	f8 94       	cli
    2462:	de bf       	out	0x3e, r29	; 62
    2464:	0f be       	out	0x3f, r0	; 63
    2466:	cd bf       	out	0x3d, r28	; 61
    2468:	ed 01       	movw	r28, r26
    246a:	08 95       	ret

0000246c <_exit>:
    246c:	f8 94       	cli

0000246e <__stop_program>:
    246e:	ff cf       	rjmp	.-2      	; 0x246e <__stop_program>
